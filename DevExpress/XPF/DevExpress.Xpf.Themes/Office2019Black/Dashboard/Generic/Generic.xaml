<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxprg="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid" xmlns:dxdash="http://schemas.devexpress.com/winfx/2008/xaml/dashboard" xmlns:dxdasht="http://schemas.devexpress.com/winfx/2008/xaml/dashboard/themekeys" xmlns:dxdashi="http://schemas.devexpress.com/winfx/2008/xaml/dashboard/internal" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking" xmlns:dxp="http://schemas.devexpress.com/winfx/2008/xaml/printing" xmlns:dxpb="http://schemas.devexpress.com/winfx/2008/xaml/printing/bars" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:componentmodel="clr-namespace:System.ComponentModel;assembly=System" xmlns:dxdove="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <ResourceDictionary.MergedDictionaries>
    <!--<ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/DeltaValuePresenter.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/CardItem.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/GridItem.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/PivotItem.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/MapItem.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/ChartItem.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/ComboBoxItem.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/ListBoxItem.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/TreeViewItem.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/TextBoxItem.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/ImageItem.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/BoundImageItem.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/RangeItem.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/TreemapItem.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/GaugeItem.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Dashboard/Generic/PieItem.xaml" />-->
    <dxdst:ResourceDictionaryEx Source="{dxdo:DockingDynamicThemeResourceExtension DockLayoutManagerElements.xaml, ResourcePath=Themes, ResourcePathInTheme='Docking', TypeInTargetAssembly={x:Type dxdo:LayoutGroup}, UseGeneric=True}" />
  </ResourceDictionary.MergedDictionaries>
  <dxdashi:EventToCommandConverter x:Key="EventToCommandConverter" />
  <dxdashi:ParametersTemplateSelector x:Key="ParametersControlEditorTemplateSelector">
    <dxdashi:ParametersTemplateSelector.IntegerTemplate>
      <DataTemplate>
        <dxe:SpinEdit x:Name="PART_Editor" NullText="" AllowNullInput="{Binding Parent.Value.Model.AllowNull}" IsFloatValue="False" />
      </DataTemplate>
    </dxdashi:ParametersTemplateSelector.IntegerTemplate>
    <dxdashi:ParametersTemplateSelector.GuidTemplate>
      <DataTemplate>
        <dxe:TextEdit x:Name="PART_Editor" NullText="" MaskType="Simple" AllowNullInput="{Binding Parent.Value.Model.AllowNull}" Mask="aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa" />
      </DataTemplate>
    </dxdashi:ParametersTemplateSelector.GuidTemplate>
    <dxdashi:ParametersTemplateSelector.FloatingTemplate>
      <DataTemplate>
        <dxe:SpinEdit x:Name="PART_Editor" NullText="" AllowNullInput="{Binding Parent.Value.Model.AllowNull}" IsFloatValue="True" />
      </DataTemplate>
    </dxdashi:ParametersTemplateSelector.FloatingTemplate>
    <dxdashi:ParametersTemplateSelector.DateTimeTemplate>
      <DataTemplate>
        <dxe:DateEdit x:Name="PART_Editor" NullText="" AllowNullInput="{Binding Parent.Value.Model.AllowNull}" />
      </DataTemplate>
    </dxdashi:ParametersTemplateSelector.DateTimeTemplate>
    <dxdashi:ParametersTemplateSelector.BooleanTemplate>
      <DataTemplate>
        <dxe:CheckEdit x:Name="PART_Editor" NullText="" IsThreeState="{Binding Parent.Value.Model.AllowNull}" />
      </DataTemplate>
    </dxdashi:ParametersTemplateSelector.BooleanTemplate>
    <dxdashi:ParametersTemplateSelector.SimpleTemplate>
      <DataTemplate>
        <dxe:TextEdit x:Name="PART_Editor" NullText="" AllowNullInput="{Binding Parent.Value.Model.AllowNull}" />
      </DataTemplate>
    </dxdashi:ParametersTemplateSelector.SimpleTemplate>
    <dxdashi:ParametersTemplateSelector.ListTemplate>
      <DataTemplate>
        <dxe:ComboBoxEdit AllowUpdateTwoWayBoundPropertiesOnSynchronization="True" x:Name="PART_Editor" DisplayMember="DisplayText" ValueMember="Value" ItemsSource="{Binding Parent.Value.Values,Mode=TwoWay}" NullText="" IsTextEditable="False" AllowNullInput="{Binding Parent.Value.Model.AllowNull}" />
        <DataTemplate.Triggers>
          <DataTrigger Binding="{Binding Parent.Value.Model.AllowMultiselect}" Value="True">
            <DataTrigger.Setters>
              <Setter Property="StyleSettings" TargetName="PART_Editor">
                <Setter.Value>
                  <dxe:CheckedComboBoxStyleSettings />
                </Setter.Value>
              </Setter>
            </DataTrigger.Setters>
          </DataTrigger>
        </DataTemplate.Triggers>
      </DataTemplate>
    </dxdashi:ParametersTemplateSelector.ListTemplate>
  </dxdashi:ParametersTemplateSelector>
  <DataTemplate x:Key="{dxdasht:DashboardControlThemeKey ResourceKey=ParametersTemplate}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <dxprg:PropertyGridControl Grid.ColumnSpan="2" Grid.Row="1" Margin="-14,30,10,30" Background="Transparent" ShowSearchBox="False" ShowToolPanel="False" ShowGridLines="False" ShowCategories="Hidden" ShowMenuButtonInRows="False" RowPadding="3" ScrollViewer.VerticalScrollBarVisibility="Auto" BorderThickness="0" HighlightingMode="None" SelectedObject="{Binding ItemViewModels}">
        <dxprg:PropertyDefinition Path="*" IsReadOnly="False" dxprg:CollectionDefinition.HideCollectionButton="True" AllowExpanding="Never">
          <dxprg:PropertyDefinition.HeaderTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding Path=Value.DisplayName}" HorizontalAlignment="Left" />
            </DataTemplate>
          </dxprg:PropertyDefinition.HeaderTemplate>
          <dxprg:PropertyDefinition.ContentTemplate>
            <DataTemplate>
              <dxprg:CellEditorPresenter Path="Value" />
            </DataTemplate>
          </dxprg:PropertyDefinition.ContentTemplate>
          <dxprg:PropertyDefinition Path="Value" IsReadOnly="False" CellTemplateSelector="{StaticResource ParametersControlEditorTemplateSelector}" PostOnEditValueChanged="True" />
        </dxprg:PropertyDefinition>
      </dxprg:PropertyGridControl>
      <dx:ThemedWindowDialogButton Grid.Row="2" HorizontalAlignment="Left" Command="{Binding ResetCommand}" Margin="10,0,20,10" Width="70" AllowCloseWindow="False" Content="{dxdashi:DashboardLocalizationString ButtonReset}" />
      <StackPanel Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
        <dx:ThemedWindowDialogButton DialogResult="OK" IsDefault="True" Margin="0,0,10,10" Command="{Binding ApplyCommand}" Content="{dxdashi:DashboardLocalizationString ButtonSubmit}" />
        <dx:ThemedWindowDialogButton DialogResult="Cancel" IsCancel="True" Margin="0,0,10,10" Command="{Binding CancelCommand}" Content="{dxdashi:DashboardLocalizationString ButtonCancel}" />
      </StackPanel>
    </Grid>
  </DataTemplate>
  <Style x:Key="RowControl" TargetType="{x:Type dxprg:RowControl}">
    <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Self}, Path=IsReadOnly, Converter={dxmvvm:BooleanNegationConverter}}" />
  </Style>
  <DataTemplate x:Key="{dxdasht:DashboardControlThemeKey ResourceKey=PrintPreviewOptionsTemplate}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <dxprg:PropertyGridControl Grid.ColumnSpan="2" Grid.Row="1" Margin="-14,30,10,30" Background="Transparent" ShowSearchBox="False" ShowToolPanel="False" ShowGridLines="False" ShowCategories="Hidden" ShowMenuButtonInRows="False" RowPadding="3" ScrollViewer.VerticalScrollBarVisibility="Auto" BorderThickness="0" MinWidth="300" MaxHeight="700" HighlightingMode="None" SelectedObject="{Binding Properties}">
        <dxmvvm:Interaction.Behaviors>
          <dxdashi:StylePropertyGridBehavior Style="{StaticResource ResourceKey=RowControl}" />
        </dxmvvm:Interaction.Behaviors>
        <dxprg:PropertyGridControl.Resources>
          <DataTemplate x:Key="RadioList">
            <dxe:ListBoxEdit x:Name="PART_Editor" ItemsSource="{Binding StandardValues}" ShowBorder="False">
              <dxe:ListBoxEdit.ItemTemplate>
                <DataTemplate>
                  <TextBlock Text="{Binding Converter={dxdashi:EnumToDisplayNameConverter}}" />
                </DataTemplate>
              </dxe:ListBoxEdit.ItemTemplate>
              <dxe:ListBoxEdit.StyleSettings>
                <dxe:RadioListBoxEditStyleSettings />
              </dxe:ListBoxEdit.StyleSettings>
            </dxe:ListBoxEdit>
          </DataTemplate>
          <DataTemplate x:Key="ComboList">
            <dxe:ComboBoxEdit x:Name="PART_Editor" MinWidth="150" MaxWidth="150" IsTextEditable="False" ItemsSource="{Binding StandardValues}" ApplyItemTemplateToSelectedItem="True">
              <dxe:ComboBoxEdit.ItemTemplate>
                <DataTemplate>
                  <TextBlock Text="{Binding Converter={dxdashi:EnumToDisplayNameConverter}}" />
                </DataTemplate>
              </dxe:ComboBoxEdit.ItemTemplate>
            </dxe:ComboBoxEdit>
          </DataTemplate>
          <DataTemplate x:Key="Text">
            <dxe:TextEdit MinWidth="150" MaxWidth="150" x:Name="PART_Editor" />
          </DataTemplate>
        </dxprg:PropertyGridControl.Resources>
        <dxprg:PropertyDefinition Path="*" EditorHorizontalAlignment="Right" PostOnEditValueChanged="True" />
      </dxprg:PropertyGridControl>
      <dx:ThemedWindowDialogButton Grid.Row="2" HorizontalAlignment="Left" Command="{Binding ResetCommand}" Margin="10,0,20,10" Width="70" AllowCloseWindow="False" Content="{dxdashi:DashboardLocalizationString ButtonReset}" />
      <StackPanel Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
        <dx:ThemedWindowDialogButton DialogResult="OK" IsDefault="True" Margin="0,0,10,10" Command="{Binding ApplyCommand}" Content="{dxdashi:DashboardLocalizationString ButtonSubmit}" />
        <dx:ThemedWindowDialogButton DialogResult="Cancel" IsCancel="True" Margin="0,0,10,10" Content="{dxdashi:DashboardLocalizationString ButtonCancel}" />
      </StackPanel>
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxdasht:DashboardControlThemeKey ResourceKey=PrintPreviewTemplate}">
    <Grid>
      <dxmvvm:Interaction.Behaviors>
        <dx:DialogService ViewTemplate="{Binding Path=DashboardControl.PrintPreviewOptionsTemplate}">
          <dx:DialogService.DialogStyle>
            <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=http://schemas.devexpress.com/winfx/2008/xaml/core.ThemedWindow}" TargetType="{x:Type dx:ThemedWindow}">
              <Setter Property="ResizeMode" Value="NoResize" />
              <Setter Property="SizeToContent" Value="WidthAndHeight" />
              <Setter Property="ShowIcon" Value="False" />
            </Style>
          </dx:DialogService.DialogStyle>
        </dx:DialogService>
      </dxmvvm:Interaction.Behaviors>
      <dxp:DocumentPreviewControl DocumentSource="{Binding Report}" RequestDocumentCreation="True" x:Name="PART_DocumentPreviewControl">
        <dxp:DocumentPreviewControl.CommandProvider>
          <dxp:DocumentCommandProvider>
            <dxp:DocumentCommandProvider.RibbonActions>
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.Export}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.ExportCsv}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.ExportDocx}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.ExportHtm}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.ExportMht}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.ExportTxt}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.ExportXls}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.ExportXlsx}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.ExportRtf}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.SendCsv}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.SendDocx}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.SendMht}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.SendTxt}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.SendXls}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.SendXlsx}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.SendRtf}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.Watermark}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.Parameters}" />
              <dxb:RemoveAction ElementName="{x:Static dxpb:DefaultPreviewBarItemNames.DocumentMapShowOptions}" />
              <dxb:InsertAction ContainerName="{x:Static dxpb:DefaultPreviewBarItemNames.PrintGroup}">
                <dxb:InsertAction.Element>
                  <dxb:BarButtonItem LargeGlyph="{dx:DXImage Image=Customization_32x32.png}" Glyph="{dx:DXImage Image=Customization_16x16.png}" Content="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).DataContext.Caption, RelativeSource={RelativeSource Self}}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).DataContext.ShowOptionsCommand, RelativeSource={RelativeSource Self}}" />
                </dxb:InsertAction.Element>
              </dxb:InsertAction>
            </dxp:DocumentCommandProvider.RibbonActions>
          </dxp:DocumentCommandProvider>
        </dxp:DocumentPreviewControl.CommandProvider>
      </dxp:DocumentPreviewControl>
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxdasht:DashboardControlThemeKey ResourceKey=ExportTemplate}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <dxprg:PropertyGridControl Grid.ColumnSpan="2" Grid.Row="1" Margin="-14,30,10,30" Background="Transparent" ShowSearchBox="False" ShowToolPanel="False" ShowGridLines="False" ShowCategories="Hidden" ShowMenuButtonInRows="False" RowPadding="3" ScrollViewer.VerticalScrollBarVisibility="Auto" BorderThickness="0" MinWidth="300" MaxHeight="700" HighlightingMode="None" SelectedObject="{Binding Properties}">
        <dxmvvm:Interaction.Behaviors>
          <dxdashi:StylePropertyGridBehavior Style="{StaticResource ResourceKey=RowControl}" />
        </dxmvvm:Interaction.Behaviors>
        <dxprg:PropertyGridControl.Resources>
          <DataTemplate x:Key="Numeric">
            <ContentControl>
              <dxprg:PropertyDefinition>
                <dxprg:PropertyDefinition.EditSettings>
                  <dxe:SpinEditSettings MinValue="1" />
                </dxprg:PropertyDefinition.EditSettings>
              </dxprg:PropertyDefinition>
            </ContentControl>
          </DataTemplate>
          <DataTemplate x:Key="RadioList">
            <dxe:ListBoxEdit x:Name="PART_Editor" ItemsSource="{Binding StandardValues}" ShowBorder="False">
              <dxe:ListBoxEdit.ItemTemplate>
                <DataTemplate>
                  <TextBlock Text="{Binding Converter={dxdashi:EnumToDisplayNameConverter}}" />
                </DataTemplate>
              </dxe:ListBoxEdit.ItemTemplate>
              <dxe:ListBoxEdit.StyleSettings>
                <dxe:RadioListBoxEditStyleSettings />
              </dxe:ListBoxEdit.StyleSettings>
            </dxe:ListBoxEdit>
          </DataTemplate>
          <DataTemplate x:Key="ComboList">
            <dxe:ComboBoxEdit x:Name="PART_Editor" MinWidth="150" MaxWidth="150" IsTextEditable="False" ItemsSource="{Binding StandardValues}" ApplyItemTemplateToSelectedItem="True">
              <dxe:ComboBoxEdit.ItemTemplate>
                <DataTemplate>
                  <TextBlock Text="{Binding Converter={dxdashi:EnumToDisplayNameConverter}}" />
                </DataTemplate>
              </dxe:ComboBoxEdit.ItemTemplate>
            </dxe:ComboBoxEdit>
          </DataTemplate>
          <DataTemplate x:Key="Text">
            <dxe:TextEdit MinWidth="150" MaxWidth="150" x:Name="PART_Editor" />
          </DataTemplate>
        </dxprg:PropertyGridControl.Resources>
        <dxprg:PropertyDefinition Path="*" EditorHorizontalAlignment="Right" PostOnEditValueChanged="True" />
      </dxprg:PropertyGridControl>
      <dx:ThemedWindowDialogButton Grid.Row="2" HorizontalAlignment="Left" Command="{Binding ResetCommand}" Margin="10,0,20,10" Width="70" AllowCloseWindow="False" Content="{dxdashi:DashboardLocalizationString ButtonReset}" />
      <StackPanel Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
        <dx:ThemedWindowDialogButton DialogResult="OK" IsDefault="True" Margin="0,0,10,10" Command="{Binding ApplyCommand}" Content="{dxdashi:DashboardLocalizationString ButtonExport}" />
        <dx:ThemedWindowDialogButton DialogResult="Cancel" IsCancel="True" Margin="0,0,10,10" Content="{dxdashi:DashboardLocalizationString ButtonCancel}" />
      </StackPanel>
    </Grid>
  </DataTemplate>
  <Style x:Key="{dxdasht:DashboardControlThemeKey ResourceKey=ExportDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
    <Setter Property="ResizeMode" Value="NoResize" />
    <Setter Property="SizeToContent" Value="WidthAndHeight" />
    <Setter Property="ShowIcon" Value="False" />
  </Style>
  <Style x:Key="{dxdasht:DashboardControlThemeKey ResourceKey=ParametersDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
    <Setter Property="ResizeMode" Value="CanResize" />
    <Setter Property="SizeToContent" Value="Height" />
    <Setter Property="ShowIcon" Value="False" />
    <Setter Property="MaxWidth" Value="1000" />
    <Setter Property="MinWidth" Value="450" />
    <Setter Property="Width" Value="450" />
    <Setter Property="MaxHeight" Value="624" />
    <Setter Property="MinHeight" Value="170" />
  </Style>
  <ControlTemplate x:Key="{dxdasht:DashboardControlThemeKey ResourceKey=Template}" TargetType="dxdash:DashboardControlBase">
    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
      <Grid x:Name="DashboardControlGrid">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition />
        </Grid.RowDefinitions>
        <Grid HorizontalAlignment="Left" Width="{Binding ElementName=DashboardControlGrid, Path=ActualWidth}" MaxWidth="{Binding DashboardViewModel.TitleWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <Image Name="ErrorImage" Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/Error.svg'}" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="24" Height="24" Margin="12,12,0,0" Visibility="{Binding DashboardViewModel.DashboardError.HasErrors, FallbackValue=Hidden, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
          <dxdashi:DashboardTitlePresenter x:Name="DashboardTitlePresenter" Grid.Column="1" Style="{TemplateBinding TitleStyle}" Visibility="{Binding ShowTitle, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" HorizontalAlignment="Stretch" />
        </Grid>
        <ScrollViewer x:Name="DashboardScrollViewer" HorizontalScrollBarVisibility="{Binding DashboardViewModel.HorizontalScrollBarVisibilityMode, RelativeSource={RelativeSource TemplatedParent}}" VerticalScrollBarVisibility="{Binding DashboardViewModel.VerticalScrollBarVisibilityMode, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="1" Grid.ColumnSpan="2" Margin="{TemplateBinding LayoutMargin}">
          <dxdashi:DashboardLayoutManager x:Name="DashboardLayoutManager" Width="{Binding DashboardViewModel.ScrollableWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Height="{Binding DashboardViewModel.ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" dx:DXSerializer.Enabled="False" AllowCustomization="False" Background="Transparent" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{Binding DashboardViewModel.HorizontalAlignmentMode, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{Binding DashboardViewModel.VerticalAlignmentMode, RelativeSource={RelativeSource TemplatedParent}}">
            <dxmvvm:Interaction.Behaviors>
              <dxdashi:DockLayoutManagerDashboardBehavior DashboardViewModel="{Binding DashboardViewModel, RelativeSource={RelativeSource TemplatedParent}}" CustomItemStyle="{Binding CustomItemStyle, RelativeSource={RelativeSource TemplatedParent}}" CustomItemStyleSelector="{Binding CustomItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" GridItemStyle="{Binding GridItemStyle, RelativeSource={RelativeSource TemplatedParent}}" GridItemStyleSelector="{Binding GridItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" PivotItemStyle="{Binding PivotItemStyle, RelativeSource={RelativeSource TemplatedParent}}" PivotItemStyleSelector="{Binding PivotItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" MapItemStyle="{Binding MapItemStyle, RelativeSource={RelativeSource TemplatedParent}}" MapItemStyleSelector="{Binding MapItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" ChartItemStyle="{Binding ChartItemStyle, RelativeSource={RelativeSource TemplatedParent}}" ChartItemStyleSelector="{Binding ChartItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" ImageItemStyle="{Binding ImageItemStyle, RelativeSource={RelativeSource TemplatedParent}}" ImageItemStyleSelector="{Binding ImageItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" ComboBoxItemStyle="{Binding ComboBoxItemStyle, RelativeSource={RelativeSource TemplatedParent}}" ComboBoxItemStyleSelector="{Binding ComboBoxItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" ListBoxItemStyle="{Binding ListBoxItemStyle, RelativeSource={RelativeSource TemplatedParent}}" ListBoxItemStyleSelector="{Binding ListBoxItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" DateFilterItemStyle="{Binding DateFilterItemStyle, RelativeSource={RelativeSource TemplatedParent}}" DateFilterItemStyleSelector="{Binding DateFilterItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" TreeViewItemStyle="{Binding TreeViewItemStyle, RelativeSource={RelativeSource TemplatedParent}}" TreeViewItemStyleSelector="{Binding TreeViewItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" CardItemStyle="{Binding CardItemStyle, RelativeSource={RelativeSource TemplatedParent}}" CardItemStyleSelector="{Binding CardItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" TextBoxItemStyle="{Binding TextBoxItemStyle, RelativeSource={RelativeSource TemplatedParent}}" TextBoxItemStyleSelector="{Binding TextBoxItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" RangeItemStyle="{Binding RangeItemStyle, RelativeSource={RelativeSource TemplatedParent}}" RangeItemStyleSelector="{Binding RangeItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" BoundImageItemStyle="{Binding BoundImageItemStyle, RelativeSource={RelativeSource TemplatedParent}}" BoundImageItemStyleSelector="{Binding BoundImageItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" TreemapItemStyle="{Binding TreemapItemStyle, RelativeSource={RelativeSource TemplatedParent}}" TreemapItemStyleSelector="{Binding TreemapItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" GaugeItemStyle="{Binding GaugeItemStyle, RelativeSource={RelativeSource TemplatedParent}}" GaugeItemStyleSelector="{Binding GaugeItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" PieItemStyle="{Binding PieItemStyle, RelativeSource={RelativeSource TemplatedParent}}" PieItemStyleSelector="{Binding PieItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" ItemGroupStyle="{Binding ItemGroupStyle, RelativeSource={RelativeSource TemplatedParent}}" ItemGroupStyleSelector="{Binding ItemGroupStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" DashboardItemStyle="{Binding DashboardItemStyle, RelativeSource={RelativeSource TemplatedParent}}" DashboardItemStyleSelector="{Binding DashboardItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" />
            </dxmvvm:Interaction.Behaviors>
          </dxdashi:DashboardLayoutManager>
        </ScrollViewer>
        <dxdashi:DashboardLayoutManager x:Name="FullscreenDashboardLayoutManager" dx:DXSerializer.Enabled="False" Visibility="{TemplateBinding ActualMaximizedDashboardItemVisibility}" Grid.Row="1" Grid.ColumnSpan="2" AllowCustomization="False" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" Margin="12">
          <dxmvvm:Interaction.Behaviors>
            <dxdashi:DockLayoutManagerDashboardBehavior DashboardViewModel="{Binding FullscreenDashboardViewModel, RelativeSource={RelativeSource TemplatedParent}}" GridItemStyle="{Binding GridItemStyle, RelativeSource={RelativeSource TemplatedParent}}" GridItemStyleSelector="{Binding GridItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" PivotItemStyle="{Binding PivotItemStyle, RelativeSource={RelativeSource TemplatedParent}}" PivotItemStyleSelector="{Binding PivotItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" MapItemStyle="{Binding MapItemStyle, RelativeSource={RelativeSource TemplatedParent}}" MapItemStyleSelector="{Binding MapItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" ChartItemStyle="{Binding ChartItemStyle, RelativeSource={RelativeSource TemplatedParent}}" ChartItemStyleSelector="{Binding ChartItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" ImageItemStyle="{Binding ImageItemStyle, RelativeSource={RelativeSource TemplatedParent}}" ImageItemStyleSelector="{Binding ImageItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" ComboBoxItemStyle="{Binding ComboBoxItemStyle, RelativeSource={RelativeSource TemplatedParent}}" ComboBoxItemStyleSelector="{Binding ComboBoxItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" ListBoxItemStyle="{Binding ListBoxItemStyle, RelativeSource={RelativeSource TemplatedParent}}" ListBoxItemStyleSelector="{Binding ListBoxItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" TreeViewItemStyle="{Binding TreeViewItemStyle, RelativeSource={RelativeSource TemplatedParent}}" TreeViewItemStyleSelector="{Binding TreeViewItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" DateFilterItemStyle="{Binding DateFilterItemStyle, RelativeSource={RelativeSource TemplatedParent}}" DateFilterItemStyleSelector="{Binding DateFilterItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" CardItemStyle="{Binding CardItemStyle, RelativeSource={RelativeSource TemplatedParent}}" CardItemStyleSelector="{Binding CardItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" TextBoxItemStyle="{Binding TextBoxItemStyle, RelativeSource={RelativeSource TemplatedParent}}" TextBoxItemStyleSelector="{Binding TextBoxItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" RangeItemStyle="{Binding RangeItemStyle, RelativeSource={RelativeSource TemplatedParent}}" RangeItemStyleSelector="{Binding RangeItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" BoundImageItemStyle="{Binding BoundImageItemStyle, RelativeSource={RelativeSource TemplatedParent}}" BoundImageItemStyleSelector="{Binding BoundImageItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" TreemapItemStyle="{Binding TreemapItemStyle, RelativeSource={RelativeSource TemplatedParent}}" TreemapItemStyleSelector="{Binding TreemapItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" GaugeItemStyle="{Binding GaugeItemStyle, RelativeSource={RelativeSource TemplatedParent}}" GaugeItemStyleSelector="{Binding GaugeItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" PieItemStyle="{Binding PieItemStyle, RelativeSource={RelativeSource TemplatedParent}}" PieItemStyleSelector="{Binding PieItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" ItemGroupStyle="{Binding ItemGroupStyle, RelativeSource={RelativeSource TemplatedParent}}" ItemGroupStyleSelector="{Binding ItemGroupStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" DashboardItemStyle="{Binding DashboardItemStyle, RelativeSource={RelativeSource TemplatedParent}}" DashboardItemStyleSelector="{Binding DashboardItemStyleSelector, RelativeSource={RelativeSource TemplatedParent}}" />
          </dxmvvm:Interaction.Behaviors>
        </dxdashi:DashboardLayoutManager>
        <dxe:FlyoutControl HorizontalAlignment="Left" VerticalAlignment="Center" PlacementTarget="{Binding ElementName=ErrorImage}" IsOpen="{Binding DashboardViewModel.DashboardError.HasErrors, RelativeSource={RelativeSource TemplatedParent}}" OpenOnHover="True" Content="{Binding DashboardViewModel.DashboardError.ErrorMessage, RelativeSource={RelativeSource TemplatedParent}}">
          <dxe:FlyoutControl.Settings>
            <dxe:FlyoutSettings ShowIndicator="True" IndicatorHorizontalAlignment="Center" />
          </dxe:FlyoutControl.Settings>
          <dxe:FlyoutControl.ContentTemplate>
            <DataTemplate>
              <dxe:TextEdit TextWrapping="Wrap" MinWidth="200" MaxWidth="400" Text="{Binding ., Mode=OneWay}" IsReadOnly="True" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=CaptionFontSize}}" FontWeight="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=CaptionFontWeight}}" Foreground="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=CaptionForeground}}" />
            </DataTemplate>
          </dxe:FlyoutControl.ContentTemplate>
        </dxe:FlyoutControl>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="ActualMaximizedDashboardItemVisibility" Value="Visible">
        <Setter Property="DashboardViewModel" Value="{Binding FullscreenDashboardViewModel, RelativeSource={RelativeSource TemplatedParent}}" TargetName="DashboardTitlePresenter" />
      </Trigger>
      <Trigger Property="ActualMaximizedDashboardItemVisibility" Value="Collapsed">
        <Setter Property="DashboardViewModel" Value="{Binding DashboardViewModel, RelativeSource={RelativeSource TemplatedParent}}" TargetName="DashboardTitlePresenter" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxdasht:DashboardControlThemeKey ResourceKey=TitleStyle}" TargetType="dxdashi:DashboardTitlePresenter">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxdashi:DashboardTitlePresenter">
          <DockPanel MaxHeight="50" MinHeight="40" Visibility="{Binding ActualContent.Visibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
            <dxmvvm:Interaction.Behaviors>
              <dxb:ControllerBehavior ExecutionMode="OnEvent">
                <dxb:ControllerBehavior.Triggers>
                  <dxb:ActionTrigger EventName="Loaded" ExecuteOnce="True" />
                </dxb:ControllerBehavior.Triggers>
                <dxb:ActionGroup ActionsTemplate="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxdash:DashboardControlBase}}, Path=TitleCustomizationsTemplate}" />
              </dxb:ControllerBehavior>
            </dxmvvm:Interaction.Behaviors>
            <dxe:FlyoutControl VerticalOffset="20" PlacementTarget="{Binding ElementName=FilterIcon}" OpenOnHover="True" Content="{Binding ActualContent.MasterFilterValues, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
              <dxe:FlyoutControl.ContentTemplate>
                <DataTemplate>
                  <ItemsControl ItemsSource="{Binding}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <dxdashi:SplitPanel ChildSpacing="8" Orientation="Vertical" />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                      <DataTemplate>
                        <dxdashi:SplitPanel ChildSpacing="4" Orientation="Vertical">
                          <ContentPresenter Content="{Binding Name}" TextElement.FontWeight="Bold" />
                          <ItemsControl ItemsSource="{Binding Values}">
                            <ItemsControl.ItemsPanel>
                              <ItemsPanelTemplate>
                                <dxdashi:SplitPanel ChildSpacing="4" Orientation="Vertical" />
                              </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                          </ItemsControl>
                        </dxdashi:SplitPanel>
                      </DataTemplate>
                    </ItemsControl.ItemTemplate>
                  </ItemsControl>
                </DataTemplate>
              </dxe:FlyoutControl.ContentTemplate>
            </dxe:FlyoutControl>
            <dxb:ToolBarControl DockPanel.Dock="Right" Margin="12,12,12,0" ShowBackground="False" AllowCustomizationMenu="False" ShowDragWidget="False" AllowQuickCustomization="False" Focusable="False" HorizontalAlignment="Right" VerticalAlignment="Center" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardTitle_Toolbar}" DataContext="{TemplateBinding ActualContent}">
              <dxb:BarSplitButtonItem Content="{dxdashi:DashboardLocalizationString ActionExportTo}" ToolTip="{dxdashi:DashboardLocalizationString ActionExportTo}" ToolTipService.ShowOnDisabled="True" ActAsDropDown="True" Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/Export.svg'}" IsVisible="{Binding DashboardViewModel.AllowPrintDashboard}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardTitle_ExportToButton}">
                <dxb:PopupMenu dxb:BarManager.ShowGlyphsInPopupMenus="False" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardTitle_ExportToPopupMenu}">
                  <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionPrintPreview}" Command="{Binding DashboardViewModel.ShowPreviewCommand}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardTitle_ExportPreviewButton}" />
                  <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionExportToPdf}" Command="{Binding DashboardViewModel.ExportToPdfCommand}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardTitle_ExportToPdfButton}" />
                  <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionExportToImage}" Command="{Binding DashboardViewModel.ExportToImageCommand}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardTitle_ExportToImageButton}" />
                  <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionExportToExcel}" Command="{Binding DashboardViewModel.ExportToExcelCommand}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardTitle_ExportToExcelButton}" />
                </dxb:PopupMenu>
              </dxb:BarSplitButtonItem>
              <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ExportParameters}" ToolTip="{dxdashi:DashboardLocalizationString ExportParameters}" ToolTipService.ShowOnDisabled="True" Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/Parameters.svg'}" IsVisible="{Binding DashboardViewModel.ParametersViewModel.IsParametersButtonVisible}" Command="{Binding DashboardViewModel.ParametersViewModel.ShowParametersCommand}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardTitle_ParametersButton}" />
            </dxb:ToolBarControl>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" DockPanel.Dock="Left" Margin="{TemplateBinding Padding}">
              <Grid Margin="12,12,12,0" HorizontalAlignment="{Binding ActualContent.TitleAlignment, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dx:DXImage Source="{Binding ActualContent.Image, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" Margin="0,0,4,0" VerticalAlignment="Center" />
                <ContentPresenter Grid.Column="1" TextElement.FontSize="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=TitleFontSize}}" TextElement.FontWeight="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=TitleFontWeight}}" TextElement.Foreground="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=TitleForeground}}" Content="{Binding ActualContent.TitleContent, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ContentTemplate="{Binding ActualContent.TitleContentTemplate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ContentTemplateSelector="{Binding ActualContent.TitleContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Margin="0,0,0,0" VerticalAlignment="Bottom" />
                <ContentPresenter Grid.Column="2" TextElement.FontSize="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=SubTitleFontSize}}" TextElement.FontWeight="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=SubTitleFontWeight}}" TextElement.Foreground="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=SubTitleForeground}}" Opacity="0.75" Content="{Binding ActualContent.MasterFilterValues, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Margin="8,0,0,0" Visibility="{Binding ActualContent.IsFilterStringVisible, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Bottom" />
                <dx:DXImage Grid.Column="3" Visibility="{Binding ActualContent.IsFilterIconVisible, RelativeSource={RelativeSource TemplatedParent}}" x:Name="FilterIcon" Margin="4,0,0,0" Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/Filter.svg'}" Stretch="None" VerticalAlignment="Top" dxb:ImageColorizer.IsEnabled="True" dxb:ImageColorizer.Color="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=MasterFilterIconColor}}" />
              </Grid>
            </Border>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardControlBase}" TargetType="dxdash:DashboardControlBase">
    <Setter Property="dx:ScrollBarExtensions.ScrollBarMode" Value="TouchOverlap" />
    <Setter Property="TitleStyle" Value="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=TitleStyle}}" />
    <Setter Property="Template" Value="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=Template}}" />
    <Setter Property="ParametersTemplate" Value="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=ParametersTemplate}}" />
    <Setter Property="ParametersDialogStyle" Value="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=ParametersDialogStyle}}" />
    <Setter Property="ExportTemplate" Value="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=ExportTemplate}}" />
    <Setter Property="ExportDialogStyle" Value="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=ExportDialogStyle}}" />
    <Setter Property="PrintPreviewOptionsTemplate" Value="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=PrintPreviewOptionsTemplate}}" />
    <Setter Property="DataInspectorTemplate" Value="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=DataInspectorTemplate}}" />
    <Setter Property="DataInspectorStyle" Value="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=DataInspectorStyle}}" />
    <Setter Property="Background" Value="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=Background}}" />
    <Setter Property="Focusable" Value="False" />
  </Style>
  <DataTemplate x:Key="{dxdasht:DashboardControlThemeKey ResourceKey=DataInspectorTemplate}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <StackPanel Grid.Row="0" HorizontalAlignment="Left" Orientation="Horizontal" Margin="12,12,12,0" Visibility="{Binding TypeGroupVisibility}">
        <TextBlock Text="{dxdashi:DashboardLocalizationString InspectedData}" VerticalAlignment="Center" Margin="0,0,10,0" />
        <dxe:ListBoxEdit ShowBorder="False" SelectedIndex="0" ItemsSource="{Binding DataTypeItems}" SelectedItem="{Binding SelectedType}">
          <dxe:ListBoxEdit.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal" />
            </ItemsPanelTemplate>
          </dxe:ListBoxEdit.ItemsPanel>
          <dxe:ListBoxEdit.StyleSettings>
            <dxe:RadioListBoxEditStyleSettings />
          </dxe:ListBoxEdit.StyleSettings>
          <dxmvvm:Interaction.Behaviors>
            <dxmvvm:EventToCommand EventName="SelectedIndexChanged" Command="{Binding OnSelectedIndexChangedCommand}" EventArgsConverter="{StaticResource EventToCommandConverter}" PassEventArgsToCommand="True" />
          </dxmvvm:Interaction.Behaviors>
        </dxe:ListBoxEdit>
      </StackPanel>
      <dxg:GridControl Grid.Row="1" AutoGenerateColumns="AddNew" ItemsSource="{Binding RawData}" Visibility="{Binding RawDataVisibility}" Margin="12,12,12,0">
        <dxg:GridControl.View>
          <dxg:TableView Name="rawGridView" ShowGroupPanel="False" AutoWidth="True" VerticalScrollbarVisibility="Auto" ShowColumnHeaders="{Binding ShowRawDataColumnHeaders}" />
        </dxg:GridControl.View>
      </dxg:GridControl>
      <TextBlock Grid.Row="1" Text="{dxdashi:DashboardLocalizationString OLAPUnavailableRawData}" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding OlapErrorMessageVisibility}" Margin="0,12,0,0" />
      <dxg:GridControl Grid.Row="1" AutoGenerateColumns="AddNew" ItemsSource="{Binding AggregatedData}" Visibility="{Binding AggregatedDataVisibility}" Margin="12,12,12,0">
        <dxg:GridControl.View>
          <dxg:TableView Name="aggregatedGridView" ShowGroupPanel="False" AutoWidth="True" VerticalScrollbarVisibility="Auto" />
        </dxg:GridControl.View>
        <dxmvvm:Interaction.Behaviors>
          <dxmvvm:EventToCommand EventName="CustomColumnDisplayText" Command="{Binding OnCustomColumnDisplayTextCommand}" PassEventArgsToCommand="True" />
        </dxmvvm:Interaction.Behaviors>
      </dxg:GridControl>
      <dx:ThemedWindowDialogButton Grid.Row="2" HorizontalAlignment="Right" Margin="0,12,12,12" Width="70" AllowCloseWindow="True" Content="{dxdashi:DashboardLocalizationString DataInspectorButtonClose}" />
      <dx:ThemedWindowDialogButton Grid.Row="2" HorizontalAlignment="Left" Margin="12,12,0,12" Width="110" Command="{Binding Commands.ShowRibbonPrintPreviewDialog, ElementName=aggregatedGridView}" AllowCloseWindow="False" Visibility="{Binding AggregatedDataVisibility}" Content="{dxdashi:DashboardLocalizationString ActionPrintPreview}" />
      <dx:ThemedWindowDialogButton Grid.Row="2" HorizontalAlignment="Left" Margin="12,12,0,12" Width="110" Command="{Binding Commands.ShowRibbonPrintPreviewDialog, ElementName=rawGridView}" AllowCloseWindow="False" Visibility="{Binding RawDataVisibility}" Content="{dxdashi:DashboardLocalizationString ActionPrintPreview}" />
    </Grid>
  </DataTemplate>
  <Style x:Key="{dxdasht:DashboardControlThemeKey ResourceKey=DataInspectorStyle}" TargetType="{x:Type dx:ThemedWindow}">
    <Setter Property="ResizeMode" Value="CanResize" />
    <Setter Property="SizeToContent" Value="Manual" />
    <Setter Property="ShowIcon" Value="False" />
    <Setter Property="MinWidth" Value="300" />
    <Setter Property="MinHeight" Value="300" />
    <Setter Property="Height" Value="520" />
    <Setter Property="Width" Value="800" />
    <Setter Property="ShowInTaskbar" Value="False" />
  </Style>
  <DataTemplate x:Key="ElementActionButtons">
    <StackPanel Orientation="Horizontal" dxb:BarNameScope.IsScopeOwner="True">
      <dxmvvm:Interaction.Behaviors>
        <dxb:ControllerBehavior ExecutionMode="OnEvent">
          <dxb:ControllerBehavior.Triggers>
            <dxb:ActionTrigger EventName="Loaded" ExecuteOnce="True" />
          </dxb:ControllerBehavior.Triggers>
          <dxb:ActionGroup ActionsTemplate="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxdo:BaseLayoutItem}}, Path=CaptionCustomizationsTemplate}" />
        </dxb:ControllerBehavior>
      </dxmvvm:Interaction.Behaviors>
      <dxdashi:DashboardItemWaitIndicator Margin="4,0,0,0" IsIndeterminate="{Binding IsLoading, Converter={dxmvvm:BooleanToVisibilityConverter}}" Visibility="{Binding IsLoading, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
      <dxb:ToolBarControl Margin="4,0,0,0" ShowBackground="False" AllowCustomizationMenu="False" ShowDragWidget="False" AllowQuickCustomization="False" Focusable="False" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_Toolbar}">
        <!--NAMING RULES: http://gitserver/Serov.Alexey/OfficeUI-->
        <dxb:BarButtonItem Command="{Binding Path=(dxdove:BaseControlBoxControl.ContextCommand), RelativeSource={RelativeSource Self}}" CommandParameter="ScrollPrev" Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/Prev.svg'}" ToolTipService.ShowOnDisabled="True" IsVisible="{Binding IsScrollPrevButtonVisible}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ScrollPrevButton}" />
        <dxb:BarButtonItem IsVisible="{Binding IsScrollNextButtonVisible}" Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/Next.svg'}" Command="{Binding Path=(dxdove:BaseControlBoxControl.ContextCommand), RelativeSource={RelativeSource Self}}" CommandParameter="ScrollNext" ToolTipService.ShowOnDisabled="True" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ScrollNextButton}" />
        <dxb:BarButtonItem IsVisible="{Binding IsDropDownButtonVisible}" Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/MoveDown.svg'}" Command="{Binding Path=(dxdove:BaseControlBoxControl.ContextCommand), RelativeSource={RelativeSource Self}}" CommandParameter="Menu" ToolTipService.ShowOnDisabled="True" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_DropDownButton}" />
        <dxb:BarButtonItem Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/InitialExtent.svg'}" Command="{Binding InitialExtentCommand}" IsVisible="{Binding IsInitialExtentButtonVisible}" ToolTip="{dxdashi:DashboardLocalizationString InitialExtent}" ToolTipService.ShowOnDisabled="True" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_InitialExtentButton}" />
        <dxb:BarSplitButtonItem Content="{dxdashi:DashboardLocalizationString ActionExportTo}" ToolTip="{dxdashi:DashboardLocalizationString ActionExportTo}" ToolTipService.ShowOnDisabled="True" ActAsDropDown="True" Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/Export.svg'}" IsVisible="{Binding AllowPrintDashboardItems}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ExportToButton}">
          <dxb:PopupMenu dxb:BarManager.ShowGlyphsInPopupMenus="False">
            <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionPrintPreview}" Command="{Binding ShowPreviewCommand}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ExportPreviewButton}" />
            <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionExportToPdf}" Command="{Binding ExportToPdfCommand}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ExportToPdfButton}" />
            <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionExportToImage}" Command="{Binding ExportToImageCommand}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ExportToImageButton}" />
            <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionExportToExcel}" IsVisible="{Binding IsExportToExcelButtonVisible}" Command="{Binding ExportToExcelCommand}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ExportToExcelButton}" />
          </dxb:PopupMenu>
        </dxb:BarSplitButtonItem>
        <dxb:BarSplitButtonItem ActAsDropDown="True" Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/SelectLayer.svg'}" IsVisible="{Binding IsSelectElementButtonVisible}" ToolTip="{dxdashi:DashboardLocalizationString ActionOtherValues}" ToolTipService.ShowOnDisabled="True" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_SelectElementButton}">
          <dxb:PopupMenu dxb:BarManager.ShowGlyphsInPopupMenus="True">
            <dxb:BarItemSelector ItemLinksSource="{Binding ItemViewModel.ContentDescription.ElementNames}" AllowEmptySelection="False" SelectedItem="{Binding SelectedElementName, Mode=OneWay}">
              <dxb:BarItemSelector.ItemTemplate>
                <DataTemplate>
                  <ContentControl>
                    <dxb:BarCheckItem Content="{Binding}" Command="{Binding Path=DataContext.SelectElementCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarItemSelector}}}" CommandParameter="{Binding}" />
                  </ContentControl>
                </DataTemplate>
              </dxb:BarItemSelector.ItemTemplate>
            </dxb:BarItemSelector>
          </dxb:PopupMenu>
        </dxb:BarSplitButtonItem>
        <dxb:BarButtonItem Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/ClearMasterFilter.svg'}" Command="{Binding ClearMasterFilterCommand}" IsVisible="{Binding IsClearMasterFilterButtonVisible}" ToolTip="{dxdashi:DashboardLocalizationString ActionClearMasterFilter}" ToolTipService.ShowOnDisabled="True" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ClearMasterFilterButton}" />
        <dxb:BarButtonItem Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/DrillUp.svg'}" Command="{Binding DrillUpCommand}" IsVisible="{Binding IsDrillUpButtonVisible}" ToolTip="{dxdashi:DashboardLocalizationString ActionDrillUp}" ToolTipService.ShowOnDisabled="True" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_DrillUpButton}" />
        <dxb:BarButtonItem Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/DateTimePeriods.svg'}" Command="{Binding CustomRangePeriodCommand}" IsVisible="{Binding IsCustomRangePeriodButtonVisible}" ToolTip="{dxdashi:DashboardLocalizationString RangeFilterCustomDateTimePeriod}" ToolTipService.ShowOnDisabled="True" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_CustomRangePeriodButton}" />
        <dxb:BarSplitButtonItem ActAsDropDown="True" Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/DateTimePeriods.svg'}" IsVisible="{Binding IsDateTimePeriodVisible}" ToolTip="{dxdashi:DashboardLocalizationString ActionSelectDateTimePeriod}" ToolTipService.ShowOnDisabled="True" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_SelectDateTimePeriod}">
          <dxb:PopupMenu dxb:BarManager.ShowGlyphsInPopupMenus="True">
            <dxb:BarItemSelector ItemLinksSource="{Binding DateTimePeriodNames}" SelectedItem="{Binding DateTimePeriodSelectedItem, Mode=TwoWay}" AllowEmptySelection="True">
              <dxb:BarItemSelector.ItemTemplate>
                <DataTemplate>
                  <ContentControl>
                    <dxb:BarCheckItem Content="{Binding}" />
                  </ContentControl>
                </DataTemplate>
              </dxb:BarItemSelector.ItemTemplate>
            </dxb:BarItemSelector>
          </dxb:PopupMenu>
        </dxb:BarSplitButtonItem>
        <dxb:BarCheckItem Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/Multiselect.svg'}" Command="{Binding MultiSelectCommand}" IsVisible="{Binding IsMultiSelectButtonVisible}" ToolTip="{dxdashi:DashboardLocalizationString ActionAllowMultiselection}" ToolTipService.ShowOnDisabled="True" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_MultiSelectButton}" />
        <dxb:BarButtonItem Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/DataInspector.svg'}" Command="{Binding ShowDataInspectorCommand}" IsVisible="{Binding IsDataInspectorButtonVisible}" ToolTip="{dxdashi:DashboardLocalizationString ActionShowDataInspector}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_DataInspectorBarItemButton}" />
        <dxb:BarButtonItem Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/Minimize.svg'}" Command="{Binding MinimizeItemCommand}" IsVisible="{Binding IsMinimizeButtonVisible}" ToolTip="{dxdashi:DashboardLocalizationString ActionRestoreDashboardItem}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_MinimizeBarItemButton}" />
        <dxb:BarButtonItem Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.Dashboard.v24.1;component/Images/Maximize.svg'}" Command="{Binding MaximizeItemCommand}" IsVisible="{Binding IsMaximizeButtonVisible}" ToolTip="{dxdashi:DashboardLocalizationString ActionMaximizeDashboardItem}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_MaximizeBarItemButton}" />
      </dxb:ToolBarControl>
    </StackPanel>
  </DataTemplate>
  <DataTemplate x:Key="ElementPopupMenu">
    <dxb:PopupMenu Placement="MousePoint" dxb:BarNameScope.IsScopeOwner="True" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ContextMenu}">
      <dxmvvm:Interaction.Behaviors>
        <dxb:ControllerBehavior ExecutionMode="OnEvent">
          <dxb:ControllerBehavior.Triggers>
            <dxb:ActionTrigger EventName="Loaded" ExecuteOnce="True" ExecutionPriority="DataBind" />
          </dxb:ControllerBehavior.Triggers>
          <dxb:ActionGroup ActionsTemplate="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxdo:BaseLayoutItem}}, Path=ContextMenuCustomizationsTemplate}" />
        </dxb:ControllerBehavior>
      </dxmvvm:Interaction.Behaviors>
      <!--NAMING RULES: http://gitserver/Serov.Alexey/OfficeUI-->
      <dxb:BarButtonItem Command="{Binding InitialExtentCommand}" IsVisible="{Binding IsInitialExtentButtonVisible}" Content="{dxdashi:DashboardLocalizationString InitialExtent}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_InitialExtentButton}" />
      <dxb:BarItemLinkSeparator />
      <dxb:BarButtonItem Command="{Binding ShowDataInspectorCommand}" IsVisible="{Binding IsDataInspectorButtonVisible}" Content="{dxdashi:DashboardLocalizationString ActionShowDataInspector}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_DataInspectorBarItemButton}" />
      <dxb:BarItemLinkSeparator />
      <dxb:BarButtonItem Command="{Binding MaximizeItemCommand}" IsVisible="{Binding IsMaximizeButtonVisible}" Content="{dxdashi:DashboardLocalizationString ActionMaximizeDashboardItem}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_MaximizeBarItemButton}" />
      <dxb:BarButtonItem Command="{Binding MinimizeItemCommand}" IsVisible="{Binding IsMinimizeButtonVisible}" Content="{dxdashi:DashboardLocalizationString ActionRestoreDashboardItem}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_MinimizeBarItemButton}" />
      <dxb:BarButtonItem Command="{Binding DrillUpCommand}" IsVisible="{Binding IsDrillUpButtonVisible}" Content="{dxdashi:DashboardLocalizationString ActionDrillUp}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_DrillUpButton}" />
      <dxb:BarButtonItem Command="{Binding ClearMasterFilterCommand}" IsVisible="{Binding IsClearMasterFilterButtonVisible}" Content="{dxdashi:DashboardLocalizationString ActionClearMasterFilter}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ClearMasterFilterButton}" />
      <dxb:BarSubItem IsVisible="{Binding IsSelectElementButtonVisible}" Content="{dxdashi:DashboardLocalizationString ActionOtherValues}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_SelectElementButton}">
        <dxb:BarItemSelector ItemLinksSource="{Binding ItemViewModel.ContentDescription.ElementNames}" AllowEmptySelection="False" SelectedItem="{Binding SelectedElementName, Mode=OneWay}">
          <dxb:BarItemSelector.ItemTemplate>
            <DataTemplate>
              <ContentControl>
                <dxb:BarCheckItem Content="{Binding}" Command="{Binding Path=DataContext.SelectElementCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarItemSelector}}}" CommandParameter="{Binding}" />
              </ContentControl>
            </DataTemplate>
          </dxb:BarItemSelector.ItemTemplate>
        </dxb:BarItemSelector>
      </dxb:BarSubItem>
      <dxb:BarButtonItem Command="{Binding CustomRangePeriodCommand}" IsVisible="{Binding IsCustomRangePeriodButtonVisible}" Content="{dxdashi:DashboardLocalizationString RangeFilterCustomDateTimePeriod}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_CustomRangePeriodButton}" />
      <dxb:BarSubItem IsVisible="{Binding IsDateTimePeriodVisible}" Content="{dxdashi:DashboardLocalizationString ActionSelectDateTimePeriod}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_SelectDateTimePeriod}">
        <dxb:BarItemSelector ItemLinksSource="{Binding DateTimePeriodNames}" SelectedItem="{Binding DateTimePeriodSelectedItem, Mode=TwoWay}" AllowEmptySelection="True">
          <dxb:BarItemSelector.ItemTemplate>
            <DataTemplate>
              <ContentControl>
                <dxb:BarCheckItem Content="{Binding}" />
              </ContentControl>
            </DataTemplate>
          </dxb:BarItemSelector.ItemTemplate>
        </dxb:BarItemSelector>
      </dxb:BarSubItem>
      <dxb:BarItemLinkSeparator />
      <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionPrintPreview}" Command="{Binding ShowPreviewCommand}" IsVisible="{Binding AllowPrintDashboardItems}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ExportPreviewButton}" />
      <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionExportToPdf}" Command="{Binding ExportToPdfCommand}" IsVisible="{Binding AllowPrintDashboardItems}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ExportToPdfButton}" />
      <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionExportToImage}" Command="{Binding ExportToImageCommand}" IsVisible="{Binding AllowPrintDashboardItems}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ExportToImageButton}" />
      <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionExportToExcel}" Command="{Binding ExportToExcelCommand}" IsVisible="{Binding IsExportToExcelButtonVisible}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ExportToExcelButton}" />
      <dxb:BarItemLinkSeparator />
      <dxb:BarSubItem Content="{dxdashi:DashboardLocalizationString ActionExportDashboard}" IsVisible="{Binding DashboardViewModel.AllowPrintDashboard}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ExportDashboardButton}">
        <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionPrintPreview}" Command="{Binding DashboardViewModel.ShowPreviewCommand}" IsVisible="{Binding DashboardViewModel.AllowPrintDashboard}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ExportDashboardPreviewButton}" />
        <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionExportToPdf}" Command="{Binding DashboardViewModel.ExportToPdfCommand}" IsVisible="{Binding DashboardViewModel.AllowPrintDashboard}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ExportDashboardToPdfButton}" />
        <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionExportToImage}" Command="{Binding DashboardViewModel.ExportToImageCommand}" IsVisible="{Binding DashboardViewModel.AllowPrintDashboard}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ExportDashboardToImageButton}" />
        <dxb:BarButtonItem Content="{dxdashi:DashboardLocalizationString ActionExportToExcel}" Command="{Binding DashboardViewModel.ExportToExcelCommand}" IsVisible="{Binding DashboardViewModel.AllowPrintDashboard}" dx:XamlHelper.Name="{x:Static Member=dxdasht:DefaultBarItemNames.DashboardItemCaption_ExportDashboardToExcelButton}" />
      </dxb:BarSubItem>
    </dxb:PopupMenu>
  </DataTemplate>
  <DataTemplate x:Key="DashboardLayoutGroupControlBoxThemeKey">
    <ContentPresenter Name="DashboardLayoutGroupActionButtons" HorizontalAlignment="Right" Content="{Binding}" ContentTemplate="{StaticResource ElementActionButtons}" />
  </DataTemplate>
  <DataTemplate x:Key="DashboardLayoutGroupThemeKey">
    <!-- <Border TextBlock.Foreground="Red ... > - for theming -->
    <Grid Margin="4,2" Visibility="{Binding ShowCaption, Converter={dxmvvm:BooleanToVisibilityConverter}}">
      <ContentPresenter x:Name="DashboardLayoutItemCaption" HorizontalAlignment="Left" VerticalAlignment="Center" TextBlock.FontSize="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=CaptionFontSize}}" TextBlock.FontWeight="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=CaptionFontWeight}}" Content="{Binding Caption}" ToolTip="{Binding }">
        <ContentPresenter.Resources>
          <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=TextBlock}" TargetType="TextBlock">
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
          </Style>
        </ContentPresenter.Resources>
      </ContentPresenter>
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="DashboardLayoutGroupTabCaptionThemeKey">
    <Grid Margin="4,2">
      <ContentPresenter x:Name="DashboardLayoutItemCaption" HorizontalAlignment="Left" VerticalAlignment="Center" TextBlock.FontSize="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=CaptionFontSize}}" TextBlock.FontWeight="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=CaptionFontWeight}}" Content="{Binding Caption}" ToolTip="{Binding }">
        <ContentPresenter.Resources>
          <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=TextBlock}" TargetType="TextBlock">
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
          </Style>
        </ContentPresenter.Resources>
      </ContentPresenter>
    </Grid>
  </DataTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutGroup}" TargetType="dxdash:DashboardLayoutGroup" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.LayoutGroup}}">
    <Setter Property="dx:DXSerializer.Enabled" Value="False" />
    <Setter Property="ItemHeight" Value="{Binding ItemHeight, Mode=TwoWay}" />
    <Setter Property="ItemWidth" Value="{Binding ItemWidth, Mode=TwoWay}" />
    <Setter Property="LastChildFill" Value="True" />
    <Setter Property="AllowSplitters" Value="True" />
    <Setter Property="LayoutItemInterval" Value="4" />
    <Setter Property="AllowContextMenu" Value="False" />
    <Setter Property="ControlBoxContent" Value="{Binding }" />
    <Setter Property="ControlBoxContentTemplate" Value="{StaticResource DashboardLayoutGroupControlBoxThemeKey}" />
    <Setter Property="CaptionTemplate" Value="{StaticResource DashboardLayoutGroupThemeKey}" />
    <Setter Property="TabCaptionTemplate" Value="{StaticResource DashboardLayoutGroupTabCaptionThemeKey}" />
    <Setter Property="ShowCaption" Value="{Binding ShowCaption}" />
    <Setter Property="GroupBorderStyle" Value="{Binding GroupBorderStyle}" />
    <Setter Property="ShowTabHeaders" Value="{Binding ShowTabHeaders}" />
    <Setter Property="TabContentCacheMode" Value="{Binding TabContentCacheMode}" />
    <Setter Property="IsSelectedItem" Value="{Binding IsSelectedItem, Mode=TwoWay}" />
    <Setter Property="TabHeaderLayoutType" Value="Scroll" />
    <Setter Property="ShowScrollNextButton" Value="False" />
    <Setter Property="ShowScrollPrevButton" Value="False" />
    <Setter Property="AutoScrollOnOverflow" Value="PartiallyVisibleItem" />
    <Setter Property="Caption" Value="{Binding }" />
    <Setter Property="CustomizationCaption" Value="{Binding Caption}" />
    <Setter Property="ContextMenuTemplate" Value="{StaticResource ElementPopupMenu}" />
    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
      <Setter.Value>
        <DataTemplate>
          <ItemsControl>
            <dxdashi:LayoutItemProviderService UnregisterOnUnloaded="True" />
          </ItemsControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="{dxdasht:DashboardLayoutItemThemeKey ResourceKey=CaptionTemplate}">
    <Border Background="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=CaptionBackground}}">
      <Grid Margin="4,2" Visibility="{Binding ShowCaption, Converter={dxmvvm:BooleanToVisibilityConverter}}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <ContentPresenter VerticalAlignment="Center" TextBlock.FontSize="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=CaptionFontSize}}" TextBlock.FontWeight="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=CaptionFontWeight}}" TextBlock.Foreground="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=CaptionForeground}}" Content="{Binding Caption}" ToolTip="{Binding }">
          <ContentPresenter.Resources>
            <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=TextBlock}" TargetType="TextBlock">
              <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            </Style>
          </ContentPresenter.Resources>
        </ContentPresenter>
        <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource ElementActionButtons}" Grid.Column="1" />
      </Grid>
    </Border>
  </DataTemplate>
  <ControlTemplate x:Key="{dxdasht:DashboardLayoutItemThemeKey ResourceKey=Template}" TargetType="dxdash:DashboardLayoutItem">
    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition />
        </Grid.RowDefinitions>
        <ContentPresenter ContentSource="Caption" x:Name="DashboardLayoutItemCaption" />
        <ContentPresenter ContentSource="Content" Grid.Row="1" Margin="{TemplateBinding Padding}" />
      </Grid>
    </Border>
  </ControlTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}" TargetType="dxdash:DashboardLayoutItem">
    <Setter Property="dx:DXSerializer.Enabled" Value="False" />
    <Setter Property="ItemHeight" Value="{Binding ItemHeight, Mode=TwoWay}" />
    <Setter Property="ItemWidth" Value="{Binding ItemWidth, Mode=TwoWay}" />
    <Setter Property="Template" Value="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=Template}}" />
    <Setter Property="UseLayoutRounding" Value="True" />
    <Setter Property="Background" Value="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=Background}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=BorderBrush}}" />
    <Setter Property="BorderThickness" Value="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=BorderThickness}}" />
    <Setter Property="Caption" Value="{Binding }" />
    <Setter Property="CaptionTemplate" Value="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=CaptionTemplate}}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="IsHitTestVisible" Value="{Binding IsLoading, Converter={dxmvvm:BooleanNegationConverter}}" />
    <Setter Property="AllowSizing" Value="{Binding AllowSizing, Mode=OneWay}" />
    <Setter Property="ContextMenuTemplate" Value="{StaticResource ElementPopupMenu}" />
    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
      <Setter.Value>
        <DataTemplate>
          <ItemsControl>
            <dxdashi:LayoutItemProviderService UnregisterOnUnloaded="True" />
            <dxmvvm:EventToCommand EventName="MouseLeave" Command="{Binding Path=AssociatedObject.DataContext.OnItemMouseLeaveCommand, RelativeSource={RelativeSource Self}}" PassEventArgsToCommand="True" EventArgsConverter="{StaticResource EventToCommandConverter}" />
            <dxmvvm:EventToCommand EventName="MouseEnter" Command="{Binding Path=AssociatedObject.DataContext.OnItemMouseEnterCommand, RelativeSource={RelativeSource Self}}" PassEventArgsToCommand="True" EventArgsConverter="{StaticResource EventToCommandConverter}" />
            <dxmvvm:EventToCommand EventName="PreviewMouseWheel" Command="{Binding Path=AssociatedObject.DataContext.OnItemMouseWheelCommand, RelativeSource={RelativeSource Self}}" PassEventArgsToCommand="True" EventArgsConverter="{StaticResource EventToCommandConverter}" />
          </ItemsControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger Binding="{Binding ShowBorder}" Value="False">
        <DataTrigger.Setters>
          <Setter Property="BorderThickness" Value="0" />
          <Setter Property="Background" Value="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=Background}}" />
        </DataTrigger.Setters>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="WaitIndicatorPathStyle" TargetType="{x:Type Path}">
    <Setter Property="Data" Value="F1 M 16.1,8.09999C 16.9284,8.09999 17.6,8.77157 17.6,9.59999C 17.6,10.4284 16.9284,11.1 16.1,11.1C 15.2716,11.1 14.6,10.4284 14.6,9.59999C 14.6,8.77157 15.2716,8.09999 16.1,8.09999 Z M 3.1,8.09999C 3.92843,8.09999 4.6,8.77157 4.6,9.59999C 4.6,10.4284 3.92843,11.1 3.1,11.1C 2.27157,11.1 1.6,10.4284 1.6,9.59999C 1.6,8.77157 2.27157,8.09999 3.1,8.09999 Z M 11.1,16.1C 11.1,16.9284 10.4284,17.6 9.6,17.6C 8.77157,17.6 8.1,16.9284 8.1,16.1C 8.1,15.2716 8.77157,14.6 9.6,14.6C 10.4284,14.6 11.1,15.2716 11.1,16.1 Z M 11.1,3.1C 11.1,3.92843 10.4284,4.6 9.6,4.6C 8.77157,4.6 8.1,3.92843 8.1,3.1C 8.1,2.27157 8.77157,1.6 9.6,1.6C 10.4284,1.6 11.1,2.27157 11.1,3.1 Z M 15.2835,13.0925C 15.8738,13.6738 15.881,14.6235 15.2997,15.2137C 14.7183,15.8039 13.7686,15.8112 13.1784,15.2298C 12.5882,14.6485 12.581,13.6988 13.1623,13.1086C 13.7436,12.5184 14.6933,12.5112 15.2835,13.0925 Z M 6.02161,3.97017C 6.61182,4.55149 6.61904,5.50121 6.03772,6.09142C 5.4564,6.68164 4.50668,6.68886 3.91646,6.10754C 3.32624,5.52621 3.31903,4.57649 3.90035,3.98628C 4.48167,3.39606 5.43139,3.38884 6.02161,3.97017 Z M 6.10753,15.2835C 5.52621,15.8738 4.57649,15.881 3.98627,15.2997C 3.39606,14.7183 3.38884,13.7686 3.97016,13.1784C 4.55148,12.5882 5.5012,12.581 6.09142,13.1623C 6.68164,13.7436 6.68885,14.6933 6.10753,15.2835 Z M 15.2298,6.02161C 14.6485,6.61183 13.6988,6.61904 13.1086,6.03772C 12.5184,5.4564 12.5111,4.50668 13.0925,3.91646C 13.6738,3.32625 14.6235,3.31903 15.2137,3.90035C 15.8039,4.48167 15.8112,5.43139 15.2298,6.02161 Z " />
    <Setter Property="Fill" Value="{DynamicResource {dxdasht:DashboardLayoutItemThemeKey ResourceKey=WaitIndicatorForeground}}" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Stretch" Value="Fill" />
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>
  <ControlTemplate x:Key="WaitIndicatorTemplate" TargetType="{x:Type ProgressBar}">
    <Grid x:Name="Root">
      <Path x:Name="Content" Style="{StaticResource WaitIndicatorPathStyle}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="{TemplateBinding Margin}" RenderTransformOrigin="0.5,0.5">
        <Path.RenderTransform>
          <TransformGroup>
            <ScaleTransform />
            <SkewTransform />
            <RotateTransform Angle="0" />
            <TranslateTransform />
          </TransformGroup>
        </Path.RenderTransform>
      </Path>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Determinate" />
          <VisualState x:Name="Indeterminate">
            <Storyboard>
              <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetName="Content" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                <EasingDoubleKeyFrame Value="0" KeyTime="0" />
                <EasingDoubleKeyFrame Value="359" KeyTime="0:0:1.6" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.Internal.DashboardItemWaitIndicator}" TargetType="{x:Type dxdashi:DashboardItemWaitIndicator}">
    <Setter Property="IsHitTestVisible" Value="True" />
    <Setter Property="Template" Value="{StaticResource WaitIndicatorTemplate}" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.ListBoxDashboardLayoutItem}" TargetType="{x:Type dxdash:ListBoxDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:ListBoxItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:ListBoxItemThemeKey ResourceKey=ViewStyle}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DateFilterDashboardLayoutItem}" TargetType="{x:Type dxdash:DateFilterDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:DateFilterItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:DateFilterItemThemeKey ResourceKey=ViewStyle}}" />
    <Setter Property="DatePickerTemplate" Value="{DynamicResource {dxdasht:DateFilterItemThemeKey ResourceKey=DatePickerTemplate}}" />
    <Setter Property="QuickButtonTemplate" Value="{DynamicResource {dxdasht:DateFilterItemThemeKey ResourceKey=QuickButtonTemplate}}" />
    <Setter Property="DateNavigatorStyle" Value="{DynamicResource {dxdasht:DateFilterItemThemeKey ResourceKey=DateNavigatorStyle}}" />
    <Setter Property="DatePickerPopupTemplate" Value="{DynamicResource {dxdasht:DateFilterItemThemeKey ResourceKey=DatePickerPopupTemplate}}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Background" Value="Transparent" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.BoundImageDashboardLayoutItem}" TargetType="{x:Type dxdash:BoundImageDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:BoundImageItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:BoundImageItemThemeKey ResourceKey=ViewStyle}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.CardDashboardLayoutItem}" TargetType="{x:Type dxdash:CardDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=ViewStyle}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.ChartDashboardLayoutItem}" TargetType="{x:Type dxdash:ChartDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=ViewStyle}}" />
    <Setter Property="DiagramStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=DiagramStyle}}" />
    <Setter Property="LegendStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=LegendStyle}}" />
    <Setter Property="AxisXStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=AxisXStyle}}" />
    <Setter Property="SecondaryAxisYStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=SecondaryAxisYStyle}}" />
    <Setter Property="BarSeriesStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=BarSeriesStyle}}" />
    <Setter Property="BarStackedSeriesStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=BarStackedSeriesStyle}}" />
    <Setter Property="PointSeriesStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=PointSeriesStyle}}" />
    <Setter Property="LineSeriesStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=LineSeriesStyle}}" />
    <Setter Property="AreaSeriesStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=AreaSeriesStyle}}" />
    <Setter Property="StackedAreaSeriesStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=StackedAreaSeriesStyle}}" />
    <Setter Property="RangeAreaSeriesStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=RangeAreaSeriesStyle}}" />
    <Setter Property="RangeBarSeriesStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=RangeBarSeriesStyle}}" />
    <Setter Property="BubbleSeriesStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=BubbleSeriesStyle}}" />
    <Setter Property="StockSeriesStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=StockSeriesStyle}}" />
    <Setter Property="CandleStickSeriesStyle" Value="{DynamicResource {dxdasht:ChartItemThemeKey ResourceKey=CandleStickSeriesStyle}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.ComboBoxDashboardLayoutItem}" TargetType="{x:Type dxdash:ComboBoxDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:ComboBoxItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:ComboBoxItemThemeKey ResourceKey=ViewStyle}}" />
    <Setter Property="BorderThickness" Value="0" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.GaugeDashboardLayoutItem}" TargetType="{x:Type dxdash:GaugeDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:GaugeItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:GaugeItemThemeKey ResourceKey=ViewStyle}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.GridDashboardLayoutItem}" TargetType="{x:Type dxdash:GridDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:GridItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:GridItemThemeKey ResourceKey=ViewStyle}}" />
    <Setter Property="GridViewStyle" Value="{DynamicResource {dxdasht:GridItemThemeKey ResourceKey=GridViewStyle}}" />
    <Setter Property="ColumnStyle" Value="{DynamicResource {dxdasht:GridItemThemeKey ResourceKey=ColumnStyle}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.ImageDashboardLayoutItem}" TargetType="{x:Type dxdash:ImageDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:ImageItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:ImageItemThemeKey ResourceKey=ViewStyle}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.MapDashboardLayoutItem}" TargetType="{x:Type dxdash:MapDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:MapItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:MapItemThemeKey ResourceKey=ViewStyle}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.PieDashboardLayoutItem}" TargetType="{x:Type dxdash:PieDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:PieItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:PieItemThemeKey ResourceKey=ViewStyle}}" />
    <Setter Property="ChartStyle" Value="{DynamicResource {dxdasht:PieItemThemeKey ResourceKey=ChartStyle}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.PivotDashboardLayoutItem}" TargetType="{x:Type dxdash:PivotDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:PivotItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:PivotItemThemeKey ResourceKey=ViewStyle}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.RangeDashboardLayoutItem}" TargetType="{x:Type dxdash:RangeDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:RangeItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:RangeItemThemeKey ResourceKey=ViewStyle}}" />
    <Setter Property="RangeControlClientStyle" Value="{DynamicResource {dxdasht:RangeItemThemeKey ResourceKey=RangeControlClientStyle}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.TextBoxDashboardLayoutItem}" TargetType="{x:Type dxdash:TextBoxDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:TextBoxItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:TextBoxItemThemeKey ResourceKey=ViewStyle}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.TreemapDashboardLayoutItem}" TargetType="{x:Type dxdash:TreemapDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:TreemapItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:TreemapItemThemeKey ResourceKey=ViewStyle}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.TreeViewDashboardLayoutItem}" TargetType="{x:Type dxdash:TreeViewDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxdasht:TreeViewItemThemeKey ResourceKey=Template}}" />
    <Setter Property="ViewStyle" Value="{DynamicResource {dxdasht:TreeViewItemThemeKey ResourceKey=ViewStyle}}" />
    <Setter Property="TreeListViewStyle" Value="{DynamicResource {dxdasht:TreeViewItemThemeKey ResourceKey=TreeListViewStyle}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.CustomItemDashboardLayoutItem}" TargetType="{x:Type dxdash:CustomItemDashboardLayoutItem}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardWpf.DashboardLayoutItem}}">
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock Text="{dxdashi:DashboardLocalizationString MessageCustomItemIsNotSupported}" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>