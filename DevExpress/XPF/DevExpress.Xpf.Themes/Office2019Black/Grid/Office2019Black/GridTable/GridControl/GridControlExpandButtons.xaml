<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgi="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Grid/Generic/HeaderFooterItemsControlStyles.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019Black.v24.1;component/Grid/Office2019Black/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.BackgroundBorderControl}" TargetType="{x:Type dxg:BackgroundBorderControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:BackgroundBorderControl}">
          <Border x:Name="PART_Background" Background="#FF444444" BorderBrush="#FF444444" BorderThickness="0,0,0,1" Margin="0,0,1,0" cs:id="Border_0001" x:Uid="@Background=Editor.Background;BorderBrush=Editor.Background" />
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
              <Setter Property="Background" TargetName="PART_Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
              <Setter Property="BorderBrush" TargetName="PART_Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" cs:id="Setter_0000" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
              <Setter Property="Background" TargetName="PART_Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource TemplatedParent}}" />
              <Setter Property="BorderBrush" TargetName="PART_Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource TemplatedParent}}" cs:id="Setter_0001" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="0">
              <Setter Property="Margin" TargetName="PART_Background" Value="0" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- Expand -->
  <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
    <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
      <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
        <Path x:Name="Collapsed" Fill="{TemplateBinding Foreground}" Style="{StaticResource UIShape.Expand}" />
        <Path x:Name="Expanded" Fill="{TemplateBinding Foreground}" Opacity="0" Style="{StaticResource UIShape.Collapse}" />
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Opacity" TargetName="Collapsed" Value="0" />
        <Setter Property="Opacity" TargetName="Expanded" Value="1" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Fill" TargetName="Collapsed" Value="#FFDADADA" cs:id="Setter_0001" x:Uid="@Value=Foreground" />
        <Setter Property="Fill" TargetName="Expanded" Value="#FFDADADA" cs:id="Setter_0000" x:Uid="@Value=Foreground" />
        <Setter Property="Opacity" TargetName="Root" Value="1" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Fill" TargetName="Collapsed" Value="#FFDADADA" cs:id="Setter_0003" x:Uid="@Value=Foreground" />
        <Setter Property="Fill" TargetName="Expanded" Value="#FFDADADA" cs:id="Setter_0002" x:Uid="@Value=Foreground" />
        <Setter Property="Opacity" TargetName="Root" Value="1" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="Root" Value="23" />
        <Setter Property="MinWidth" TargetName="Root" Value="42" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=ExpandDetailButtonTemplate}" TargetType="{x:Type dxg:GridToggleStateButton}">
    <Grid x:Name="Root" Background="Transparent" dx:FrameworkElementHelper.IsVisible="{Binding Path=(dxg:GridDetailExpandButtonContainer.IsDetailButtonVisible), RelativeSource={RelativeSource TemplatedParent}}" cs:id="Grid_0000">
      <Border x:Name="BottomBorder" Background="#FF686868" BorderBrush="#FF444444" BorderThickness="0,0,0,1" Margin="0,0,1,0" VerticalAlignment="Bottom" Visibility="Collapsed" cs:id="Border_0000" x:Uid="@Background=Delimiter;BorderBrush=Editor.Background" />
      <Grid Background="#FF444444" HorizontalAlignment="Center" VerticalAlignment="Center" cs:id="Grid_0001" x:Uid="@Background=Editor.Background">
        <Path Style="{StaticResource UIShape.MasterDetailMinus}" Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <Path Style="{StaticResource UIShape.MasterDetailPlus}" Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverterInverted}}" />
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ShowRowBreak" Value="False" />
          <Condition Property="IsChecked" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Visibility" TargetName="BottomBorder" Value="Visible" />
      </MultiTrigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="Root" Value="42" />
        <Setter Property="MinWidth" TargetName="Root" Value="42" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="BorderBrush" TargetName="BottomBorder" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" cs:id="Setter_0000" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxgt:GroupRowThemeKey ResourceKey=ExpandButtonStyle}" TargetType="{x:Type dx:ToggleStateButton}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Height" Value="16" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=ExpandButtonTemplate}}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Width" Value="16" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinWidth" Value="42" />
        <Setter Property="MinHeight" Value="23" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridToggleStateButton}" TargetType="{x:Type dxg:GridToggleStateButton}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Focusable" Value="false" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=ExpandDetailButtonTemplate}}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
  </Style>
</ResourceDictionary>