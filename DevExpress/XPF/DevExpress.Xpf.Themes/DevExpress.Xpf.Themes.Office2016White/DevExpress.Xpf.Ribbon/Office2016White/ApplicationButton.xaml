<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <dx:NullableToVisibilityConverter x:Key="converter" />
  <dx:NullableToVisibilityConverter x:Key="invertedConverter" Invert="True" />
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Style2007}" TargetType="{x:Type ContentControl}">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Margin" Value="4,4,8,8" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Style2007InPopup}" TargetType="{x:Type ContentControl}">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Style2010}" TargetType="{x:Type ContentControl}">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
    <Setter Property="Margin" Value="0,0,4,0" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Style2010InPopup}" TargetType="{x:Type ContentControl}">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
    <Setter Property="Margin" Value="0,0,3,0" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=StyleTabletOffice}" TargetType="{x:Type ContentControl}">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Margin" Value="5" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=StyleTabletOfficeInPopup}" TargetType="{x:Type ContentControl}">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Margin" Value="5" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=StyleOfficeSlim}" TargetType="{x:Type ContentControl}">
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=StyleOfficeSlimInPopup}" TargetType="{x:Type ContentControl}">
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=NormalTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FFFFFFFF" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=RibbonStyle, RelativeSource={RelativeSource AncestorType={x:Type dxr:RibbonApplicationButtonControl}}}" Value="OfficeSlim">
        <Setter Property="Foreground" Value="#FF444444" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=SelectedTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FFFFFFFF" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=RibbonStyle, RelativeSource={RelativeSource AncestorType={x:Type dxr:RibbonApplicationButtonControl}}}" Value="OfficeSlim">
        <Setter Property="Foreground" Value="#FF0072C6" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=PressedTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FFFFFFFF" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=RibbonStyle, RelativeSource={RelativeSource AncestorType={x:Type dxr:RibbonApplicationButtonControl}}}" Value="OfficeSlim">
        <Setter Property="Foreground" Value="#FF0072C6" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=CheckedTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FFFFFFFF" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=RibbonStyle, RelativeSource={RelativeSource AncestorType={x:Type dxr:RibbonApplicationButtonControl}}}" Value="OfficeSlim">
        <Setter Property="Foreground" Value="#FFFFFFFF" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplate2007}" TargetType="{x:Type ContentControl}">
    <Grid Background="#00000000" Height="46" Width="46">
      <Border Background="#FFFFFFFF" CornerRadius="256" Margin="1" />
      <Border x:Name="DefaultState" Background="#FFFFFFFF" BorderBrush="#FFABABAB" BorderThickness="4" CornerRadius="256" />
      <Border x:Name="HoverState" Background="#FFFFFFFF" BorderBrush="#FF666666" BorderThickness="4" CornerRadius="256" Opacity="0" />
      <Border x:Name="SelectedState" Background="#FFFFFFFF" BorderBrush="#FF0072C6" BorderThickness="4" CornerRadius="256" Opacity="0" />
      <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="DefaultState" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Hover">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="DefaultState" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedState" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="DefaultState" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedState" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplate2007InPopup}" TargetType="{x:Type ContentControl}">
    <Grid Background="#00000000" Height="46" Width="46">
      <Border Background="#FFFFFFFF" CornerRadius="256" Margin="1" />
      <Border x:Name="DefaultState" Background="#FFFFFFFF" BorderBrush="#FFABABAB" BorderThickness="4" CornerRadius="256" />
      <Border x:Name="HoverState" Background="#FFFFFFFF" BorderBrush="#FF666666" BorderThickness="4" CornerRadius="256" />
      <Border x:Name="SelectedState" Background="#FFFFFFFF" BorderBrush="#FF0072C6" BorderThickness="4" CornerRadius="256" />
      <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="DefaultState" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Hover">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="DefaultState" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedState" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="DefaultState" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="SelectedState" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplate2010}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Grid1" MinHeight="22" MinWidth="60">
      <Border x:Name="NormalState" Background="#FF0072C6" Opacity="0" />
      <Border x:Name="HoverState" Background="#FF2A8DD4" Opacity="0" />
      <Border x:Name="CheckedState" Background="#FF0072C6" Opacity="0" />
      <ContentPresenter HorizontalAlignment="Center" Margin="8,2,8,0" VerticalAlignment="Center" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="NormalState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Hover">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="Grid1" Value="44" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplate2010InPopup}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Grid1" MinHeight="22" MinWidth="60">
      <Border Background="#FF0072C6" />
      <ContentPresenter HorizontalAlignment="Center" Margin="8,2,8,0" VerticalAlignment="Center" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="Grid1" Value="44" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!--TabletOffice-->
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplateTablet}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Grid1" Background="Transparent">
      <Path x:Name="path" Data="F1 M 8,0C 12.4183,0 16,3.58172 16,8C 16,12.4183 12.4183,16 8,16C 3.58172,16 -6.35783e-007,12.4183 -6.35783e-007,8C -6.35783e-007,3.58172 3.58172,0 8,0 Z M 2,8L 7,13L 10,13L 6,9L 13,9L 13,7L 5.8984,7L 10,3L 7,3L 2,8 Z " Fill="#FF0072C6" Height="16" HorizontalAlignment="Stretch" Margin="4,4,1,4" Opacity="0.8" Stretch="Fill" VerticalAlignment="Stretch" Width="16" />
      <dx:DXImage x:Name="image" HorizontalAlignment="Center" Source="{Binding Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, RelativeSource={RelativeSource Self}}" Stretch="None" VerticalAlignment="Center" Visibility="Collapsed" />
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, Converter={dxmvvm:ObjectToBooleanConverter}}" Value="True">
        <Setter Property="Visibility" TargetName="path" Value="Collapsed" />
        <Setter Property="Visibility" TargetName="image" Value="Visible" />
      </DataTrigger>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Opacity" TargetName="image" Value="1" />
        <Setter Property="Opacity" TargetName="path" Value="1" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" TargetName="path" Value="17" />
        <Setter Property="Margin" TargetName="image" Value="17" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplateTabletInPopup}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Grid1" Background="Transparent">
      <Path x:Name="path" Data="F1 M 8,0C 12.4183,0 16,3.58172 16,8C 16,12.4183 12.4183,16 8,16C 3.58172,16 -6.35783e-007,12.4183 -6.35783e-007,8C -6.35783e-007,3.58172 3.58172,0 8,0 Z M 2,8L 7,13L 10,13L 6,9L 13,9L 13,7L 5.8984,7L 10,3L 7,3L 2,8 Z " Fill="#FFFFFFFF" Height="16" HorizontalAlignment="Stretch" Margin="4,4,1,4" Opacity="0.8" Stretch="Fill" VerticalAlignment="Stretch" Width="16" />
      <dx:DXImage x:Name="image" HorizontalAlignment="Center" Source="{Binding Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, RelativeSource={RelativeSource Self}}" Stretch="None" VerticalAlignment="Center" Visibility="Collapsed" />
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, Converter={dxmvvm:ObjectToBooleanConverter}}" Value="True">
        <Setter Property="Visibility" TargetName="path" Value="Collapsed" />
        <Setter Property="Visibility" TargetName="image" Value="Visible" />
      </DataTrigger>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Opacity" TargetName="image" Value="1" />
        <Setter Property="Opacity" TargetName="path" Value="1" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" TargetName="path" Value="17" />
        <Setter Property="Margin" TargetName="image" Value="17" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!--OfficeSlim-->
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplateOfficeSlim}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Root" MinHeight="22" MinWidth="60">
      <Grid x:Name="NormalState" Opacity="0" />
      <Grid x:Name="HoverState" Opacity="0" />
      <Grid x:Name="CheckedState" Opacity="0">
        <Border Background="#FFFFFFFF" BorderBrush="#FFD6D6D6" BorderThickness="1,1,1,0" />
      </Grid>
      <ContentPresenter HorizontalAlignment="Center" Margin="0,2,0,0" VerticalAlignment="Center" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="NormalState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Hover">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="Root" Value="44" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplateOfficeSlimInPopup}" TargetType="{x:Type ContentControl}">
    <Grid MinHeight="22" MinWidth="60">
      <Border Background="#FF0072C6" />
      <ContentPresenter HorizontalAlignment="Center" Margin="0,2,0,0" VerticalAlignment="Center" />
    </Grid>
  </ControlTemplate>
  <!--BEGIN WPF-->
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Style2007InAeroWindow}" TargetType="{x:Type ContentControl}">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Margin" Value="5,8,5,0" />
  </Style>
  <!--END WPF-->
</ResourceDictionary>