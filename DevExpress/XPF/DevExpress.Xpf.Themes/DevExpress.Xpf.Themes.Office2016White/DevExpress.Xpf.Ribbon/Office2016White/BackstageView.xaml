<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxri="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/internal" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <sys:Boolean x:Key="{dxrt:BackstageThemeKey ResourceKey=DisableDefaultBackgroundGlyph}">True</sys:Boolean>
  <sys:Boolean x:Key="{dxrt:BackstageThemeKey ResourceKey=IsFullScreen}">True</sys:Boolean>
  <sys:Boolean x:Key="{dxrt:BackstageThemeKey ResourceKey=EnableWindowTitleShrink}">True</sys:Boolean>
  <ControlTemplate x:Key="{dxrt:BackstageThemeKey ResourceKey=BackgroundTemplate}" TargetType="{x:Type ContentControl}">
    <Border Background="#FFFFFFFF" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:BackstageThemeKey ResourceKey=TabPaneTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:BackstageThemeKey ResourceKey=HeaderAndButtonsBackground}" />
  <ControlTemplate x:Key="{dxrt:BackstageThemeKey ResourceKey=LeftPartBackground}" TargetType="{x:Type Control}">
    <Border Background="#FF0072C6" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
  </ControlTemplate>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=ControlBoxContainerStyle}" TargetType="{x:Type dxri:RibbonControlBoxContainer}">
    <Setter Property="Margin" Value="0" />
    <Setter Property="dx:HeaderItemControl.CloseTemplateProvider">
      <Setter.Value>
        <dx:CloseHeaderItemControlTemplateProvider CloseGlyphTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonGlyph}}" HeaderItemControlStyle="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderCloseButtonStyle}}" MouseOverBackgroundTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonBackgroundMouseOverState}}" MouseOverForeground="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonForegroundMouseOverState}}" NormalBackgroundTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonBackgroundNormalState}}" NormalForeground="#FF2E2B2B" PressedBackgroundTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonBackgroundPressedState}}" PressedForeground="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonForegroundPressedState}}" />
      </Setter.Value>
    </Setter>
    <Setter Property="dx:HeaderItemControl.CommonTemplateProvider">
      <Setter.Value>
        <dx:CommonHeaderItemControlTemplateProvider HeaderItemControlStyle="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderButtonStyle}}" MaximizeGlyphTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonMaximizeButtonGlyph}}" MinimizeGlyphTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonMinimizeButtonGlyph}}" MouseOverBackgroundTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonBackgroundMouseOverState}}" MouseOverForeground="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonForegroundMouseOverState}}" NormalBackgroundTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonBackgroundNormalState}}" NormalForeground="#FF2E2B2B" PressedBackgroundTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonBackgroundPressedState}}" PressedForeground="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonForegroundPressedState}}" RestoreGlyphTemplate="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonRestoreButtonGlyph}}" />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=HeaderPresenterStyle}" TargetType="{x:Type dxri:BackstageViewHeaderPresenter}">
    <Setter Property="Margin" Value="0,4,0,0" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=BackstageViewControl.RibbonStyle, RelativeSource={RelativeSource Self}}" Value="Office2007">
        <Setter Property="Margin" Value="0,5,0,0" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=BackstageViewBackGlyphTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Setter Property="Height" Value="50" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="Margin" Value="16,8" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
          <Grid Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="Common">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Hover">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="Opacity" To="0.5" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="LoadingStates">
                <VisualState x:Name="Loading">
                  <Storyboard>
                    <DoubleAnimation Duration="00:00:00.2" From="45" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="90" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unloading">
                  <Storyboard>
                    <DoubleAnimation Duration="00:00:00.2" From="90" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="45" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="Glyph" Data="F1 M 220,233C 232.702,233 243,243.297 243,256C 243,268.702 232.703,279 220,279C 207.298,279 197,268.702 197,256C 197,243.297 207.298,233 220,233 Z M 220,236C 208.955,236 200,244.954 200,256C 200,267.046 208.955,276 220,276C 231.046,276 240,267.046 240,256C 240,244.954 231.046,236 220,236 Z M 218,244L 222,244L 222,263L 231,254L 231,259L 222,268L 221,269L 219,269L 218,268L 209,259L 209,254L 218,263L 218,244 Z " Fill="#FFFFFFFF" Height="35" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Width="35">
              <Path.RenderTransform>
                <RotateTransform Angle="90" />
              </Path.RenderTransform>
            </Path>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Width" Value="50" />
    <Setter Property="dxr:BackstageViewContentHost.AnimationTime" Value="00:00:00.2" />
  </Style>
  <ControlTemplate x:Key="{dxrt:BackstageThemeKey ResourceKey=ControlPaneTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter />
  </ControlTemplate>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=BackgroundGlyphStyle}" TargetType="{x:Type Image}">
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="Stretch" Value="None" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
  </Style>
  <SolidColorBrush x:Key="{dxrt:BackstageThemeKey ResourceKey=Foreground}" Color="#FF000000" />
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=BackgroundStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Template" Value="{DynamicResource {dxrt:BackstageThemeKey ResourceKey=BackgroundTemplate}}" />
  </Style>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=TabPaneStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Template" Value="{DynamicResource {dxrt:BackstageThemeKey ResourceKey=TabPaneTemplate}}" />
  </Style>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=ControlPaneStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Template" Value="{DynamicResource {dxrt:BackstageThemeKey ResourceKey=ControlPaneTemplate}}" />
  </Style>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=ItemsPresenterStyle}" TargetType="{x:Type ItemsPresenter}">
    <Setter Property="Margin" Value="0,1,0,1" />
  </Style>
</ResourceDictionary>