<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!--BEGIN WPF-->
  <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
  <Thickness x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarFirstSeparatorMargin}">2,0,0,0</Thickness>
  <Thickness x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarLastSeparatorMargin}">0,0,2,0</Thickness>
  <!--END WPF-->
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarLeftContentTemplate}" TargetType="ContentControl">
    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarLeftContentTemplateInPopup}" TargetType="ContentControl">
    <ContentPresenter Content="{TemplateBinding Content}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarRightContentTemplateInPopup}" TargetType="ContentControl">
    <ContentPresenter Content="{TemplateBinding Content}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarLeftContentTemplateInFooter}" TargetType="ContentControl">
    <ContentPresenter Content="{TemplateBinding Content}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarLeftContentTemplateInTitle}" TargetType="ContentControl">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Control x:Name="PART_FirstSeparator" Grid.Column="0" Margin="{DynamicResource {dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarFirstSeparatorMargin}}" Template="{DynamicResource {dxbt:BarItemSeparatorThemeKey ResourceKey=InRibbonQuickAccessToolbarCommonTemplate}}" />
      <ContentPresenter Content="{TemplateBinding Content}" Grid.Column="1" />
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dxr:RibbonControl.Ribbon).IsInRibbonWindow, RelativeSource={RelativeSource Self}}" Value="False">
        <Setter Property="Visibility" TargetName="PART_FirstSeparator" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding VisibleItemsCount, RelativeSource={RelativeSource AncestorType=dxr:RibbonQuickAccessToolbarControl}}" Value="0">
        <Setter Property="Visibility" TargetName="PART_FirstSeparator" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxcn:DXWindowsHelper.WindowKind), RelativeSource={RelativeSource Self}}" Value="{x:Static dxcn:DXWindowsHelper.ThemedWindow}">
        <Setter Property="Margin" TargetName="PART_FirstSeparator" Value="0" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxr:RibbonControl.Ribbon).ToolbarHideSeparators, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Visibility" TargetName="PART_FirstSeparator" Value="Collapsed" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarLeftContentTemplate2010}" TargetType="ContentControl">
    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarRightContentTemplate}" TargetType="ContentControl">
    <ContentPresenter Content="{TemplateBinding Content}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarRightContentTemplateInFooter}" TargetType="ContentControl">
    <ContentPresenter Content="{TemplateBinding Content}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarRightContentTemplateInTitle}" TargetType="ContentControl">
    <Grid Margin="0,4,0,3">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" Grid.Column="0" />
      <Control x:Name="PART_LastSeparator" Grid.Column="1" Margin="{DynamicResource {dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarLastSeparatorMargin}}" Template="{DynamicResource {dxbt:BarItemSeparatorThemeKey ResourceKey=InRibbonQuickAccessToolbarCommonTemplate}}" />
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dxr:RibbonControl.Ribbon).IsInRibbonWindow, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Visibility" TargetName="PART_LastSeparator" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxr:RibbonControl.Ribbon).ToolbarShowCustomizationButton, RelativeSource={RelativeSource Self}}" Value="False">
        <Setter Property="Visibility" TargetName="PART_LastSeparator" Value="Collapsed" />
        <Setter Property="Visibility" TargetName="contentPresenter" Value="Collapsed" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarRightContentTemplate2010}" TargetType="ContentControl">
    <ContentPresenter Content="{TemplateBinding Content}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarCustomizationButtonTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Grid x:Name="Grid1" Margin="0,0,0,1" MinHeight="0" MinWidth="0" SnapsToDevicePixels="True">
      <Border x:Name="HoverState" Background="#FFCDE6F7" Opacity="0" />
      <Border x:Name="PressedState" Background="#FF92C0E0" Opacity="0" />
      <Path x:Name="Path" Data="F1 M 4,6L 3.03165e-013,2L 8,2L 4,6 Z M 0,9.53674e-007L 8,9.53674e-007L 8,1L 0,1L 0,9.53674e-007 Z " Fill="#FF666666" Height="6" HorizontalAlignment="Center" Margin="0,1,0,0" Stretch="Fill" VerticalAlignment="Center" Width="7" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Hover">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF2A8DD4" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF2A8DD4" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinWidth" TargetName="Grid1" Value="44" />
        <Setter Property="MinHeight" TargetName="Grid1" Value="44" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarCustomizationButtonTemplateInFooter}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Grid x:Name="Grid1" Margin="0,0,0,1" MinHeight="0" MinWidth="0" SnapsToDevicePixels="True">
      <Border x:Name="HoverState" Background="#FFCDE6F7" Opacity="0" />
      <Border x:Name="PressedState" Background="#FF92C0E0" Opacity="0" />
      <Path x:Name="Path" Data="F1 M 4,6L 3.03165e-013,2L 8,2L 4,6 Z M 0,9.53674e-007L 8,9.53674e-007L 8,1L 0,1L 0,9.53674e-007 Z " Fill="#FF666666" Height="6" HorizontalAlignment="Center" Margin="0,1,0,0" Stretch="Fill" VerticalAlignment="Center" Width="7" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Hover">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF2A8DD4" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF2A8DD4" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinWidth" TargetName="Grid1" Value="44" />
        <Setter Property="MinHeight" TargetName="Grid1" Value="44" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarDropDownButtonTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Grid x:Name="Grid1" Margin="0,0,0,1" MinHeight="0" MinWidth="0" SnapsToDevicePixels="True">
      <Border x:Name="HoverState" Background="#FFCDE6F7" Opacity="0" />
      <Border x:Name="PressedState" Background="#FF92C0E0" Opacity="0" />
      <Path x:Name="Path" Data="F1 M 0,0L 4,4L 4,0L 8,4L 4,8L 4,4L 5.92119e-016,8L 0,0 Z " Fill="#FF666666" Height="7" Margin="4,1,3,0" SnapsToDevicePixels="True" Stretch="Fill" Width="8" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Hover">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF2A8DD4" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF2A8DD4" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinWidth" TargetName="Grid1" Value="44" />
        <Setter Property="MinHeight" TargetName="Grid1" Value="44" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarDropDownButtonTemplateInFooter}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Grid x:Name="Grid1" Margin="0,0,0,1" MinHeight="0" MinWidth="0" SnapsToDevicePixels="True">
      <Border x:Name="HoverState" Background="#FFCDE6F7" Opacity="0" />
      <Border x:Name="PressedState" Background="#FF92C0E0" Opacity="0" />
      <Grid Height="6" HorizontalAlignment="Center" Margin="3,0,2,0" VerticalAlignment="Center" Width="8">
        <Path x:Name="Path1" Data="F1 M 147,109L 150,112L 147,115L 147,109 Z" Fill="#FF666666" HorizontalAlignment="Right" Margin="0,0,1,0" Stretch="Fill" Width="3" />
        <Path x:Name="Path2" Data="F1 M 143,109L 146,112L 143,115L 143,109 Z" Fill="#FF666666" HorizontalAlignment="Left" Stretch="Fill" Width="3" />
      </Grid>
      <Path x:Name="Path" Data="F1 M 0,0L 4,4L 4,0L 8,4L 4,8L 4,4L 5.92119e-016,8L 0,0 Z " Fill="#FF666666" Height="7" Margin="3,0,3,0" SnapsToDevicePixels="True" Stretch="Fill" Width="8" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Hover">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path1" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF2A8DD4" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path2" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF2A8DD4" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path1" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path2" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path1" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path2" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path1" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF2A8DD4" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Path2" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF2A8DD4" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinWidth" TargetName="Grid1" Value="44" />
        <Setter Property="MinHeight" TargetName="Grid1" Value="44" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarPopupBorderTemplate}" TargetType="{x:Type dxr:RibbonQuickAccessToolbarPopupBorderControl}">
    <Border Background="#FFFFFFFF" BorderBrush="#FFD6D6D6" BorderThickness="1">
      <ContentPresenter Content="{TemplateBinding Content}" Margin="1" />
    </Border>
  </ControlTemplate>
  <!--BEGIN WPF-->
  <!-- Aero -->
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarLeftContentTemplateInAeroHeader}" TargetType="ContentControl">
    <ContentPresenter Content="{TemplateBinding Content}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarLeftContentTemplate2010InAeroHeader}" TargetType="ContentControl">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Control x:Name="PART_FirstSeparator" Grid.Column="0" Margin="{DynamicResource {dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarFirstSeparatorMargin}}" Template="{DynamicResource {dxbt:BarItemSeparatorThemeKey ResourceKey=InRibbonQuickAccessToolbarCommonTemplate}}" />
      <ContentPresenter Content="{TemplateBinding Content}" Grid.Column="1" />
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dxr:RibbonControl.Ribbon).IsInRibbonWindow, RelativeSource={RelativeSource Self}}" Value="False">
        <Setter Property="Visibility" TargetName="PART_FirstSeparator" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding VisibleItemsCount, RelativeSource={RelativeSource AncestorType=dxr:RibbonQuickAccessToolbarControl}}" Value="0">
        <Setter Property="Visibility" TargetName="PART_FirstSeparator" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxcn:DXWindowsHelper.WindowKind), RelativeSource={RelativeSource Self}}" Value="{x:Static dxcn:DXWindowsHelper.ThemedWindow}">
        <Setter Property="Margin" TargetName="PART_FirstSeparator" Value="0" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarRightContentTemplateInAeroHeader}" TargetType="ContentControl">
    <ContentPresenter Content="{TemplateBinding Content}" Margin="5,2,0,2" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarRightContentTemplate2010InAeroHeader}" TargetType="ContentControl">
    <Grid Margin="2,0,0,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <ContentPresenter Content="{TemplateBinding Content}" Grid.Column="0" />
      <Control x:Name="PART_LastSeparator" Grid.Column="1" Margin="{DynamicResource {dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarLastSeparatorMargin}}" Template="{DynamicResource {dxbt:BarItemSeparatorThemeKey ResourceKey=InRibbonQuickAccessToolbarCommonTemplate}}" />
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dxr:RibbonControl.Ribbon).IsInRibbonWindow, RelativeSource={RelativeSource Self}}" Value="False">
        <Setter Property="Visibility" TargetName="PART_LastSeparator" Value="Collapsed" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!--END WPF-->
</ResourceDictionary>