<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/docking/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:ve="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=LeftMargin}">0,3</Thickness>
  <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=TopMargin}">3,0</Thickness>
  <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=RightMargin}">0,3</Thickness>
  <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=BottomMargin}">3,0</Thickness>
  <Thickness x:Key="{dxt:AutoHideTrayElementsThemeKey ResourceKey=CaptionBorderThickness}">1,0,1,1</Thickness>
  <Thickness x:Key="{dxt:AutoHideTrayElementsThemeKey ResourceKey=BorderThickness}">0,0,0,1</Thickness>
  <ControlTemplate x:Key="{dxt:AutoHideTrayElementsThemeKey ResourceKey=Caption}">
    <Grid x:Name="itemHeader" ve:DockPane.HitTestType="Header" Visibility="{Binding Visibility}">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="PART_CaptionControlPresenter" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="#FF3C3C3C" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#00000000" />
              <ColorAnimation Duration="0" Storyboard.TargetName="PART_CaptionControlPresenter" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="#FF3C3C3C" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Selected">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#00000000" />
              <ColorAnimation Duration="0" Storyboard.TargetName="PART_CaptionControlPresenter" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="#FF0072C6" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="LocationStates">
          <VisualState x:Name="Left">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0,0,0,-1" Storyboard.TargetName="itemHeader" Storyboard.TargetProperty="Margin" />
              <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0,1,1,1" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Right">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0,0,0,-1" Storyboard.TargetName="itemHeader" Storyboard.TargetProperty="Margin" />
              <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="1,1,0,1" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Top">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0,0,-1,0" Storyboard.TargetName="itemHeader" Storyboard.TargetProperty="Margin" />
              <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="1,0,1,1" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Bottom">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0,0,-1,0" Storyboard.TargetName="itemHeader" Storyboard.TargetProperty="Margin" />
              <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="1,1,1,0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border x:Name="Border" Background="#FFD6D6D6" />
      <ve:AutoHideTransformPanel x:Name="PART_TransformPanel">
        <ve:AutoHideTransformPanel.Orientation>
          <Binding Path="(ve:AutoHideTray.Orientation)" RelativeSource="{RelativeSource TemplatedParent}">
            <Binding.Converter>
              <ve:OrientationInvertConverter />
            </Binding.Converter>
          </Binding>
        </ve:AutoHideTransformPanel.Orientation>
        <Border x:Name="front">
          <ve:TemplatedTabCaptionControl x:Name="PART_CaptionControlPresenter" Foreground="#FF3C3C3C" LayoutItem="{Binding}" Padding="5,3" />
        </Border>
      </ve:AutoHideTransformPanel>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" TargetName="PART_CaptionControlPresenter" Value="12" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <sys:Double x:Key="{dxt:AutoHidePaneElementsThemeKey ResourceKey=SizerThickness}">6</sys:Double>
  <sys:Double x:Key="{dxt:AutoHidePaneElementsThemeKey ResourceKey=TouchSizerThickness}">24</sys:Double>
  <Thickness x:Key="{dxt:AutoHidePaneElementsThemeKey ResourceKey=ContentMargin}">2</Thickness>
  <ve:DockTypeToThicknessConverter x:Key="dockTypeToThicknessLightConverter" All="1" Inverted="True" />
  <ControlTemplate x:Key="{dxt:AutoHidePaneElementsThemeKey ResourceKey=Template}" TargetType="ve:AutoHidePane">
    <!--BEGIN WPF-->
    <ve:AutoHidePanePresenter x:Name="PART_Presenter">
      <!--END WPF-->
      <DockPanel Background="Transparent">
        <DockPanel.Resources>
          <ve:DockToVerticalAlignmentConverter x:Key="dockToVerticalAlignmentConverter" />
          <ve:DockToHorizontalAlignmentConverter x:Key="dockToHorizontalAlignmentConverter" />
          <ve:DockTypeToThicknessConverter x:Key="dockTypeToThicknessConverter" All="7" Inverted="True" />
          <dx:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
          <dx:BoolToVisibilityInverseConverter x:Key="boolToVisibilityInverseConverter" />
          <ve:DockInverseConverter x:Key="dockInverseConverter" />
        </DockPanel.Resources>
        <Grid Background="Transparent" Cursor="{Binding ElementName=PART_Sizer, Path=Cursor}" DockPanel.Dock="{Binding DockType,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource dockInverseConverter}}" HorizontalAlignment="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockToHorizontalAlignmentConverter}}" ve:DockPane.HitTestType="Border" VerticalAlignment="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockToVerticalAlignmentConverter}}" Visibility="{Binding IsSizerVisible,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
          <ve:ElementSizer x:Name="PART_Sizer" Orientation="{Binding Path=(ve:AutoHideTray.Orientation), RelativeSource={RelativeSource TemplatedParent}}" Thickness="{DynamicResource {dxt:AutoHidePaneElementsThemeKey ResourceKey=SizerThickness}}" />
        </Grid>
        <Grid x:Name="PART_PaneContent" Background="Transparent">
          <Grid ve:DockPane.HitTestType="Border">
            <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" Margin="{DynamicResource {dxt:AutoHidePaneElementsThemeKey ResourceKey=ContentMargin}}" />
          </Grid>
          <Border x:Name="PART_PaneBorder" BorderBrush="Transparent" BorderThickness="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockTypeToThicknessConverter}}" ve:DockPane.HitTestType="Border" Visibility="{Binding IsSizerVisible,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityInverseConverter}}"></Border>
        </Grid>
      </DockPanel>
    </ve:AutoHidePanePresenter>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dxdo:DockLayoutManager.DockLayoutManager).EnableWin32Compatibility, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Margin" TargetName="Content" Value="0" />
      </DataTrigger>
      <Trigger Property="ViewStyle" Value="Light">
        <Setter Property="BorderThickness" TargetName="PART_PaneBorder" Value="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockTypeToThicknessLightConverter}}" />
        <Setter Property="BorderBrush" TargetName="PART_PaneBorder" Value="{DynamicResource {dxt:DockPaneElementsThemeKey ResourceKey=BorderBrush}}" />
        <Setter Property="Thickness" TargetName="PART_Sizer" Value="1" />
        <Setter Property="Background" TargetName="PART_Sizer" Value="{DynamicResource {dxt:DockPaneElementsThemeKey ResourceKey=BorderBrush}}" />
        <Setter Property="Margin" TargetName="Content" Value="0" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Thickness" TargetName="PART_Sizer" Value="{DynamicResource {dxt:AutoHidePaneElementsThemeKey ResourceKey=TouchSizerThickness}}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- AutoHide Theme Elements -->
  <ControlTemplate x:Key="{dxt:DockElementsThemeKey ResourceKey=ElementSizer}" TargetType="ve:ElementSizer">
    <dx:Container Background="{TemplateBinding Background}" UseLayoutRounding="True">
      <dx:Container x:Name="HorizontalRootElement" Cursor="SizeNS" Height="{TemplateBinding Thickness}" />
      <dx:Container x:Name="VerticalRootElement" Cursor="SizeWE" Width="{TemplateBinding Thickness}" />
    </dx:Container>
  </ControlTemplate>
</ResourceDictionary>