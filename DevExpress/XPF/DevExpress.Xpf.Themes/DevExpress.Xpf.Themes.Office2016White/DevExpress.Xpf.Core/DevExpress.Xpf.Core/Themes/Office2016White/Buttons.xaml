<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016White.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/Brushes.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016White.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/SharedResources.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <s:Double x:Key="{dxt:DropDownButtonThemeKey ResourceKey=ButtonOpacity}">0.5</s:Double>
  <Visibility x:Key="Visible">Visible</Visibility>
  <Visibility x:Key="Collapsed">Collapsed</Visibility>
  <SolidColorBrush x:Key="{dxt:DropDownButtonThemeKey ResourceKey=Foreground}" Color="#FF000000" />
  <SolidColorBrush x:Key="{dxt:DropDownButtonThemeKey ResourceKey=ArrowForeground}" Color="#FF000000" />
  <SolidColorBrush x:Key="{dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}" Color="#FF000000" />
  <SolidColorBrush x:Key="{dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}" Color="#FF3C3C3C" />
  <SolidColorBrush x:Key="{dxt:DropDownButtonThemeKey ResourceKey=ArrowPressedForeground}" Color="#FF000000" />
  <SolidColorBrush x:Key="{dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}" Color="#FF000000" />
  <SolidColorBrush x:Key="{dxt:DropDownButtonThemeKey ResourceKey=ArrowMouseOverForeground}" Color="#FF000000" />
  <!-- General -->
  <dxcn:RenderTemplate x:Key="{dxt:DropDownButtonThemeKey ResourceKey=BorderTemplate}">
    <dxcn:RenderPanel>
      <dxcn:RenderBorder Name="Outer" Background="{StaticResource Button.DefaultState.Border2}" BorderBrush="{StaticResource Button.DefaultState.Border1}" BorderThickness="1" />
      <dxcn:RenderBorder Name="Focused" BorderBrush="#FF0072C6" BorderThickness="1" Visibility="Collapsed" />
      <dxcn:RenderBorder Name="Defaulted" BorderBrush="#FF0072C6" BorderThickness="1" Visibility="Collapsed" />
    </dxcn:RenderPanel>
    <dxcn:RenderTemplate.Triggers>
      <dxcn:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True" ValueSource="TemplatedParent">
        <dxcn:RenderSetter Property="MinHeight" TargetName="Outer" Value="44" />
      </dxcn:RenderTrigger>
      <dxcn:RenderStateGroup Name="FocusStates">
        <dxcn:RenderStateTrigger Name="Unfocused">
          <dxcn:RenderSetter Property="Visibility" TargetName="Focused" Value="{StaticResource Collapsed}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Focused">
          <dxcn:RenderSetter Property="Visibility" TargetName="Focused" Value="{StaticResource Visible}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="DefaultStates">
        <dxcn:RenderStateTrigger Name="NotDefaulted">
          <dxcn:RenderSetter Property="Visibility" TargetName="Defaulted" Value="{StaticResource Collapsed}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="IsDefaulted">
          <dxcn:RenderSetter Property="Visibility" TargetName="Defaulted" Value="{StaticResource Visible}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="VisualStates">
        <dxcn:RenderStateTrigger Name="Normal" />
        <dxcn:RenderStateTrigger Name="MouseOver">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.HoverState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.HoverState.Border2}" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Pressed">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.PressedState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.PressedState.Border2}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Checked">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.CheckedState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.CheckedState.Border2}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="PlacementStates">
        <dxcn:RenderStateTrigger Name="Default" />
        <dxcn:RenderStateTrigger Name="Left">
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1,1,0,1" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,1,0,1" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Right">
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="0,1,1,1" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Top">
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1,1,1,0" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,1,1,0" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Bottom">
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,0,1,1" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
    </dxcn:RenderTemplate.Triggers>
  </dxcn:RenderTemplate>
  <!-- Content -->
  <dxcn:RenderTemplate x:Key="{dxt:DropDownButtonThemeKey ResourceKey=ContentBorderTemplate}">
    <dxcn:RenderPanel>
      <dxcn:RenderBorder Name="Outer" Background="{StaticResource Button.DefaultState.Border2}" BorderBrush="{StaticResource Button.DefaultState.Border1}" BorderThickness="1" />
      <dxcn:RenderBorder Name="Focused" BorderBrush="#FF0072C6" BorderThickness="1" Visibility="Collapsed" />
      <dxcn:RenderBorder Name="Defaulted" BorderBrush="#FF0072C6" BorderThickness="1" Visibility="Collapsed" />
    </dxcn:RenderPanel>
    <dxcn:RenderTemplate.Triggers>
      <dxcn:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True" ValueSource="TemplatedParent">
        <dxcn:RenderSetter Property="MinHeight" TargetName="Outer" Value="44" />
      </dxcn:RenderTrigger>
      <dxcn:RenderStateGroup Name="FocusStates">
        <dxcn:RenderStateTrigger Name="Unfocused">
          <dxcn:RenderSetter Property="Visibility" TargetName="Focused" Value="{StaticResource Collapsed}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Focused">
          <dxcn:RenderSetter Property="Visibility" TargetName="Focused" Value="{StaticResource Visible}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="DefaultStates">
        <dxcn:RenderStateTrigger Name="NotDefaulted">
          <dxcn:RenderSetter Property="Visibility" TargetName="Defaulted" Value="{StaticResource Collapsed}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="IsDefaulted">
          <dxcn:RenderSetter Property="Visibility" TargetName="Defaulted" Value="{StaticResource Visible}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="VisualStates">
        <dxcn:RenderStateTrigger Name="Normal" />
        <dxcn:RenderStateTrigger Name="MouseOver">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.HoverState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.HoverState.Border2}" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Pressed">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.PressedState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.PressedState.Border2}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Checked">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.CheckedState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.CheckedState.Border2}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="PlacementStates">
        <dxcn:RenderStateTrigger Name="Default" />
        <dxcn:RenderStateTrigger Name="Left">
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1,1,0,1" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,1,0,1" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Right">
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="0,1,1,1" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Top">
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1,1,1,0" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,1,1,0" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Bottom">
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,0,1,1" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
    </dxcn:RenderTemplate.Triggers>
  </dxcn:RenderTemplate>
  <!-- Arrow -->
  <dxcn:RenderTemplate x:Key="{dxt:DropDownButtonThemeKey ResourceKey=ArrowBorderTemplate}">
    <dxcn:RenderPanel>
      <dxcn:RenderBorder Name="Outer" Background="{StaticResource Button.DefaultState.Border2}" BorderBrush="{StaticResource Button.DefaultState.Border1}" BorderThickness="1" />
      <dxcn:RenderBorder Name="Focused" BorderBrush="#FF0072C6" BorderThickness="1" Visibility="Collapsed" />
      <dxcn:RenderBorder Name="Defaulted" BorderBrush="#FF0072C6" BorderThickness="1" Visibility="Collapsed" />
    </dxcn:RenderPanel>
    <dxcn:RenderTemplate.Triggers>
      <dxcn:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True" ValueSource="TemplatedParent">
        <dxcn:RenderSetter Property="MinHeight" TargetName="Outer" Value="44" />
      </dxcn:RenderTrigger>
      <dxcn:RenderStateGroup Name="FocusStates">
        <dxcn:RenderStateTrigger Name="Unfocused">
          <dxcn:RenderSetter Property="Visibility" TargetName="Focused" Value="{StaticResource Collapsed}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Focused">
          <dxcn:RenderSetter Property="Visibility" TargetName="Focused" Value="{StaticResource Visible}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="DefaultStates">
        <dxcn:RenderStateTrigger Name="NotDefaulted">
          <dxcn:RenderSetter Property="Visibility" TargetName="Defaulted" Value="{StaticResource Collapsed}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="IsDefaulted">
          <dxcn:RenderSetter Property="Visibility" TargetName="Defaulted" Value="{StaticResource Visible}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="VisualStates">
        <dxcn:RenderStateTrigger Name="Normal" />
        <dxcn:RenderStateTrigger Name="MouseOver">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.HoverState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.HoverState.Border2}" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Pressed">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.PressedState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.PressedState.Border2}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Checked">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.CheckedState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.CheckedState.Border2}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="PlacementStates">
        <dxcn:RenderStateTrigger Name="Default" />
        <dxcn:RenderStateTrigger Name="Left">
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1,1,0,1" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,1,0,1" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Right">
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="0,1,1,1" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Top">
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1,1,1,0" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,1,1,0" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Bottom">
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,0,1,1" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
    </dxcn:RenderTemplate.Triggers>
  </dxcn:RenderTemplate>
  <!-- Separator -->
  <dxcn:RenderTemplate x:Key="{dxt:DropDownButtonThemeKey ResourceKey=SeparatorBorderTemplate}">
    <dxcn:RenderPanel />
  </dxcn:RenderTemplate>
  <dx:WpfSvgPalette x:Key="{dxt:BrushesThemeKey ResourceKey=ContrastSvgPalette}">
    <SolidColorBrush x:Key="BlackColor" Color="#FF808080" />
    <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="RedColor" Color="#FFD86344" />
    <SolidColorBrush x:Key="YellowColor" Color="#FFEDC87E" />
    <SolidColorBrush x:Key="GreenColor" Color="#FF68A490" />
    <SolidColorBrush x:Key="BlueColor" Color="#FF4D82B8" />
    <dx:WpfSvgPalette.States>
      <dx:WpfSvgPalette x:Key="Hover">
        <SolidColorBrush x:Key="BlackColor" Color="#FF808080" />
        <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RedColor" Color="#FFD86344" />
        <SolidColorBrush x:Key="YellowColor" Color="#FFEDC87E" />
        <SolidColorBrush x:Key="GreenColor" Color="#FF68A490" />
        <SolidColorBrush x:Key="BlueColor" Color="#FF4D82B8" />
      </dx:WpfSvgPalette>
      <dx:WpfSvgPalette x:Key="Pressed">
        <SolidColorBrush x:Key="BlackColor" Color="#FF808080" />
        <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RedColor" Color="#FFD86344" />
        <SolidColorBrush x:Key="YellowColor" Color="#FFEDC87E" />
        <SolidColorBrush x:Key="GreenColor" Color="#FF68A490" />
        <SolidColorBrush x:Key="BlueColor" Color="#FF4D82B8" />
      </dx:WpfSvgPalette>
    </dx:WpfSvgPalette.States>
  </dx:WpfSvgPalette>
  <dx:WpfSvgPalette x:Key="{dxt:BrushesThemeKey ResourceKey=SvgPalette}">
    <SolidColorBrush x:Key="BlackColor" Color="#FF808080" />
    <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="RedColor" Color="#FFD86344" />
    <SolidColorBrush x:Key="YellowColor" Color="#FFEDC87E" />
    <SolidColorBrush x:Key="GreenColor" Color="#FF68A490" />
    <SolidColorBrush x:Key="BlueColor" Color="#FF4D82B8" />
    <dx:WpfSvgPalette.States>
      <dx:WpfSvgPalette x:Key="Hover">
        <SolidColorBrush x:Key="BlackColor" Color="#FF808080" />
        <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RedColor" Color="#FFD86344" />
        <SolidColorBrush x:Key="YellowColor" Color="#FFEDC87E" />
        <SolidColorBrush x:Key="GreenColor" Color="#FF68A490" />
        <SolidColorBrush x:Key="BlueColor" Color="#FF4D82B8" />
      </dx:WpfSvgPalette>
      <dx:WpfSvgPalette x:Key="Pressed">
        <SolidColorBrush x:Key="BlackColor" Color="#FF808080" />
        <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RedColor" Color="#FFD86344" />
        <SolidColorBrush x:Key="YellowColor" Color="#FFEDC87E" />
        <SolidColorBrush x:Key="GreenColor" Color="#FF68A490" />
        <SolidColorBrush x:Key="BlueColor" Color="#FF4D82B8" />
      </dx:WpfSvgPalette>
    </dx:WpfSvgPalette.States>
  </dx:WpfSvgPalette>
</ResourceDictionary>