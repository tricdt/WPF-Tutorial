<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxci="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!--BEGIN WPF-->
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="../StandardControlStyles.XAML" />
  </ResourceDictionary.MergedDictionaries>
  <!--END WPF-->
  <SolidColorBrush x:Key="ThemeColorsThemeKey_WhiteForegroundColor" Color="#FF3C3C3C" />
  <SolidColorBrush x:Key="ThemeColorsThemeKey_BlackForegroundColor" Color="#FF3C3C3C" />
  <!--#include \..\..\..\..\Themes.SL\StandardControls\Brushes.xaml-->
  <!--#include \..\..\..\..\Themes.SL\StandardControls\SharedResources.xaml-->
  <!--#include \..\..\..\..\Themes.SL\StandardControls\Button.xaml-->
  <!--SearchPanelBorderBrush-->
  <SolidColorBrush x:Key="{dxdst:SearchPanelThemeKey ResourceKey=SearchPanelBorderBrush}" Color="#FFD6D6D6" />
  <!--SearchPanelBackgroundBrush-->
  <SolidColorBrush x:Key="{dxdst:SearchPanelThemeKey ResourceKey=SearchPanelBackgroundBrush}" Color="#FFD6D6D6" />
  <!--SearchPanelTextBrush-->
  <SolidColorBrush x:Key="{dxdst:SearchPanelThemeKey ResourceKey=SearchPanelTextBrush}" Color="#FF3C3C3C" />
  <!--SearchPanelGlyphBrush-->
  <SolidColorBrush x:Key="{dxdst:SearchPanelThemeKey ResourceKey=SearchPanelGlyphBrush}" Color="#FF3C3C3C" />
  <!--ButtonControlTemplate-->
  <ControlTemplate x:Key="{dxdst:SearchPanelThemeKey ResourceKey=ButtonControlTemplate}" TargetType="{x:Type Button}">
    <Grid SnapsToDevicePixels="True" UseLayoutRounding="True">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualStateGroup.Transitions>
            <VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver" />
            <VisualTransition GeneratedDuration="00:00:00.1" To="Pressed" />
          </VisualStateGroup.Transitions>
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation Duration="0:0:0.01" Storyboard.TargetName="gs1" Storyboard.TargetProperty="Color" To="#FFD6D6D6" />
              <ColorAnimation Duration="0:0:0.01" Storyboard.TargetName="gs2" Storyboard.TargetProperty="Color" To="#FFD6D6D6" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0:0:0.01" Storyboard.TargetName="gs1" Storyboard.TargetProperty="Color" To="#FFD6D6D6" />
              <ColorAnimation Duration="0:0:0.01" Storyboard.TargetName="gs2" Storyboard.TargetProperty="Color" To="#FFD6D6D6" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border CornerRadius="8,8,8,8" SnapsToDevicePixels="True" UseLayoutRounding="True">
        <Border.Background>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop x:Name="gs1" Color="#FF3C3C3C" />
            <GradientStop x:Name="gs2" Color="#FF3C3C3C" Offset="1" />
          </LinearGradientBrush>
        </Border.Background>
        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True" UseLayoutRounding="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
      </Border>
    </Grid>
  </ControlTemplate>
  <!--ButtonBorderBrush-->
  <LinearGradientBrush x:Key="{dxdst:SearchPanelThemeKey ResourceKey=ButtonBorderBrush}" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFD6D6D6" Offset="0" />
    <GradientStop Color="#FFD6D6D6" Offset="0.375" />
    <GradientStop Color="#FFD6D6D6" Offset="0.375" />
    <GradientStop Color="#FFD6D6D6" Offset="1" />
  </LinearGradientBrush>
  <!--OptionsButtonStyle-->
  <!--BEGIN WPF-->
  <Style x:Key="{dxdst:SearchPanelThemeKey ResourceKey=OptionsButtonStyle}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey Type=Button}}" TargetType="{x:Type Button}">
    <!--END WPF-->
    <!--ONLY SL
        <Style x:Key="{dxdst:SearchPanelThemeKey ResourceKey=OptionsButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonThemeKey_ButtonControlStyle}">
        ONLY SL-->
    <Setter Property="Width" Value="22" />
    <Setter Property="Height" Value="22" />
    <Setter Property="Cursor" Value="Hand" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="MinWidth" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!--ReplaceButtonStyle-->
  <!--BEGIN WPF-->
  <Style x:Key="{dxdst:SearchPanelThemeKey ResourceKey=ReplaceButtonStyle}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey Type=Button}}" TargetType="{x:Type Button}">
    <!--END WPF-->
    <!--ONLY SL
        <Style x:Key="{dxdst:SearchPanelThemeKey ResourceKey=ReplaceButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonThemeKey_ButtonControlStyle}">
        ONLY SL-->
    <Setter Property="Height" Value="22" />
    <Setter Property="Margin" Value="0,0,3,0" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="0,0,14,0" />
        <Setter Property="MinHeight" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!--ReplaceAllButtonStyle-->
  <!--BEGIN WPF-->
  <Style x:Key="{dxdst:SearchPanelThemeKey ResourceKey=ReplaceAllButtonStyle}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey Type=Button}}" TargetType="{x:Type Button}">
    <!--END WPF-->
    <!--ONLY SL
        <Style x:Key="{dxdst:SearchPanelThemeKey ResourceKey=ReplaceAllButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonThemeKey_ButtonControlStyle}">
        ONLY SL-->
    <Setter Property="Height" Value="22" />
    <!--Changed-->
    <Setter Property="Margin" Value="0,0,8,0" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="0,0,14,0" />
        <Setter Property="MinHeight" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!--FindPrevButtonStyle-->
  <!--BEGIN WPF-->
  <Style x:Key="{dxdst:SearchPanelThemeKey ResourceKey=FindPrevButtonStyle}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey Type=Button}}" TargetType="{x:Type Button}">
    <!--END WPF-->
    <!--ONLY SL
        <Style x:Key="{dxdst:SearchPanelThemeKey ResourceKey=FindPrevButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonThemeKey_ButtonControlStyle}">
        ONLY SL-->
    <Setter Property="Margin" Value="0,0,4,0" />
    <Setter Property="Height" Value="22" />
    <!--Changed-->
    <Setter Property="Width" Value="22" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="MinWidth" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!--FindNextButtonStyle-->
  <!--BEGIN WPF-->
  <Style x:Key="{dxdst:SearchPanelThemeKey ResourceKey=FindNextButtonStyle}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey Type=Button}}" TargetType="{x:Type Button}">
    <!--END WPF-->
    <!--ONLY SL
        <Style x:Key="{dxdst:SearchPanelThemeKey ResourceKey=FindNextButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonThemeKey_ButtonControlStyle}">
        ONLY SL-->
    <Setter Property="Height" Value="22" />
    <!--Changed-->
    <Setter Property="Margin" Value="0" />
    <Setter Property="Width" Value="22" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="MinWidth" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!--CloseButtonStyle-->
  <!--<Style x:Key="{dxdst:SearchPanelThemeKey ResourceKey=CloseButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey Type=Button}}">-->
  <!--BEGIN WPF-->
  <Style x:Key="{dxdst:SearchPanelThemeKey ResourceKey=CloseButtonStyle}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey Type=Button}}" TargetType="{x:Type Button}">
    <!--END WPF-->
    <!--ONLY SL
        <Style x:Key="{dxdst:SearchPanelThemeKey ResourceKey=CloseButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonThemeKey_ButtonControlStyle}">
        ONLY SL-->
    <Setter Property="Height" Value="22" />
    <!--Changed-->
    <Setter Property="Width" Value="22" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="MinWidth" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!--ButtonTextBlockStyle-->
  <Style x:Key="{dxdst:SearchPanelThemeKey ResourceKey=ButtonTextBlockStyle}" TargetType="{x:Type TextBlock}">
    <Setter Property="Width" Value="Auto" />
    <Setter Property="Height" Value="Auto" />
    <Setter Property="Margin" Value="10,0,10,1" />
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>
  <!--PanelTextBlockStyle-->
  <Style x:Key="{dxdst:SearchPanelThemeKey ResourceKey=PanelTextBlockStyle}" TargetType="{x:Type TextBlock}">
    <Setter Property="Width" Value="Auto" />
    <Setter Property="Height" Value="Auto" />
    <Setter Property="Foreground" Value="{DynamicResource {dxdst:SearchPanelThemeKey ResourceKey=SearchPanelTextBrush}}" />
    <Setter Property="Margin" Value="0,0,4,0" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Left" />
  </Style>
  <!--FindPrevButtonShape-->
  <DataTemplate x:Key="{dxdst:SearchPanelThemeKey ResourceKey=FindPrevButtonShape}">
    <Path Data="F1 M 0,4L 4,0L 4,8L 0,4 Z " Fill="{DynamicResource {dxdst:SearchPanelThemeKey ResourceKey=SearchPanelGlyphBrush}}" Stretch="None" />
  </DataTemplate>
  <!--FindNextButtonShape-->
  <DataTemplate x:Key="{dxdst:SearchPanelThemeKey ResourceKey=FindNextButtonShape}">
    <Path Data="F1 M 0,0L 0,8L 4,4L 0,0 Z " Fill="{DynamicResource {dxdst:SearchPanelThemeKey ResourceKey=SearchPanelGlyphBrush}}" Stretch="None" />
  </DataTemplate>
  <!--CloseButtonShape-->
  <DataTemplate x:Key="{dxdst:SearchPanelThemeKey ResourceKey=CloseButtonShape}">
    <Path Data="F1 M -1.19209e-007,0L 1,0L 3.5,2.49988L 6,0L 7,0L 7,1L 4.49997,3.49988L 7,6L 7,7L 6,7L 3.49998,4.49988L 1,7L -1.19209e-007,7L -1.19209e-007,6L 2.5,3.49988L -1.19209e-007,1L -1.19209e-007,0 Z " Fill="{DynamicResource {dxdst:SearchPanelThemeKey ResourceKey=SearchPanelGlyphBrush}}" Stretch="None" />
  </DataTemplate>
  <!--OptionsButtonShape-->
  <DataTemplate x:Key="{dxdst:SearchPanelThemeKey ResourceKey=OptionsButtonShape}">
    <Path Data="F1 M 0,0L 4,4L 8,0L 0,0 Z" Fill="{DynamicResource {dxdst:SearchPanelThemeKey ResourceKey=SearchPanelGlyphBrush}}" Margin="1,1,0,0" Stretch="None" />
  </DataTemplate>
  <!--SeparatorControlTemplate-->
  <ControlTemplate x:Key="{dxdst:SearchPanelThemeKey ResourceKey=SeparatorControlTemplate}" TargetType="{x:Type ContentControl}">
    <Border Background="#FFD6D6D6" Margin="2" Width="1" />
  </ControlTemplate>
  <!--BorderControlTemplate-->
  <ControlTemplate x:Key="{dxdst:SearchPanelThemeKey ResourceKey=BorderControlTemplate}" TargetType="{x:Type ContentControl}">
    <Border Background="#FFFFFFFF" Padding="8,3,8,3">
      <ContentPresenter Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" />
    </Border>
  </ControlTemplate>
  <!--#include ..\Generic\SearchPanel.xaml-->
</ResourceDictionary>