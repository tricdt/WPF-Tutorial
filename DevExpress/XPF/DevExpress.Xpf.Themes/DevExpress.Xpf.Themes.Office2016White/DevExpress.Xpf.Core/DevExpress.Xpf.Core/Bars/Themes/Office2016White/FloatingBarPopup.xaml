<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Root" SnapsToDevicePixels="True">
      <Border x:Name="Border" Background="#FFFFFFFF" BorderBrush="#FFB9B9B9" BorderThickness="1">
        <ContentPresenter Content="{TemplateBinding Content}" Margin="1" />
      </Border>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="AppType">
          <VisualState x:Name="Standalone" />
          <VisualState x:Name="BrowserHosted" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=CaptionBackgroundTemplate}" TargetType="{x:Type ContentControl}">
    <!--BEGIN WPF-->
    <Border Background="#00000000" Cursor="SizeAll">
      <!--END WPF-->
      <!--ONLY SL
            <Border Background="Transparent">
        ONLY SL-->
      <ContentPresenter />
    </Border>
  </ControlTemplate>
  <!--BEGIN WPF-->
  <ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=SizeGripTemplate}" TargetType="{x:Type Thumb}"></ControlTemplate>
  <ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=ContentTemplate}" TargetType="{x:Type dxb:FloatingBarPopupContentControl}">
    <ContentControl x:Name="PART_Border" Template="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=BorderTemplate}}">
      <StackPanel>
        <ContentControl x:Name="PART_Caption" Template="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=CaptionBackgroundTemplate}}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxb:DragWidget x:Name="PART_DragWidget" Grid.ColumnSpan="2" OwnerPoint="0,0" Style="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=DragWidgetStyle}}" />
            <Border ClipToBounds="True">
              <TextBlock Grid.Column="0" Grid.ColumnSpan="3" Style="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=CaptionStyle}}" Text="{Binding Path=DataContext.Caption, RelativeSource={RelativeSource TemplatedParent}}" />
            </Border>
            <Button x:Name="PART_CloseButton" Grid.Column="1" Style="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=CloseButtonStyle}}" VerticalAlignment="Top" />
          </Grid>
        </ContentControl>
        <Grid Grid.Row="1">
          <dxb:FloatingBarContainerControl x:Name="PART_FloatingBarContainer" />
          <Thumb x:Name="PART_SizeGrip" HorizontalAlignment="Right" Style="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=SizeGripStyle}}" />
        </Grid>
      </StackPanel>
    </ContentControl>
  </ControlTemplate>
  <!--END WPF-->
  <ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=CloseButtonTemplate}" TargetType="{x:Type Button}">
    <Grid Background="#00000000" Margin="6,0,6,0">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF0072C6" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="Opacity" To="0.75" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Path x:Name="Glyph" Data="F1 M 0,0L 2,0L 2,1L 3,1L 3,2L 4,2L 4,1L 5,1L 5,0L 7,0L 7,2L 6,2L 6,3L 5,3L 5,4L 6,4L 6,5L 7,5L 7,7L 5,7L 5,6L 4,6L 4,5L 3,5L 3,6L 2,6L 2,7L 0,7L 0,5L 1,5L 1,4L 2,4L 2,3L 1,3L 1,2L 0,2L 0,0 Z " Fill="#FF666666" Height="7" Stretch="Fill" Width="7" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=QuickCustomizationButtonTemplate}" TargetType="{x:Type Button}">
    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
  </ControlTemplate>
  <Style x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=CaptionStyle}" TargetType="{x:Type TextBlock}">
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="Foreground" Value="#FF0072C6" />
    <Setter Property="FontSize" Value="16" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="TextWrapping" Value="NoWrap" />
    <Setter Property="Margin" Value="4,0,4,0" />
  </Style>
  <Style x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=CloseButtonStyle}" TargetType="{x:Type Button}">
    <Setter Property="Template" Value="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=CloseButtonTemplate}}" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Cursor" Value="Hand" />
  </Style>
  <Style x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=QuickCustomizationButtonStyle}" TargetType="{x:Type Button}">
    <Setter Property="Template" Value="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=QuickCustomizationButtonTemplate}}" />
    <Setter Property="Foreground" Value="#FF3C3C3C" />
    <Setter Property="Width" Value="16" />
    <Setter Property="Height" Value="16" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Content" Value="Y" />
  </Style>
</ResourceDictionary>