<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxgtl="clr-namespace:DevExpress.Xpf.Grid.TreeList;assembly=DevExpress.Xpf.Grid.v24.1" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <ControlTemplate x:Key="{dxgt:TreeViewControlThemeKey ResourceKey=Template}" TargetType="{x:Type dxg:TreeViewControl}">
    <AdornerDecorator>
      <Grid>
        <dxg:DXGridThemesLoader x:Name="PART_ThemesLoader" dxg:GridBorderHelper.ShowBorder="{TemplateBinding ShowBorder}" Template="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=BorderTemplate}}" />
      </Grid>
    </AdornerDecorator>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:TreeViewControlThemeKey ResourceKey=RowMarginControlTemplate}" TargetType="{x:Type dxg:TreeViewRowMarginControl}">
    <Grid x:Name="background" Background="{TemplateBinding Background}">
      <Path x:Name="PART_OffsetPath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
      <Path x:Name="PART_TreeLinePath" Opacity="0.25" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" />
      <dxg:IndentsPanel HorizontalAlignment="Right" RowIndent="{Binding View.RowIndent}">
        <dxg:TreeViewNodeExpandButton x:Name="PART_ExpandButton" Command="{Binding View.Commands.ChangeNodeExpanded}" CommandParameter="{Binding RowHandle.Value}" HorizontalAlignment="Left" IsChecked="{Binding IsExpanded}" IsExpandButtonVisible="{Binding Path=IsButtonVisible}" />
        <dxe:CheckEdit x:Name="PART_NodeCheckBox" Focusable="False" IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsCheckBoxEnabled}" IsThreeState="{Binding View.AllowIndeterminateCheckState}" Padding="0" Visibility="{Binding IsCheckBoxVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
          <dxg:GridViewHitInfoBase.HitTestAcceptor>
            <dxgtl:TreeListNodeCheckboxHitTestAcceptor />
          </dxg:GridViewHitInfoBase.HitTestAcceptor>
        </dxe:CheckEdit>
        <dx:MeasurePixelSnapper Visibility="{Binding IsImageVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
          <dx:DXImage x:Name="PART_NodeImage" Focusable="False" Height="{Binding Path=View.NodeImageSize.Height}" Source="{Binding Image, UpdateSourceTrigger=PropertyChanged}" Width="{Binding Path=View.NodeImageSize.Width}">
            <dxg:GridViewHitInfoBase.HitTestAcceptor>
              <dxgtl:TreeListNodeImageHitTestAcceptor />
            </dxg:GridViewHitInfoBase.HitTestAcceptor>
            <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
          </dx:DXImage>
        </dx:MeasurePixelSnapper>
      </dxg:IndentsPanel>
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding ShowTreeIndentAsCellPart}" Value="true">
        <Setter Property="Background" Value="Transparent" />
      </DataTrigger>
      <DataTrigger Binding="{Binding ShowTreeIndentAsCellPart}" Value="false">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding IndentSelectionState}" Value="Focused">
        <Setter Property="Foreground" TargetName="PART_ExpandButton" Value="#FF444444" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Editing">
        <Setter Property="Foreground" TargetName="PART_ExpandButton" Value="#FF444444" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=IndentSelectionState}" Value="Selected">
        <Setter Property="Foreground" TargetName="PART_ExpandButton" Value="#FF444444" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=IndentSelectionState}" Value="FocusedAndSelected">
        <Setter Property="Foreground" TargetName="PART_ExpandButton" Value="#FF444444" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=IndentSelectionState}" Value="Highlighted">
        <Setter Property="Foreground" TargetName="PART_ExpandButton" Value="#FF444444" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <dx:BooleanToDoubleConverter x:Key="BooleanToDoubleConverter" />
  <ControlTemplate x:Key="{dxgt:TreeViewControlThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="{x:Type dxg:TreeViewNodeExpandButton}">
    <dx:DXExpander AnimationProgress="{Binding IsExpandButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToDoubleConverter}}" HorizontalAlignment="Left">
      <dxg:GridToggleStateButton x:Name="toggleButton" ClickMode="Press" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" dx:DataObjectBase.DataObject="{Binding}" dx:DataObjectBase.NeedsResetEvent="True" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding Path=IsChecked, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=ExpandButtonStyle}}"></dxg:GridToggleStateButton>
    </dx:DXExpander>
  </ControlTemplate>
</ResourceDictionary>