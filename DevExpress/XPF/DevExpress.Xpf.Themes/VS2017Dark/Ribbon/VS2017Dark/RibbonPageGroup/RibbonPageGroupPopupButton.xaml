<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxri="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/internal" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2017Dark.v24.1;component/Ribbon/VS2017Dark/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <ControlTemplate x:Key="{dxrt:RibbonPageGroupThemeKey ResourceKey=PopupButtonBorderTemplate}" TargetType="{x:Type dxb:ItemBorderControl}">
    <Grid x:Name="Root">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Border x:Name="IsDefault" Background="Transparent" Margin="0,0,0,1" cs:id="Border_0000" />
      <Border x:Name="IsCustomization" BorderBrush="#FF007ACC" BorderThickness="1" Opacity="0" cs:id="Border_0001" x:Uid="@BorderBrush=Focused" />
      <ContentPresenter Content="{TemplateBinding Content}" Margin="0,0,1,0" />
      <Border x:Name="Delimiter" Background="#FF3F3F46" Grid.Column="1" Width="1" cs:id="Border_0002" x:Uid="@Background=Border" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="State">
          <VisualState x:Name="Normal">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" cs:id="ColorAnimation_0000" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Hover">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF3E3E40" cs:id="ColorAnimation_0001" x:Uid="@To=HoverBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF007ACC" cs:id="ColorAnimation_0002" x:Uid="@To=SelectionBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled" />
          <VisualState x:Name="Checked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF007ACC" cs:id="ColorAnimation_0003" x:Uid="@To=SelectionBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="HoverChecked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF007ACC" cs:id="ColorAnimation_0004" x:Uid="@To=SelectionBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF3E3E40" cs:id="ColorAnimation_0005" x:Uid="@To=HoverBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Customization">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="IsCustomization" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:RibbonPageGroupThemeKey ResourceKey=PopupControlTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter />
  </ControlTemplate>
  <!-- Other -->
  <ControlTemplate x:Key="{dxrt:RibbonPageGroupThemeKey ResourceKey=PopupButtonGlyphBorderTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter x:Name="Content" Height="32" Width="32" />
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="Content" Value="44" />
        <Setter Property="MinWidth" TargetName="Content" Value="44" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:RibbonPageGroupThemeKey ResourceKey=PopupButtonContentBorderTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter />
  </ControlTemplate>
</ResourceDictionary>