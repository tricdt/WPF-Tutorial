<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxri="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/internal" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019HighContrast.v24.1;component/Ribbon/Office2019HighContrast/Ribbon/RibbonMinimizationButton_Base.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=MinimizationButtonTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Grid x:Name="Root">
      <Border x:Name="IsDefault" Background="Transparent" cs:id="Border_0000" />
      <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
        <Path x:Name="Collapsed" Fill="#FFFFFFFF" Opacity="0" Style="{StaticResource UIShape.ArrowUp}" cs:id="Path_0000" x:Uid="@Fill=Foreground" />
        <Path x:Name="Expanded" Fill="#FFFFFFFF" Opacity="0" Style="{StaticResource UIShape.ArrowDown}" cs:id="Path_0001" x:Uid="@Fill=Foreground" />
      </Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Hover">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF1AEBFF" cs:id="ColorAnimation_0000" x:Uid="@To=HoverBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)" To="#FF000000" cs:id="ColorAnimation_0003" x:Uid="@To=HoverForeground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)" To="#FF000000" cs:id="ColorAnimation_0004" x:Uid="@To=HoverForeground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF1AEBFF" cs:id="ColorAnimation_0001" x:Uid="@To=SelectionBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)" To="#FF000000" cs:id="ColorAnimation_0005" x:Uid="@To=SelectionForeground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)" To="#FF000000" cs:id="ColorAnimation_0006" x:Uid="@To=SelectionForeground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF1AEBFF" cs:id="ColorAnimation_0002" x:Uid="@To=HoverBackground" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="CheckedStates">
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Unchecked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=MinimizationButtonTemplateInPageContent}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Grid x:Name="Root">
      <Border x:Name="IsDefault" Background="Transparent" cs:id="Border_0000" />
      <Grid HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" VerticalAlignment="Center">
        <Path x:Name="Collapsed" Fill="#FFFFFFFF" Opacity="0" Style="{StaticResource UIShape.ArrowUp}" cs:id="Path_0000" x:Uid="@Fill=Foreground" />
        <Path x:Name="Expanded" Fill="#FFFFFFFF" Opacity="0" Style="{StaticResource UIShape.ArrowDown}" cs:id="Path_0001" x:Uid="@Fill=Foreground" />
      </Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Hover">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF1AEBFF" cs:id="ColorAnimation_0000" x:Uid="@To=HoverBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF000000" cs:id="ColorAnimation_0003" x:Uid="@To=HoverForeground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF000000" cs:id="ColorAnimation_0004" x:Uid="@To=HoverForeground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF1AEBFF" cs:id="ColorAnimation_0001" x:Uid="@To=SelectionBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF000000" cs:id="ColorAnimation_0005" x:Uid="@To=SelectionForeground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF000000" cs:id="ColorAnimation_0006" x:Uid="@To=SelectionForeground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF1AEBFF" cs:id="ColorAnimation_0002" x:Uid="@To=HoverBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFFFFFFF" cs:id="ColorAnimation_0007" x:Uid="@To=Foreground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFFFFFFF" cs:id="ColorAnimation_0008" x:Uid="@To=Foreground" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="CheckedStates">
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Unchecked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxr:RibbonControl.Ribbon).IsMinimized, RelativeSource={RelativeSource Self}}" Value="True" />
          <Condition Binding="{Binding Path=(dxr:RibbonControl.Ribbon).AllowSimplifiedRibbon, RelativeSource={RelativeSource Self}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Style" TargetName="Expanded" Value="{StaticResource UIShape.Unpinned}" />
      </MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=MinimizationButtonStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Setter Property="Height" Value="30" />
    <Setter Property="Margin" Value="1" />
    <Setter Property="Width" Value="30" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="MinWidth" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=MinimizationButtonStyleInPageContent}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Setter Property="Margin" Value="4,0,0,1" />
    <Setter Property="Padding" Value="10,6" />
  </Style>
</ResourceDictionary>