<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:internal="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:helpers="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <helpers:TimePickerPartToMaskConverter x:Key="TimePickerPartToMaskConverter" />
  <helpers:TimePickerPartToVisibilityConverter x:Key="TimePickerPartToVisibilityConverter" />
  <ControlTemplate x:Key="{themes:TimePickerThemeKey ResourceKey=ClockTemplate}" TargetType="{x:Type internal:TimePickerClock}">
    <Grid>
      <Ellipse Width="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockSize}}" Height="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockSize}}" Fill="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockFillBrush}}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockStrokeThickness}}" />
      <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="PART_ClockCanvas" />
      <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Line StrokeThickness="4" x:Name="PART_ClockHoursArrow" Visibility="{Binding Path=VisibleMaskParts, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TimePickerPartToVisibilityConverter}, ConverterParameter={x:Static dxe:TimePickerMaskPart.Hours}}" Style="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockHandStyle}}" />
        <Line StrokeThickness="3" x:Name="PART_ClockMinutesArrow" Visibility="{Binding Path=VisibleMaskParts, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TimePickerPartToVisibilityConverter}, ConverterParameter={x:Static dxe:TimePickerMaskPart.Minutes}}" Style="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockHandStyle}}" />
        <Line StrokeThickness="2" x:Name="PART_ClockSecondsArrow" Visibility="{Binding Path=VisibleMaskParts, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TimePickerPartToVisibilityConverter}, ConverterParameter={x:Static dxe:TimePickerMaskPart.Seconds}}" Style="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockHandStyle}}" />
        <Ellipse StrokeThickness="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockShaftSize}}" Stroke="{TemplateBinding Foreground}" x:Name="PART_ClockCenterDot" />
      </Canvas>
    </Grid>
  </ControlTemplate>
  <Style x:Key="{themes:TimePickerThemeKey ResourceKey=ClockHandStyle}" TargetType="{x:Type Line}">
    <Setter Property="StrokeEndLineCap" Value="Round" />
    <Setter Property="StrokeStartLineCap" Value="Round" />
    <Setter Property="Stroke" Value="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
  </Style>
  <Style x:Key="{themes:TimePickerThemeKey ResourceKey=ClockStyle}" TargetType="{x:Type internal:TimePickerClock}">
    <Setter Property="Template" Value="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockTemplate}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockBorderBrush}}" />
    <Setter Property="Foreground" Value="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockForeground}}" />
    <Setter Property="Margin" Value="15" />
    <Setter Property="Height" Value="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockSize}}" />
    <Setter Property="Width" Value="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockSize}}" />
    <Setter Property="ShortTickOffset" Value="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockShortTickOffset}}" />
    <Setter Property="LongTickOffset" Value="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockLongTickOffset}}" />
    <Setter Property="ShortTickSize" Value="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockShortTickLength}}" />
    <Setter Property="LongTickSize" Value="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockLongTickLength}}" />
    <Setter Property="Focusable" Value="False" />
  </Style>
  <ControlTemplate x:Key="{themes:TimePickerThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:TimePicker}">
    <Grid Background="{TemplateBinding Background}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <helpers:TimePickerClock Grid.Row="0" x:Name="PART_Clock" Style="{DynamicResource {themes:TimePickerThemeKey ResourceKey=ClockStyle}}" DateTime="{TemplateBinding DateTime}" VisibleMaskParts="{TemplateBinding VisibleMaskParts}" />
      <dxe:ButtonEdit Grid.Row="1" EditValue="{Binding Path=DateTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}" AllowDefaultButton="false" Mask="{Binding Path=VisibleMaskParts, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TimePickerPartToMaskConverter}}" MaskUseAsDisplayFormat="True" MaskType="DateTimeAdvancingCaret" InvalidValueBehavior="AllowLeaveEditor" helpers:MVVMFocusBehavior.IsFocused="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource {themes:TimePickerThemeKey ResourceKey=TimeEditBoxStyle}}" HorizontalAlignment="Center">
        <dxmvvm:Interaction.Behaviors>
          <helpers:TimePickerClockEditorBehavior MinValue="{Binding Path=MinValue, RelativeSource={RelativeSource TemplatedParent}}" MaxValue="{Binding Path=MaxValue, RelativeSource={RelativeSource TemplatedParent}}" />
        </dxmvvm:Interaction.Behaviors>
        <dxe:SpinButtonInfo IsDefaultButton="True" />
      </dxe:ButtonEdit>
    </Grid>
  </ControlTemplate>
</ResourceDictionary>