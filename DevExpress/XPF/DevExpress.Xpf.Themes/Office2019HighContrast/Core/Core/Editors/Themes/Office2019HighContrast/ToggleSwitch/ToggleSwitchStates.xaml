<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019HighContrast.v24.1;component/Core/Core/Editors/Themes/Office2019HighContrast/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <dxi:RenderTemplate x:Key="{dxet:ToggleSwitchThemeKey ResourceKey=UndefinedStateContentTemplate}">
    <dxi:RenderPanel LayoutProvider="{dxi:GridPanelLayoutProvider}">
      <dxi:RenderTextBlock Name="TextBlock" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
    </dxi:RenderPanel>
    <dxi:RenderTemplate.Triggers>
      <dxi:RenderBinding TargetName="TextBlock" TargetProperty="Text" ValueSource="DataContext" />
      <dxi:RenderTrigger DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Near" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="HorizontalAlignment" TargetName="TextBlock" Value="Left" />
        <dxi:RenderSetter Property="Margin" TargetName="TextBlock" Value="0,0,5,0" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Far" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="HorizontalAlignment" TargetName="TextBlock" Value="Right" />
        <dxi:RenderSetter Property="Margin" TargetName="TextBlock" Value="5,0,0,0" />
      </dxi:RenderTrigger>
    </dxi:RenderTemplate.Triggers>
  </dxi:RenderTemplate>
  <dxi:RenderTemplate x:Key="{dxet:ToggleSwitchThemeKey ResourceKey=CheckedStateContentTemplate}">
    <dxi:RenderPanel LayoutProvider="{dxi:GridPanelLayoutProvider}">
      <dxi:RenderTextBlock Name="TextBlock" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
    </dxi:RenderPanel>
    <dxi:RenderTemplate.Triggers>
      <dxi:RenderBinding TargetName="TextBlock" TargetProperty="Text" ValueSource="DataContext" />
      <dxi:RenderTrigger DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Near" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="HorizontalAlignment" TargetName="TextBlock" Value="Left" />
        <dxi:RenderSetter Property="Margin" TargetName="TextBlock" Value="0,0,5,0" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Far" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="HorizontalAlignment" TargetName="TextBlock" Value="Right" />
        <dxi:RenderSetter Property="Margin" TargetName="TextBlock" Value="5,0,0,0" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Both" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="HorizontalAlignment" TargetName="TextBlock" Value="Right" />
        <dxi:RenderSetter Property="Margin" TargetName="TextBlock" Value="5,0,0,0" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Inside" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="HorizontalAlignment" TargetName="TextBlock" Value="Left" />
        <dxi:RenderSetter Property="Margin" TargetName="TextBlock" Value="5,0,0,0" />
        <dxi:RenderSetter Property="Foreground" TargetName="TextBlock" Value="#FFFFFFFF" cs:id="RenderSetter_0000" x:Uid="@Value=Foreground" />
      </dxi:RenderTrigger>
      <dxi:MultiRenderTrigger>
        <dxi:MultiRenderTrigger.Conditions>
          <dxi:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Inside" ValueSource="TemplatedParent" />
          <dxi:RenderCondition DependencyProperty="{x:Static ToggleButton.IsCheckedProperty}" Value="{x:Null}" ValueSource="TemplatedParent" />
        </dxi:MultiRenderTrigger.Conditions>
        <dxi:RenderSetter Property="Margin" TargetName="TextBlock" Value="0,0,5,0" />
        <dxi:RenderSetter Property="Foreground" TargetName="TextBlock" Value="#FFFFFFFF" cs:id="RenderSetter_0001" x:Uid="@Value=Foreground" />
      </dxi:MultiRenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="Margin" TargetName="TextBlock" Value="14" />
      </dxi:RenderTrigger>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:ToggleSwitch.ForegroundProperty}" TargetName="TextBlock" TargetProperty="Foreground" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.HasForegroundProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
    </dxi:RenderTemplate.Triggers>
  </dxi:RenderTemplate>
  <!-- Unchecked -->
  <dxi:RenderTemplate x:Key="{dxet:ToggleSwitchThemeKey ResourceKey=UncheckedStateContentTemplate}">
    <dxi:RenderPanel LayoutProvider="{dxi:GridPanelLayoutProvider}">
      <dxi:RenderTextBlock Name="TextBlock" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
    </dxi:RenderPanel>
    <dxi:RenderTemplate.Triggers>
      <dxi:RenderBinding TargetName="TextBlock" TargetProperty="Text" ValueSource="DataContext" />
      <dxi:RenderTrigger DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Near" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="HorizontalAlignment" TargetName="TextBlock" Value="Left" />
        <dxi:RenderSetter Property="Margin" TargetName="TextBlock" Value="0,0,5,0" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Far" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="HorizontalAlignment" TargetName="TextBlock" Value="Right" />
        <dxi:RenderSetter Property="Margin" TargetName="TextBlock" Value="5,0,0,0" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Both" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="HorizontalAlignment" TargetName="TextBlock" Value="Left" />
        <dxi:RenderSetter Property="Margin" TargetName="TextBlock" Value="0,0,5,0" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Inside" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="HorizontalAlignment" TargetName="TextBlock" Value="Right" />
        <dxi:RenderSetter Property="Margin" TargetName="TextBlock" Value="0,0,5,0" />
        <dxi:RenderSetter Property="Foreground" TargetName="TextBlock" Value="#FFFFFFFF" cs:id="RenderSetter_0000" x:Uid="@Value=Foreground" />
      </dxi:RenderTrigger>
      <dxi:MultiRenderTrigger>
        <dxi:MultiRenderTrigger.Conditions>
          <dxi:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Inside" ValueSource="TemplatedParent" />
          <dxi:RenderCondition DependencyProperty="{x:Static ToggleButton.IsCheckedProperty}" Value="{x:Null}" ValueSource="TemplatedParent" />
        </dxi:MultiRenderTrigger.Conditions>
        <dxi:RenderSetter Property="Margin" TargetName="TextBlock" Value="5,0,0,0" />
        <dxi:RenderSetter Property="Foreground" TargetName="TextBlock" Value="#FFFFFFFF" cs:id="RenderSetter_0001" x:Uid="@Value=Foreground" />
      </dxi:MultiRenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="Margin" TargetName="TextBlock" Value="14" />
      </dxi:RenderTrigger>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:ToggleSwitch.ForegroundProperty}" TargetName="TextBlock" TargetProperty="Foreground" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.HasForegroundProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
    </dxi:RenderTemplate.Triggers>
  </dxi:RenderTemplate>
</ResourceDictionary>