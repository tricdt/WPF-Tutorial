<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019HighContrast.v24.1;component/Core/Core/Editors/Themes/Generic/PasswordBoxEdit.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019HighContrast.v24.1;component/Core/Core/Editors/Themes/Office2019HighContrast/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <ControlTemplate x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=PasswordBoxTemplate}" TargetType="{x:Type PasswordBox}">
    <Border x:Name="PART_ContentBorder" Background="{TemplateBinding Background}">
      <ScrollViewer x:Name="PART_ContentHost" Focusable="False" Padding="{TemplateBinding Padding}" Template="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=ScrollViewerTemplate}}" />
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0.38" />
      </Trigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).ShowBorder}" Value="True" />
          <Condition Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).EditMode}" Value="Standalone" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Background" TargetName="PART_ContentBorder" Value="{x:Null}" />
      </MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <DataTemplate x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=ShowPasswordButtonTemplate}">
    <Image Source="{dx:SvgImageSource Uri={dx:EditorsResource Images/PasswordBoxEdit/Show.svg}}" Height="16" Width="16" />
  </DataTemplate>
  <Style x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=PasswordBoxStyle}" TargetType="{x:Type PasswordBox}">
    <Setter Property="Background" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="CaretBrush" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxei:BaseEditAppearanceOptions.CaretBrush)}" />
    <Setter Property="ContextMenu" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).ContextMenu}" />
    <Setter Property="Focusable" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Focusable}" />
    <Setter Property="Foreground" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Foreground}" />
    <Setter Property="IsTabStop" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsTabStop}" />
    <Setter Property="MaxLength" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).MaxLength}" />
    <Setter Property="Padding" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding}" />
    <Setter Property="PasswordChar" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).PasswordChar}" />
    <Setter Property="SelectionBrush" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxei:BaseEditAppearanceOptions.SelectionBrush)}" />
    <Setter Property="SelectionOpacity" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxei:BaseEditAppearanceOptions.SelectionOpacity)}" />
    <Setter Property="Template" Value="{DynamicResource {dxet:PasswordBoxEditThemeKey ResourceKey=PasswordBoxTemplate}}" />
    <Setter Property="TextBlock.TextAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalContentAlignment, Converter={StaticResource HorizontalContentAlignmentToTextAlignmentConverter}}" />
    <Setter Property="VerticalContentAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment}" />
    <Setter Property="dxei:EditorMarginHelper.Margin" Value="2,2,2,2,0,2,2,2" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="dxei:EditorMarginHelper.Margin" Value="14,13,15,13,0,13,14,13" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=ShowBorder, RelativeSource={RelativeSource AncestorType={x:Type dxe:BaseEdit}}}" Value="True">
        <Setter Property="Background" Value="Transparent" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=PreviewTextEditorStyle}" TargetType="{x:Type TextBlock}">
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="Visibility" Value="Collapsed" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Margin" Value="4,0" />
    <Setter Property="Padding" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding}" />
  </Style>
</ResourceDictionary>