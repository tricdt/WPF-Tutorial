<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgi="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019HighContrast.v24.1;component/Grid/Office2019HighContrast/GridTable/GridView/GridViewGroupRow_Base.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowContentTemplate}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Root" Background="Transparent" MinHeight="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowMinHeight}}" cs:id="Grid_0000">
      <Border x:Name="IsDefault" Background="{TemplateBinding Background}" BorderBrush="{StaticResource {dxgt:GridRowThemeKey ResourceKey=BorderBrush}}" BorderThickness="0,0,0,1" Padding="{TemplateBinding Padding}">
        <Grid>
          <Border x:Name="IsSelected" Background="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderUnfocusedBrush}}">
            <Border.Visibility>
              <Binding Path="SelectionState">
                <Binding.Converter>
                  <dxg:SelectionStateToVisibilityConverter Value="Selected" />
                </Binding.Converter>
              </Binding>
            </Border.Visibility>
          </Border>
          <Border x:Name="IsFocus" Background="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowBackgroundFocused}}">
            <Border.Visibility>
              <Binding Path="SelectionState">
                <Binding.Converter>
                  <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                </Binding.Converter>
              </Binding>
            </Border.Visibility>
          </Border>
          <Border x:Name="FadeBorder" Background="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderUnfocusedBrush}}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" dxg:FadeSelectionHelper.IsSelected="{Binding SelectionState, Converter={dxg:SelectionStateToBooleanConverter}}" dxg:FadeSelectionHelper.Opacity="1" Visibility="Collapsed" />
          <ContentPresenter>
            <ContentPresenter.Margin>
              <Binding Path="GroupLevel">
                <Binding.Converter>
                  <dxg:GroupLevelToMarginConverter />
                </Binding.Converter>
                <Binding.ConverterParameter>
                  <Thickness>30,0,0,0</Thickness>
                </Binding.ConverterParameter>
              </Binding>
            </ContentPresenter.Margin>
          </ContentPresenter>
        </Grid>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding ElementName=FadeBorder, Path=Visibility}" Value="Visible" />
          <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <MultiDataTrigger.Setters>
          <Setter Property="Foreground" Value="#FF000000" cs:id="Setter_0000" x:Uid="@Value=HoverForeground" />
          <Setter Property="Visibility" TargetName="IsSelected" Value="Collapsed" />
          <Setter Property="Visibility" TargetName="IsFocus" Value="Collapsed" />
        </MultiDataTrigger.Setters>
      </MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <dxg:DefaultStyle x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Control.Foreground" Value="{StaticResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowForeground}}" />
    <Setter Property="Control.Background" Value="{StaticResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowBackground}}" />
    <Setter Property="Control.FontWeight" Value="Bold" />
    <dxg:DefaultStyle.Triggers>
      <DataTrigger Binding="{Binding Path=SelectionState}" Value="Highlighted">
        <Setter Property="Control.Background" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowHoverBackground}}" />
        <Setter Property="Control.Foreground" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowHoverForeground}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
        <Setter Property="Control.Foreground" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowFocusForeground}}" />
      </DataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=SelectionState}" Value="Focused" />
          <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <MultiDataTrigger.Setters>
          <Setter Property="Control.Foreground" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowFocusForeground}}" />
        </MultiDataTrigger.Setters>
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=SelectionState}" Value="Focused" />
          <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <MultiDataTrigger.Setters>
          <Setter Property="Control.Foreground" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowFocusForeground}}" />
        </MultiDataTrigger.Setters>
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=SelectionState}" Value="Selected" />
          <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <MultiDataTrigger.Setters>
          <Setter Property="Control.Foreground" Value="#FF000000" cs:id="Setter_0001" x:Uid="@Value=HoverForeground" />
        </MultiDataTrigger.Setters>
      </MultiDataTrigger>
    </dxg:DefaultStyle.Triggers>
  </dxg:DefaultStyle>
</ResourceDictionary>