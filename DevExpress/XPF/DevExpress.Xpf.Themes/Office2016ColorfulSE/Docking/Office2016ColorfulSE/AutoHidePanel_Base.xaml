<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking" xmlns:dxdop="http://schemas.devexpress.com/winfx/2008/xaml/docking/platform" xmlns:dxdot="http://schemas.devexpress.com/winfx/2008/xaml/docking/themekeys" xmlns:dxdove="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016ColorfulSE.v24.1;component/Docking/Office2016ColorfulSE/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <ControlTemplate x:Key="{dxdot:AutoHideTrayElementsThemeKey ResourceKey=Caption}" TargetType="dxdove:AutoHidePaneHeaderItem">
    <Grid x:Name="Root" dxdove:DockPane.HitTestType="Header" Visibility="{Binding Visibility}">
      <Border x:Name="IsDefault" Background="#FFFDFDFD" BorderBrush="#FFABABAB" BorderThickness="{TemplateBinding ActualBorderThickness}" cs:id="Border_0001" x:Uid="@Background=Button.Background;BorderBrush=Border" />
      <dxdove:AutoHideTransformPanel x:Name="PART_TransformPanel">
        <dxdove:AutoHideTransformPanel.Orientation>
          <Binding Path="(dxdove:AutoHideTray.Orientation)" RelativeSource="{RelativeSource TemplatedParent}">
            <Binding.Converter>
              <dxdove:OrientationInvertConverter />
            </Binding.Converter>
          </Binding>
        </dxdove:AutoHideTransformPanel.Orientation>
        <dxdove:TemplatedTabCaptionControl x:Name="PART_CaptionControlPresenter" Foreground="#FF444444" LayoutItem="{Binding}" Padding="5,3" cs:id="TemplatedTabCaptionControl_0000" x:Uid="@Foreground=Foreground" />
      </dxdove:AutoHideTransformPanel>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FFC5C5C5" x:Uid="@Color=HoverBackground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="BorderBrush">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FF444444" x:Uid="@Color=HoverForeground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_CaptionControlPresenter" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FF444444" x:Uid="@Color=Foreground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Selected">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FFAEAEAE" x:Uid="@Color=SelectionBackground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="BorderBrush">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FF444444" x:Uid="@Color=HoverForeground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_CaptionControlPresenter" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FFFFFFFF" x:Uid="@Color=Backstage.Foreground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="LocationStates">
          <VisualState x:Name="Left">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,0,-1" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Right">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,0,-1" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Top">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,-1,0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Bottom">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,-1,0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" TargetName="PART_CaptionControlPresenter" Value="14" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxdot:AutoHidePaneElementsThemeKey ResourceKey=Template}" TargetType="dxdove:AutoHidePane">
    <dxdove:AutoHidePanePresenter x:Name="PART_Presenter">
      <DockPanel Background="Transparent" cs:id="DockPanel_0000">
        <Grid Background="Transparent" Cursor="{Binding ElementName=PART_Sizer, Path=Cursor}" DockPanel.Dock="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DockInverseConverter}}" dxdove:DockPane.HitTestType="Border" HorizontalAlignment="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=DockToHorizontalAlignmentConverter}}" VerticalAlignment="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=DockToVerticalAlignmentConverter}}" Visibility="{Binding IsSizerVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" cs:id="Grid_0000">
          <dxdove:ElementSizer x:Name="PART_Sizer" Orientation="{Binding Path=(dxdove:AutoHideTray.Orientation), RelativeSource={RelativeSource TemplatedParent}}" Thickness="{DynamicResource {dxdot:AutoHidePaneElementsThemeKey ResourceKey=SizerThickness}}" />
        </Grid>
        <Grid x:Name="PART_PaneContent" Background="Transparent" cs:id="Grid_0001">
          <Grid dxdove:DockPane.HitTestType="Border">
            <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" Margin="{DynamicResource {dxdot:AutoHidePaneElementsThemeKey ResourceKey=ContentMargin}}" />
          </Grid>
          <Border x:Name="PART_PaneBorder" BorderBrush="Transparent" BorderThickness="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=DockTypeToThicknessConverter}}" dxdove:DockPane.HitTestType="Border" Visibility="{Binding IsSizerVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityInverseConverter}}" cs:id="Border_0000" />
        </Grid>
      </DockPanel>
    </dxdove:AutoHidePanePresenter>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dxdo:DockLayoutManager.DockLayoutManager).EnableWin32Compatibility, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Margin" TargetName="Content" Value="0" />
      </DataTrigger>
      <Trigger Property="ViewStyle" Value="Light">
        <Setter Property="BorderThickness" TargetName="PART_PaneBorder" Value="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockTypeToThicknessLightConverter}}" />
        <Setter Property="BorderBrush" TargetName="PART_PaneBorder" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=BorderBrush}}" />
        <Setter Property="Thickness" TargetName="PART_Sizer" Value="1" />
        <Setter Property="Background" TargetName="PART_Sizer" Value="{DynamicResource {dxdot:DockPaneElementsThemeKey ResourceKey=BorderBrush}}" />
        <Setter Property="Margin" TargetName="Content" Value="0" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Thickness" TargetName="PART_Sizer" Value="{DynamicResource {dxdot:AutoHidePaneElementsThemeKey ResourceKey=TouchSizerThickness}}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxdot:DockElementsThemeKey ResourceKey=ElementSizer}" TargetType="dxdove:ElementSizer">
    <Grid Background="{TemplateBinding Background}">
      <Grid x:Name="HorizontalRootElement" Cursor="SizeNS" Height="{TemplateBinding Thickness}" />
      <Grid x:Name="VerticalRootElement" Cursor="SizeWE" Width="{TemplateBinding Thickness}" />
    </Grid>
  </ControlTemplate>
</ResourceDictionary>