<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxdot="http://schemas.devexpress.com/winfx/2008/xaml/docking/themekeys" xmlns:dxdove="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Light.v24.1;component/Docking/VS2019Light/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <Style x:Key="MDIDocumentButtonStyleBase" TargetType="dxdove:ControlBoxButton">
    <Setter Property="BorderStyle">
      <Setter.Value>
        <Style TargetType="{x:Type dxdove:ControlBoxButtonBorder}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type dxdove:ControlBoxButtonBorder}">
                <Grid x:Name="Root">
                  <Border x:Name="IsDefault" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" cs:id="Border_0000" />
                  <ContentPresenter />
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal" />
                      <VisualState x:Name="MouseOver">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                            <DiscreteObjectKeyFrame KeyTime="0">
                              <DiscreteObjectKeyFrame.Value>
                                <SolidColorBrush Color="#FFC9DEF5" x:Uid="@Color=HoverBackground" />
                              </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="BorderBrush">
                            <DiscreteObjectKeyFrame KeyTime="0">
                              <DiscreteObjectKeyFrame.Value>
                                <SolidColorBrush Color="#FFC9DEF5" x:Uid="@Color=HoverBorder" />
                              </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Pressed">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                            <DiscreteObjectKeyFrame KeyTime="0">
                              <DiscreteObjectKeyFrame.Value>
                                <SolidColorBrush Color="#FF007ACC" x:Uid="@Color=SelectionBackground" />
                              </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="BorderBrush">
                            <DiscreteObjectKeyFrame KeyTime="0">
                              <DiscreteObjectKeyFrame.Value>
                                <SolidColorBrush Color="#FF007ACC" x:Uid="@Color=SelectionBorder" />
                              </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                          <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled">
                        <Storyboard>
                          <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="ActiveStates">
                      <VisualState x:Name="EmptyActiveState" />
                      <VisualState x:Name="Inactive">
                        <Storyboard>
                          <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Active">
                        <Storyboard>
                          <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Foreground" Value="#FF1E1E1E" cs:id="Setter_0000" x:Uid="@Value=Foreground" />
    <Setter Property="MinHeight" Value="16" />
    <Setter Property="MinWidth" Value="16" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="#FF1E1E1E" cs:id="Setter_0001" x:Uid="@Value=HoverForeground" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Foreground" Value="#FFFFFFFF" cs:id="Setter_0002" x:Uid="@Value=SelectionForeground" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="MinWidth" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdot:DocumentElementsThemeKey ResourceKey=MDIDocumentButtonStyle}" BasedOn="{StaticResource MDIDocumentButtonStyleBase}" TargetType="dxdove:ControlBoxButton" />
  <!-- Button -->
  <ControlTemplate x:Key="{dxdot:MDIButtonElementsThemeKey ResourceKey=ButtonBorder}" TargetType="{x:Type dxb:ItemBorderControl}">
    <Grid x:Name="Root">
      <Border x:Name="IsDefault" Background="Transparent" cs:id="Border_0000" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="State">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Hover">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FFC9DEF5" x:Uid="@Color=HoverBackground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FFC9DEF5" x:Uid="@Color=HoverBackground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked" />
          <VisualState x:Name="HoverChecked" />
          <VisualState x:Name="Focused" />
          <VisualState x:Name="Customization" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <!-- Border -->
  <Style x:Key="{dxdot:MDIButtonElementsThemeKey ResourceKey=ButtonBorderStyle}" TargetType="{x:Type dxb:ItemBorderControl}">
    <Setter Property="Template" Value="{DynamicResource {dxdot:MDIButtonElementsThemeKey ResourceKey=ButtonBorder}}" />
  </Style>
  <!-- Buttons -->
  <DataTemplate x:Key="{dxdot:GlyphElementsThemeKey ResourceKey=MDIButtonClose}">
    <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.Close}" />
  </DataTemplate>
  <DataTemplate x:Key="{dxdot:GlyphElementsThemeKey ResourceKey=MDIButtonRestore}">
    <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.Restore}" />
  </DataTemplate>
  <DataTemplate x:Key="{dxdot:GlyphElementsThemeKey ResourceKey=MDIButtonMinimize}">
    <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.Minimize}" />
  </DataTemplate>
</ResourceDictionary>