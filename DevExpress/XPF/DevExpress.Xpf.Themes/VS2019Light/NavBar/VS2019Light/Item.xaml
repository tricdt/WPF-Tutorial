<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/navbar" xmlns:dxnav="http://schemas.devexpress.com/winfx/2008/xaml/navigation" xmlns:dxnavi="http://schemas.devexpress.com/winfx/2008/xaml/navigation/internal" xmlns:dxnt="http://schemas.devexpress.com/winfx/2008/xaml/navbar/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Light.v24.1;component/NavBar/VS2019Light/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ItemBorderTemplate}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Root">
      <Border x:Name="IsDefault" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" cs:id="Border_0000" />
      <dxn:ItemForegroundWrapper x:Name="wrapper" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}" OwnerForeground="#FF1E1E1E" cs:id="ItemForegroundWrapper_0000" x:Uid="@OwnerForeground=Foreground" />
      <ContentPresenter x:Name="item" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="CommonStates">
          <VisualState Name="Normal" />
          <VisualState Name="MouseOverState">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FFC9DEF5" cs:id="ColorAnimation_0000" x:Uid="@To=HoverBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FFC9DEF5" cs:id="ColorAnimation_0003" x:Uid="@To=HoverBorder" />
              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="wrapper" Storyboard.TargetProperty="OwnerForeground">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FF1E1E1E" cs:id="SolidColorBrush_0000" x:Uid="@Color=HoverForeground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState Name="PressedState">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF007ACC" cs:id="ColorAnimation_0001" x:Uid="@To=SelectionBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF007ACC" cs:id="ColorAnimation_0004" x:Uid="@To=SelectionBorder" />
              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="wrapper" Storyboard.TargetProperty="OwnerForeground">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FFFFFFFF" cs:id="SolidColorBrush_0001" x:Uid="@Color=SelectionForeground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="DisabledStates">
          <VisualState x:Name="EnabledState" />
          <VisualState x:Name="DisabledState">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="SelectedStates">
          <VisualState x:Name="Unselected" />
          <VisualState x:Name="Selected">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF007ACC" cs:id="ColorAnimation_0002" x:Uid="@To=SelectionBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF007ACC" cs:id="ColorAnimation_0005" x:Uid="@To=SelectionBorder" />
              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="wrapper" Storyboard.TargetProperty="OwnerForeground">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FFFFFFFF" cs:id="SolidColorBrush_0002" x:Uid="@Color=SelectionForeground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <!-- Resources -->
  <Style x:Key="{dxnt:CommonElementsThemeKey ResourceKey=ItemContentDecoratorStyle}" TargetType="{x:Type dxn:ImageAndTextDecorator}">
    <Setter Property="DisplayModeImageMargin" Value="3" />
    <Setter Property="DisplayModeTextMargin" Value="3" />
    <Setter Property="DockingBottomContentMargin" Value="3" />
    <Setter Property="DockingBottomImageMargin" Value="3,-3,3,3" />
    <Setter Property="DockingLeftContentMargin" Value="3" />
    <Setter Property="DockingLeftImageMargin" Value="3,3,0,3" />
    <Setter Property="DockingRightContentMargin" Value="3" />
    <Setter Property="DockingRightImageMargin" Value="0,3,3,3" />
    <Setter Property="DockingTopContentMargin" Value="3" />
    <Setter Property="DockingTopImageMargin" Value="3,3,3,-3" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="DisplayModeImageMargin" Value="14" />
        <Setter Property="DisplayModeTextMargin" Value="14" />
        <Setter Property="DockingBottomContentMargin" Value="14" />
        <Setter Property="DockingBottomImageMargin" Value="14,-14,14,14" />
        <Setter Property="DockingLeftContentMargin" Value="14" />
        <Setter Property="DockingLeftImageMargin" Value="14,14,0,14" />
        <Setter Property="DockingRightContentMargin" Value="14" />
        <Setter Property="DockingRightImageMargin" Value="0,14,14,14" />
        <Setter Property="DockingTopContentMargin" Value="14" />
        <Setter Property="DockingTopImageMargin" Value="14,14,14,-14" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- Item -->
  <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=NavBarGroupItemsControlTemplate}" TargetType="{x:Type dxn:NavBarGroupItemsControl}">
    <ItemsPresenter />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxnt:CommonElementsThemeKey ResourceKey=GroupItemsContainerTemplate}" TargetType="dxn:GroupItemsContainer">
    <Grid x:Name="Root">
      <dx:LayoutTransformPanel Orientation="{Binding Path=NavBar.View.Orientation}">
        <Border x:Name="Border" HorizontalAlignment="Stretch" />
      </dx:LayoutTransformPanel>
      <dxn:ScrollControl x:Name="scrollControl" dx:FocusHelper2.Focusable="False" ScrollBarControlTemplate="{DynamicResource {dxnt:CommonElementsThemeKey ResourceKey=NormalScrollTemplate}}" ScrollButtonsControlTemplate="{DynamicResource {dxnt:CommonElementsThemeKey ResourceKey=SmoothScrollTemplate}}" ScrollViewer.HorizontalScrollBarVisibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NavBarViewKind, Converter={StaticResource NavBarViewKindToScrollBarVisibilityConverter}}">
        <dx:LayoutTransformPanel Orientation="{Binding Path=NavBar.View.Orientation}">
          <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
        </dx:LayoutTransformPanel>
      </dxn:ScrollControl>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="ExplorerBarItemsOrContentEmptyStates">
          <VisualState Name="ExplorerBarItemsOrContentNotEmpty" />
          <VisualState Name="ExplorerBarItemsOrContentEmpty">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="Height">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <sys:Double>30</sys:Double>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
</ResourceDictionary>