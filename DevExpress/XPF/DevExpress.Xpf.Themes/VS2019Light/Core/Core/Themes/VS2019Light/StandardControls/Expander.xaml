<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Light.v24.1;component/Core/Core/Themes/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <Style x:Key="ExpanderHeaderFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Stroke="#FF007ACC" StrokeDashArray="1 2" StrokeThickness="1" cs:id="Rectangle_0000" x:Uid="@Stroke=Focused" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- Buttons -->
  <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
            <StackPanel Margin="{TemplateBinding Padding}" Orientation="Horizontal">
              <Grid x:Name="Button" Height="16" Width="16">
                <Border x:Name="IsDefault" Background="Transparent" cs:id="Border_0000" />
                <Path x:Name="Collapsed" Fill="#FF1E1E1E" Style="{StaticResource UIShape.Up}" cs:id="Path_0000" x:Uid="@Fill=Foreground" />
                <Path x:Name="Expanded" Fill="#FF1E1E1E" Style="{StaticResource UIShape.Down}" Visibility="Collapsed" cs:id="Path_0001" x:Uid="@Fill=Foreground" />
              </Grid>
              <ContentPresenter x:Name="Content" Margin="4,0,0,0" RecognizesAccessKey="True" />
            </StackPanel>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Visibility" TargetName="Collapsed" Value="Collapsed" />
              <Setter Property="Visibility" TargetName="Expanded" Value="Visible" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="Collapsed" Value="#FFFFFFFF" cs:id="Setter_0002" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Fill" TargetName="Expanded" Value="#FFFFFFFF" cs:id="Setter_0003" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FFC9DEF5" cs:id="Setter_0000" x:Uid="@Value=HoverBackground" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="Collapsed" Value="#FFFFFFFF" cs:id="Setter_0004" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Fill" TargetName="Expanded" Value="#FFFFFFFF" cs:id="Setter_0005" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FF007ACC" cs:id="Setter_0001" x:Uid="@Value=SelectionBackground" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter Property="MinHeight" TargetName="Button" Value="44" />
              <Setter Property="MinWidth" TargetName="Button" Value="44" />
              <Setter Property="Margin" TargetName="Content" Value="14" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
            <StackPanel Margin="{TemplateBinding Padding}" Orientation="Horizontal">
              <Grid x:Name="Button" Height="16" Width="16">
                <Border x:Name="IsDefault" Background="Transparent" cs:id="Border_0000" />
                <Path x:Name="Collapsed" Fill="#FF1E1E1E" Style="{StaticResource UIShape.Down}" cs:id="Path_0000" x:Uid="@Fill=Foreground" />
                <Path x:Name="Expanded" Fill="#FF1E1E1E" Style="{StaticResource UIShape.Up}" Visibility="Collapsed" cs:id="Path_0001" x:Uid="@Fill=Foreground" />
              </Grid>
              <ContentPresenter x:Name="Content" Margin="4,0,0,0" RecognizesAccessKey="True" />
            </StackPanel>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Visibility" TargetName="Collapsed" Value="Collapsed" />
              <Setter Property="Visibility" TargetName="Expanded" Value="Visible" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="Collapsed" Value="#FFFFFFFF" cs:id="Setter_0002" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Fill" TargetName="Expanded" Value="#FFFFFFFF" cs:id="Setter_0003" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FFC9DEF5" cs:id="Setter_0000" x:Uid="@Value=HoverBackground" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="Collapsed" Value="#FFFFFFFF" cs:id="Setter_0004" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Fill" TargetName="Expanded" Value="#FFFFFFFF" cs:id="Setter_0005" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FF007ACC" cs:id="Setter_0001" x:Uid="@Value=SelectionBackground" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter Property="MinHeight" TargetName="Button" Value="44" />
              <Setter Property="MinWidth" TargetName="Button" Value="44" />
              <Setter Property="Margin" TargetName="Content" Value="14" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
            <StackPanel Margin="{TemplateBinding Padding}" Orientation="Vertical">
              <Grid x:Name="Button" Height="16" Width="16">
                <Border x:Name="IsDefault" Background="Transparent" cs:id="Border_0000" />
                <Path x:Name="Collapsed" Fill="#FF1E1E1E" Style="{StaticResource UIShape.Right}" cs:id="Path_0000" x:Uid="@Fill=Foreground" />
                <Path x:Name="Expanded" Fill="#FF1E1E1E" Style="{StaticResource UIShape.Left}" Visibility="Collapsed" cs:id="Path_0001" x:Uid="@Fill=Foreground" />
              </Grid>
              <ContentPresenter x:Name="Content" RecognizesAccessKey="True" />
            </StackPanel>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Visibility" TargetName="Collapsed" Value="Collapsed" />
              <Setter Property="Visibility" TargetName="Expanded" Value="Visible" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="Collapsed" Value="#FFFFFFFF" cs:id="Setter_0002" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Fill" TargetName="Expanded" Value="#FFFFFFFF" cs:id="Setter_0003" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FFC9DEF5" cs:id="Setter_0000" x:Uid="@Value=HoverBackground" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="Collapsed" Value="#FFFFFFFF" cs:id="Setter_0004" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Fill" TargetName="Expanded" Value="#FFFFFFFF" cs:id="Setter_0005" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FF007ACC" cs:id="Setter_0001" x:Uid="@Value=SelectionBackground" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter Property="MinHeight" TargetName="Button" Value="44" />
              <Setter Property="MinWidth" TargetName="Button" Value="44" />
              <Setter Property="Margin" TargetName="Content" Value="14" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
            <StackPanel Margin="{TemplateBinding Padding}" Orientation="Vertical">
              <Grid x:Name="Button" Height="16" Width="16">
                <Border x:Name="IsDefault" Background="Transparent" cs:id="Border_0000" />
                <Path x:Name="Collapsed" Fill="#FF1E1E1E" Style="{StaticResource UIShape.Left}" cs:id="Path_0000" x:Uid="@Fill=Foreground" />
                <Path x:Name="Expanded" Fill="#FF1E1E1E" Style="{StaticResource UIShape.Right}" Visibility="Collapsed" cs:id="Path_0001" x:Uid="@Fill=Foreground" />
              </Grid>
              <ContentPresenter x:Name="Content" RecognizesAccessKey="True" />
            </StackPanel>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Visibility" TargetName="Collapsed" Value="Collapsed" />
              <Setter Property="Visibility" TargetName="Expanded" Value="Visible" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="Collapsed" Value="#FFFFFFFF" cs:id="Setter_0002" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Fill" TargetName="Expanded" Value="#FFFFFFFF" cs:id="Setter_0003" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FFC9DEF5" cs:id="Setter_0000" x:Uid="@Value=HoverBackground" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="Collapsed" Value="#FFFFFFFF" cs:id="Setter_0004" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Fill" TargetName="Expanded" Value="#FFFFFFFF" cs:id="Setter_0005" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FF007ACC" cs:id="Setter_0001" x:Uid="@Value=SelectionBackground" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter Property="MinHeight" TargetName="Button" Value="44" />
              <Setter Property="MinWidth" TargetName="Button" Value="44" />
              <Setter Property="Margin" TargetName="Content" Value="14" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- Expander -->
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.Expander}" TargetType="{x:Type Expander}">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
            <DockPanel>
              <ToggleButton x:Name="Header" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" DockPanel.Dock="Top" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
              <ContentPresenter x:Name="Button" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" />
            </DockPanel>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="true">
              <Setter Property="Visibility" TargetName="Button" Value="Visible" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Right">
              <Setter Property="DockPanel.Dock" TargetName="Button" Value="Right" />
              <Setter Property="DockPanel.Dock" TargetName="Header" Value="Left" />
              <Setter Property="Style" TargetName="Header" Value="{StaticResource ExpanderRightHeaderStyle}" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Up">
              <Setter Property="DockPanel.Dock" TargetName="Button" Value="Top" />
              <Setter Property="DockPanel.Dock" TargetName="Header" Value="Bottom" />
              <Setter Property="Style" TargetName="Header" Value="{StaticResource ExpanderUpHeaderStyle}" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Left">
              <Setter Property="DockPanel.Dock" TargetName="Button" Value="Left" />
              <Setter Property="DockPanel.Dock" TargetName="Header" Value="Right" />
              <Setter Property="Style" TargetName="Header" Value="{StaticResource ExpanderLeftHeaderStyle}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" TargetName="Root" Value="0.38" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
  </Style>
</ResourceDictionary>