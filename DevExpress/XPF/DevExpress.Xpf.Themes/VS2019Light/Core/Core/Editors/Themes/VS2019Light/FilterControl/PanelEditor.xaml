<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Light.v24.1;component/Core/Core/Editors/Themes/VS2019Light/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <ControlTemplate x:Key="{dxet:FilterControlThemeKey ResourceKey=FilterControlEditorTemplate}" TargetType="{x:Type dxe:FilterControlEditor}">
    <StackPanel Orientation="Horizontal">
      <dxe:FieldInOperationButtonControl x:Name="PART_Column" Node="{TemplateBinding Node}" OperatorPropertyName="{Binding Path=Operator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource OperatorPropertyNameConverter}}" Template="{DynamicResource {dxet:FilterControlThemeKey ResourceKey=FieldInOperationButtonTemplate}}" Visibility="{Binding Path=FieldInValue, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
      <Border x:Name="PART_Stroke_Border" Background="#FFEEEEF2" BorderBrush="#FFCCCEDB" BorderThickness="1" Margin="0,0,3,0" Visibility="{Binding Path=FieldInValue, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityInverseConverter}}" cs:id="Border_0001" x:Uid="@Background=Window.Background;BorderBrush=Border">
        <ContentPresenter Name="PART_EditorPresenter" />
      </Border>
      <ToggleButton x:Name="PART_ChangeOperandTypeButton" Command="{Binding ChangeOperandTypeCommand, RelativeSource={RelativeSource TemplatedParent}}" Cursor="Hand" dx:FocusHelper2.Focusable="False" IsChecked="{Binding Path=FieldInValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Margin="3" Template="{DynamicResource {dxet:FilterControlThemeKey ResourceKey=ChangeOperandTypeButtonTemplate}}" VerticalAlignment="Center" Visibility="{Binding Path=Node.Owner.ShowOperandTypeIcon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
        <ToolTipService.ToolTip>
          <ToolTip Visibility="{Binding Node.Owner.ShowToolTips, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
            <TextBlock Text="{Binding Source={x:Null}, ConverterParameter=FilterToolTipValueType, Converter={StaticResource EditorStringIdConverter}}" />
          </ToolTip>
        </ToolTipService.ToolTip>
      </ToggleButton>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="EditModeStates">
          <VisualState x:Name="InplaceActive">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="PART_Stroke_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FFCCCEDB" cs:id="ColorAnimation_0000" x:Uid="@To=Border" />
              <ColorAnimation Duration="0" Storyboard.TargetName="PART_Stroke_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FFEEEEF2" cs:id="ColorAnimation_0001" x:Uid="@To=Window.Background" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="PART_EditorPresenter" Storyboard.TargetProperty="MinWidth" To="32" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="InplaceInactive">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="PART_Stroke_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="Transparent" cs:id="ColorAnimation_0002" />
              <ColorAnimation Duration="0" Storyboard.TargetName="PART_Stroke_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FFFFFFFF" cs:id="ColorAnimation_0003" x:Uid="@To=Editor.Background" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="PART_EditorPresenter" Storyboard.TargetProperty="MinWidth" To="0" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </StackPanel>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" TargetName="PART_Stroke_Border" Value="1" />
        <Setter Property="MinHeight" TargetName="PART_Stroke_Border" Value="44" />
        <Setter Property="MinWidth" TargetName="PART_Stroke_Border" Value="96" />
        <Setter Property="Margin" TargetName="PART_ChangeOperandTypeButton" Value="14" />
        <Setter Property="MinHeight" TargetName="PART_ChangeOperandTypeButton" Value="44" />
        <Setter Property="MinWidth" TargetName="PART_ChangeOperandTypeButton" Value="96" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- Style -->
  <Style x:Key="{dxet:FilterControlThemeKey ResourceKey=InactiveTextBlockStyle}" TargetType="{x:Type TextBlock}">
    <Setter Property="Margin" Value="4,2,4,2" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="14" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>