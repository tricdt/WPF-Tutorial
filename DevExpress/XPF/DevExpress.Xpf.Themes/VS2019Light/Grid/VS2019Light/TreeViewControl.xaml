<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxgtl="clr-namespace:DevExpress.Xpf.Grid.TreeList;assembly=DevExpress.Xpf.Grid.v24.1" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Light.v24.1;component/Grid/VS2019Light/TreeViewControl_Base.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <ControlTemplate x:Key="{dxgt:TreeViewControlThemeKey ResourceKey=RowMarginControlTemplate}" TargetType="{x:Type dxg:TreeViewRowMarginControl}">
    <Grid x:Name="background" Background="{TemplateBinding Background}">
      <Path x:Name="PART_OffsetPath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
      <Path x:Name="PART_TreeLinePath" Opacity="0.4" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" />
      <dxg:IndentsPanel HorizontalAlignment="Right" RowIndent="{Binding View.RowIndent}">
        <dxg:TreeViewNodeExpandButton x:Name="PART_ExpandButton" Command="{Binding View.Commands.ChangeNodeExpanded}" CommandParameter="{Binding RowHandle.Value}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Left" IsChecked="{Binding IsExpanded}" IsExpandButtonVisible="{Binding Path=IsButtonVisible}" />
        <dxe:CheckEdit x:Name="PART_NodeCheckBox" Focusable="False" IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsCheckBoxEnabled}" IsThreeState="{Binding View.AllowIndeterminateCheckState}" Padding="0" Visibility="{Binding IsCheckBoxVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
          <dxg:GridViewHitInfoBase.HitTestAcceptor>
            <dxgtl:TreeListNodeCheckboxHitTestAcceptor />
          </dxg:GridViewHitInfoBase.HitTestAcceptor>
        </dxe:CheckEdit>
        <dx:MeasurePixelSnapper Visibility="{Binding IsImageVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
          <dx:DXImage x:Name="PART_NodeImage" Focusable="False" Height="{Binding Path=View.NodeImageSize.Height}" Source="{Binding Image, UpdateSourceTrigger=PropertyChanged}" Width="{Binding Path=View.NodeImageSize.Width}">
            <dxg:GridViewHitInfoBase.HitTestAcceptor>
              <dxgtl:TreeListNodeImageHitTestAcceptor />
            </dxg:GridViewHitInfoBase.HitTestAcceptor>
            <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
          </dx:DXImage>
        </dx:MeasurePixelSnapper>
      </dxg:IndentsPanel>
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding ShowTreeIndentAsCellPart}" Value="true">
        <Setter Property="Background" Value="Transparent" cs:id="Setter_0000" />
      </DataTrigger>
      <DataTrigger Binding="{Binding ShowTreeIndentAsCellPart}" Value="false">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding IndentSelectionState}" Value="Focused"></DataTrigger>
      <DataTrigger Binding="{Binding Path=IndentSelectionState}" Value="Selected"></DataTrigger>
      <DataTrigger Binding="{Binding Path=IndentSelectionState}" Value="FocusedAndSelected"></DataTrigger>
      <DataTrigger Binding="{Binding Path=IndentSelectionState}" Value="Highlighted"></DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>