<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxfuit="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/themekeys" xmlns:dxfui_local="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxfui_local_native="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <dx:EditorStringIdConverter x:Key="EditorStringIdConverter" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.ColumnFilteringUIContentControl}" TargetType="dxg:ColumnFilteringUIContentControl">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <dxcn:DefaultSizeDecorator DefaultChildWidth="{Binding Path=(dxe:PopupBaseEdit.PopupOwnerEdit).PopupMinWidth, RelativeSource={RelativeSource Self}}">
            <dxg:ColumnFilteringUIContentPresenter Content="{Binding}" ContentTemplate="{Binding Template}" dxfui_local:FilterElement.Context="{Binding Context}">
              <dxmvvm:Interaction.Behaviors>
                <dxfui_local:FilterSetBehavior x:Name="PART_FilterSetBehavior" />
                <dxfui_local_native:RemoteBindingBehavior Content="{Binding ElementName=PART_FilterSetBehavior}" Target="{Binding Path=(dxe:PopupBaseEdit.PopupOwnerEdit), RelativeSource={RelativeSource TemplatedParent}}" />
              </dxmvvm:Interaction.Behaviors>
            </dxg:ColumnFilteringUIContentPresenter>
          </dxcn:DefaultSizeDecorator>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ApplyFilterImmediately" Value="true">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ContentControl}">
              <dxcn:DefaultSizeDecorator DefaultChildWidth="{Binding Path=(dxe:PopupBaseEdit.PopupOwnerEdit).PopupMinWidth, RelativeSource={RelativeSource Self}}">
                <dxg:ColumnFilteringUIContentPresenter Content="{Binding}" ContentTemplate="{Binding Template}" />
              </dxcn:DefaultSizeDecorator>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=PopupBottomAreaTemplate}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="PART_Root" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.FooterVisibility, RelativeSource={RelativeSource TemplatedParent}}">
      <ContentPresenter />
      <ContentControl dx:FocusHelper2.Focusable="False" Template="{DynamicResource {dxet:PopupBaseEditThemeKey ResourceKey=FooterTemplate}}" />
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <dx:UniformStackPanel Margin="14,0,0,0" ChildSpacing="0" Orientation="Horizontal" Width="Auto" HorizontalAlignment="Left">
          <Button x:Name="PART_ClearFilterButton" HorizontalAlignment="Left" VerticalAlignment="Center" dx:FocusHelper2.Focusable="False" Margin="0,6" Content="{Binding ClearFilterButtonCaption}">
            <Button.Command>
              <PriorityBinding>
                <Binding Path="(dxe:BaseEdit.OwnerEdit).(dxfui_local_native:RemoteBindingBehavior.Content).ClearFilterCommand" RelativeSource="{RelativeSource TemplatedParent}" />
                <Binding Path="ClearFilterCommand" />
              </PriorityBinding>
            </Button.Command>
          </Button>
        </dx:UniformStackPanel>
        <dx:UniformStackPanel Grid.Column="2" Margin="3,0,14,0" ChildSpacing="0" Orientation="Horizontal" Width="Auto" HorizontalAlignment="Right">
          <Button x:Name="PART_OkButton" HorizontalAlignment="Stretch" VerticalAlignment="Center" dx:FocusHelper2.Focusable="False" Margin="0,6,3,6" Content="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=OK, Converter={StaticResource EditorStringIdConverter}}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.OkButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.OkButtonIsEnabled, RelativeSource={RelativeSource TemplatedParent}}">
            <dxmvvm:Interaction.Behaviors>
              <dxmvvm:CompositeCommandBehavior CanExecuteCondition="AnyCommandCanBeExecuted">
                <dxmvvm:CommandItem Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxfui_local_native:RemoteBindingBehavior.Content).ApplyFilterCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxmvvm:CommandItem Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).ClosePopupCommand, RelativeSource={RelativeSource TemplatedParent}}">
                  <dxmvvm:CommandItem.CommandParameter>
                    <dxe:PopupCloseMode>Normal</dxe:PopupCloseMode>
                  </dxmvvm:CommandItem.CommandParameter>
                </dxmvvm:CommandItem>
              </dxmvvm:CompositeCommandBehavior>
            </dxmvvm:Interaction.Behaviors>
          </Button>
          <Button x:Name="PART_CancelButton" HorizontalAlignment="Stretch" VerticalAlignment="Center" dx:FocusHelper2.Focusable="False" Margin="3,6,0,6" Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).ClosePopupCommand, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=Cancel, Converter={StaticResource EditorStringIdConverter}}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.CancelButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
            <Button.CommandParameter>
              <dxe:PopupCloseMode>Cancel</dxe:PopupCloseMode>
            </Button.CommandParameter>
          </Button>
        </dx:UniformStackPanel>
      </Grid>
      <dxe:PopupSizeGrip Margin="2,3,2,2" x:Name="PART_SizeGrip" dx:FocusHelper2.Focusable="False" HorizontalAlignment="Right" Style="{DynamicResource {dxet:PopupBaseEditThemeKey ResourceKey=ResizeGripStyle}}" VerticalAlignment="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.VerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.Visibility, RelativeSource={RelativeSource TemplatedParent}}" />
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.IsLeft, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="PART_SizeGrip" Property="HorizontalAlignment" Value="Left" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>