<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdiag="http://schemas.devexpress.com/winfx/2008/xaml/diagram" xmlns:dxdiagn="http://schemas.devexpress.com/winfx/2008/xaml/diagram/internal" xmlns:dxdiagt="http://schemas.devexpress.com/winfx/2008/xaml/diagram/themekeys" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxdiagcore="clr-namespace:DevExpress.Diagram.Core;assembly=DevExpress.Diagram.v24.1.Core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <Size x:Key="{dxdiagt:ControlsThemeKeys ResourceKey=DiagramConnectorArrowSize}">7,7</Size>
  <sys:Double x:Key="{dxdiagt:ControlsThemeKeys ResourceKey=DragPreviewOpacity}">0.4</sys:Double>
  <sys:Double x:Key="{dxdiagt:RulerThemeKey ResourceKey=ScaleFontSize}">10</sys:Double>
  <Thickness x:Key="{dxdiagt:DiagramToolboxControlThemeKey ResourceKey=StencilGroupMargin}">3,3,2,2</Thickness>
  <sys:Double x:Key="{dxdiagt:DiagramToolboxControlThemeKey ResourceKey=ShapePresenterSize}">46</sys:Double>
  <sys:Double x:Key="{dxdiagt:DiagramToolboxControlThemeKey ResourceKey=ShapeDescriptionWidth}">73</sys:Double>
  <sys:Double x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=PanZoomBottomRightOffset}">20</sys:Double>
  <SolidColorBrush x:Key="{dxdiagt:DiagramControlThemeKeys ResourceKey=PageBackground}" Color="White" />
  <SolidColorBrush x:Key="{dxdiagt:DiagramControlThemeKeys ResourceKey=PrintPageBackground}" Color="White" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.Native.LayersHost}" TargetType="{x:Type dxdiagn:LayersHost}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Focusable" Value="True" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="dx:WpfSvgPalette.Palette">
      <Setter.Value>
        <dx:WpfSvgPalette OverridesThemeColors="True" />
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdiagn:LayersHost}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ContentControl Grid.Column="1" Grid.Row="1" Focusable="False" Template="{DynamicResource {dxdiagt:DiagramControlThemeKeys ResourceKey=BackgroundTemplate}}">
              <Canvas x:Name="DiagramArea" Background="Transparent" ClipToBounds="True" Focusable="False" />
            </ContentControl>
            <Border Name="Background" BorderThickness="0,0,0,0" BorderBrush="{DynamicResource {dxdiagt:RulerThemeKey ResourceKey=BorderBrush}}" Background="{DynamicResource {dxdiagt:RulerThemeKey ResourceKey=HorizontalBackground}}" />
            <Border Name="HorizontalRulerArea" Grid.Column="1" Padding="0,4,0,0" Background="{DynamicResource {dxdiagt:RulerThemeKey ResourceKey=HorizontalBackground}}" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource {dxdiagt:RulerThemeKey ResourceKey=BorderBrush}}" />
            <Border Name="VerticalRulerArea" Grid.Row="1" Padding="4,0,0,0" Background="{DynamicResource {dxdiagt:RulerThemeKey ResourceKey=VerticalBackground}}" BorderThickness="0,0,1,0" BorderBrush="{DynamicResource {dxdiagt:RulerThemeKey ResourceKey=BorderBrush}}" />
            <Border Name="LeftTopBackground" Background="{TemplateBinding Background}" Width="{DynamicResource {dxdiagt:RulerThemeKey ResourceKey=Size}}" Height="{DynamicResource {dxdiagt:RulerThemeKey ResourceKey=Size}}" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=ShowRulers, RelativeSource={RelativeSource AncestorType=dxdiag:DiagramControl}}" Value="False">
              <Setter TargetName="HorizontalRulerArea" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="VerticalRulerArea" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="LeftTopBackground" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="Background" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.DiagramShape}" TargetType="{x:Type dxdiag:DiagramShape}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="MinWidth" Value="{x:Static dxdiagcore:DiagramItemController.ItemMinSize}" />
    <Setter Property="MinHeight" Value="{x:Static dxdiagcore:DiagramItemController.ItemMinSize}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="TextAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdiag:DiagramShape}">
          <dxdiag:ShapePresenter x:Name="ShapePresenter" Content="{TemplateBinding Content}" ContentPadding="{TemplateBinding Padding}" ShowContent="True" ContentBackground="{TemplateBinding ContentBackground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Stroke="{TemplateBinding Stroke}" StrokeThickness="{TemplateBinding StrokeThickness}" StrokeDashArray="{TemplateBinding StrokeDashArray}" Background="{TemplateBinding Background}" Shape="{TemplateBinding ShapeGeometry}" EditorBounds="{TemplateBinding EditorBounds}" />
          <ControlTemplate.Triggers>
            <Trigger Property="IsTextEditMode" Value="True">
              <Trigger.Setters>
                <Setter TargetName="ShapePresenter" Property="ShowContent" Value="False" />
              </Trigger.Setters>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.BaseDiagramContainer}" TargetType="{x:Type dxdiag:BaseDiagramContainer}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="MinWidth" Value="{x:Static dxdiagcore:DiagramItemController.ContainerMinSize}" />
    <Setter Property="MinHeight" Value="{x:Static dxdiagcore:DiagramItemController.ContainerMinSize}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdiag:BaseDiagramContainer}">
          <dx:DXBorder x:Name="ItemsContainer" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" EnableDPICorrection="False" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.DiagramContainer}" TargetType="{x:Type dxdiag:DiagramContainer}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.BaseDiagramContainer}}">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="TextAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdiag:DiagramContainer}">
          <Grid>
            <dxdiag:ShapePresenter x:Name="ShapePresenter" Content="{TemplateBinding Header}" ShowContent="True" ContentPadding="{TemplateBinding HeaderPadding}" ContentBackground="{TemplateBinding ContentBackground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Stroke="{TemplateBinding Stroke}" StrokeThickness="{TemplateBinding StrokeThickness}" StrokeDashArray="{TemplateBinding StrokeDashArray}" Background="{TemplateBinding Background}" Shape="{TemplateBinding ShapeGeometry}" EditorBounds="{TemplateBinding EditorBounds}" />
            <dx:DXBorder x:Name="ItemsContainer" Padding="{TemplateBinding ActualPadding}" ClipToBounds="{TemplateBinding ClipItemsToBounds}" EnableDPICorrection="False" />
            <Canvas x:Name="canvas" Visibility="Collapsed">
              <Control x:Name="PART_CollapseButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Stroke}" Foreground="{TemplateBinding Foreground}" Canvas.Left="{Binding ActualCollapseContainerButtonPosition.X, RelativeSource={RelativeSource Mode=TemplatedParent}}" Canvas.Top="{Binding ActualCollapseContainerButtonPosition.Y, RelativeSource={RelativeSource Mode=TemplatedParent}}" Width="{TemplateBinding ActualCollapseContainerButtonWidth}" Height="{TemplateBinding ActualCollapseContainerButtonHeight}" Template="{DynamicResource {dxdiagt:ControlsThemeKeys ResourceKey=DiagramContainerCollapseButtonTemplate}}" />
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsTextEditMode" Value="True">
              <Setter TargetName="ShapePresenter" Property="ShowContent" Value="False" />
            </Trigger>
            <Trigger Property="ShowHeader" Value="False">
              <Setter TargetName="ShapePresenter" Property="ShowContent" Value="False" />
            </Trigger>
            <Trigger Property="ActualIsContainerCollapseButtonVisible" Value="True">
              <Setter TargetName="canvas" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="{dxdiagt:ControlsThemeKeys ResourceKey=DiagramContainerCollapseButtonTemplate}" TargetType="{x:Type Control}">
    <Image x:Name="PART_CollapseButtonImage" Stretch="UniformToFill" Margin="{TemplateBinding Padding}" Source="{dxdiag:DiagramSvgImage AutoSize=True, Path=Images/Svg/ExpandedContainerIcon.svg}">
      <dxmvvm:Interaction.Behaviors>
        <dxdiagn:ColorizeSvgImageBehavior StrokeCode="{x:Static dxdiagcore:DiagramContainerController.CollapseButtonReplaceColorCode}" Stroke="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
      </dxmvvm:Interaction.Behaviors>
    </Image>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding IsCollapsed, RelativeSource={RelativeSource AncestorType=dxdiag:DiagramContainer}}" Value="True">
        <Setter TargetName="PART_CollapseButtonImage" Property="Source" Value="{dxdiag:DiagramSvgImage AutoSize=True, Path=Images/Svg/CollapsedContainerIcon.svg}" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.DiagramContentItem}" TargetType="{x:Type dxdiag:DiagramContentItem}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="MinWidth" Value="{x:Static dxdiagcore:DiagramItemController.ItemMinSize}" />
    <Setter Property="MinHeight" Value="{x:Static dxdiagcore:DiagramItemController.ItemMinSize}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdiag:DiagramContentItem}">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <ContentPresenter ContentSource="Content" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.DiagramConnector}" TargetType="{x:Type dxdiag:DiagramConnector}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="BeginArrowSize" Value="{DynamicResource {dxdiagt:ControlsThemeKeys ResourceKey=DiagramConnectorArrowSize}}" />
    <Setter Property="EndArrowSize" Value="{DynamicResource {dxdiagt:ControlsThemeKeys ResourceKey=DiagramConnectorArrowSize}}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="ContentBackground" Value="White" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdiag:DiagramConnector}">
          <dxdiag:ScaleCanvas x:Name="PART_ScaleCanvas">
            <TextBlock x:Name="Text" Text="{TemplateBinding Content}" Background="{TemplateBinding ContentBackground}" Foreground="{TemplateBinding Foreground}" dxdiag:ScaleCanvas.Position="{TemplateBinding TextPosition}" TextWrapping="Wrap" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
          </dxdiag:ScaleCanvas>
          <ControlTemplate.Triggers>
            <Trigger Property="Content" Value="">
              <Setter TargetName="Text" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
              <Setter TargetName="Text" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsTextEditMode" Value="True">
              <Setter TargetName="Text" Property="Visibility" Value="Hidden" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.DiagramImage}" TargetType="{x:Type dxdiag:DiagramImage}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="MinWidth" Value="{x:Static dxdiagcore:DiagramItemController.ItemMinSize}" />
    <Setter Property="MinHeight" Value="{x:Static dxdiagcore:DiagramItemController.ItemMinSize}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="TextAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdiag:DiagramImage}">
          <Grid>
            <dxdiag:ShapePresenter x:Name="ShapePresenter" ClipToBounds="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Collapsed" Shape="{TemplateBinding PlaceholderGeometry}" RenderTransform="{TemplateBinding ImageTransform}" />
            <TextBlock Name="PART_TextBlock" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Image" Value="{x:Null}">
              <Setter TargetName="ShapePresenter" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.DiagramRoot}" TargetType="{x:Type dxdiag:DiagramRoot}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdiag:DiagramRoot}">
          <Border x:Name="ItemsContainer" Background="Transparent" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.DragPreview}" TargetType="{x:Type dxdiag:DragPreview}">
    <Setter Property="BorderBrush" Value="{DynamicResource {dxdiagt:ControlsThemeKeys ResourceKey=DragPreviewBrush}}" />
    <Setter Property="Opacity" Value="{DynamicResource {dxdiagt:ControlsThemeKeys ResourceKey=DragPreviewOpacity}}" />
    <Setter Property="IsHitTestVisible" Value="False" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.SelectionPreview}" TargetType="{x:Type dxdiag:SelectionPreview}">
    <Setter Property="Background" Value="{DynamicResource {dxdiagt:ControlsThemeKeys ResourceKey=SelectionPreviewBackground}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxdiagt:ControlsThemeKeys ResourceKey=SelectionPreviewBorderBrush}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdiag:SelectionPreview}">
          <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ScaleItemsControl}" TargetType="dxdiag:ScaleItemsControl">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <dxdiag:ScaleCanvas Scale="{Binding Path=(dxdiag:AdornerLayer.Zoom), RelativeSource={RelativeSource TemplatedParent}}" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxdiag:ScaleItemsControl">
          <ItemsPresenter dxdiag:AdornerLayer.Zoom="{TemplateBinding Scale}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Pen x:Key="PageBackgroundPen" Brush="#FFB3B3B3" Thickness="1">
    <Pen.DashStyle>
      <DashStyle Offset="3" Dashes="8" />
    </Pen.DashStyle>
  </Pen>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.PageBackgroundControl}" TargetType="{x:Type dxdiag:PageBackgroundControl}">
    <Setter Property="Background" Value="{DynamicResource {dxdiagt:DiagramControlThemeKeys ResourceKey=PageBackground}}" />
    <Setter Property="BorderThickness" Value="{DynamicResource {dxdiagt:ControlsThemeKeys ResourceKey=PageBorderThickness}}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdiag:PageBackgroundControl}">
          <ContentControl Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Template="{DynamicResource {dxdiagt:DiagramControlThemeKeys ResourceKey=PageBackgroundTemplate}}" Focusable="False">
            <Grid Margin="{Binding Path=BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={dxdiagn:InvertThicknessConverter}}">
              <Viewbox>
                <dxdiag:PagesBackgroundControl x:Name="PART_PageBackground" Background="{TemplateBinding Background}" Diagram="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Diagram}" Tag="{Binding Path=(dxdiag:AdornerLayer.Viewbox), RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding Path=Tag.Width, RelativeSource={RelativeSource Self}}" Height="{Binding Path=Tag.Height, RelativeSource={RelativeSource Self}}" BackgroundTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Diagram.BackgroundTemplate}" PageBackgroundTemplate="{Binding Path=Diagram.DiagramPageBackgroundTemplate, RelativeSource={RelativeSource TemplatedParent}}" PageBackgroundTemplateSelector="{Binding Path=Diagram.DiagramPageBackgroundTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" ItemsOffset="{Binding Path=(dxdiag:AdornerLayer.Location), RelativeSource={RelativeSource TemplatedParent}}" ZoomFactor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Diagram.ZoomFactor}" PageMargin="{Binding Path=Diagram.PageMargin, RelativeSource={RelativeSource TemplatedParent}}" />
              </Viewbox>
              <dxdiagn:GridPainter x:Name="PART_GridPainter" PageMargin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Diagram.PageMargin}" LineBrush="{DynamicResource {dxdiagt:ControlsThemeKeys ResourceKey=GridLineBrush}}" GridSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Diagram.GridSize}" ZoomFactor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Diagram.ZoomFactor}" MeasureUnit="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Diagram.MeasureUnit}" PageSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Diagram.PageSize}" Location="{Binding Path=(dxdiag:AdornerLayer.Location), RelativeSource={RelativeSource TemplatedParent}}" Offset="{Binding Path=(dxdiag:AdornerLayer.Offset), RelativeSource={RelativeSource TemplatedParent}}" Viewport="{Binding Path=(dxdiag:AdornerLayer.Viewport), RelativeSource={RelativeSource TemplatedParent}}" />
              <dxdiag:PageBorderControl x:Name="PART_PageBorderControl" Margin="{TemplateBinding BorderThickness}" ShowPageBreaks="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Diagram.ShowPageBreaks}" ZoomFactor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Diagram.ZoomFactor}" PageMargin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Diagram.PageMargin}" PageSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Diagram.PageSize}" Location="{Binding Path=(dxdiag:AdornerLayer.Location), RelativeSource={RelativeSource TemplatedParent}}" Pen="{StaticResource PageBackgroundPen}" />
            </Grid>
          </ContentControl>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=ShowPageBreaks, RelativeSource={RelativeSource AncestorType=dxdiag:DiagramControl}}" Value="False">
              <Setter TargetName="PART_GridPainter" Property="PageMargin" Value="0" />
              <Setter TargetName="PART_PageBorderControl" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowGrid, RelativeSource={RelativeSource AncestorType=dxdiag:DiagramControl}}" Value="False">
              <Setter TargetName="PART_GridPainter" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.PagesBackgroundControl}" TargetType="{x:Type dxdiag:PagesBackgroundControl}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdiag:PagesBackgroundControl}">
          <Grid Background="{TemplateBinding Background}">
            <ContentControl Name="BackgroundPresenter" Content="{TemplateBinding BackgroundInfo}" ContentTemplate="{TemplateBinding BackgroundTemplate}" Focusable="False" />
            <ItemsControl Name="PagesPresenter" ItemsSource="{TemplateBinding PagesInfo}" ItemTemplate="{TemplateBinding PageBackgroundTemplate}" ItemTemplateSelector="{TemplateBinding PageBackgroundTemplateSelector}" RenderTransform="{TemplateBinding ItemsTransform}" Focusable="False">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <Canvas />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemContainerStyle>
                <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=ContentPresenter}" TargetType="ContentPresenter">
                  <Setter Property="Canvas.Left" Value="{Binding Left, Mode=OneTime}" />
                  <Setter Property="Canvas.Top" Value="{Binding Top, Mode=OneTime}" />
                  <Setter Property="Width" Value="{Binding Width, Mode=OneTime}" />
                  <Setter Property="Height" Value="{Binding Height, Mode=OneTime}" />
                </Style>
              </ItemsControl.ItemContainerStyle>
            </ItemsControl>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="BackgroundTemplate" Value="{x:Null}">
              <Setter TargetName="BackgroundPresenter" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="PageBackgroundTemplate" Value="{x:Null}" />
                <Condition Property="PageBackgroundTemplateSelector" Value="{x:Null}" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PagesPresenter" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="PagesPresenter" Property="ItemsSource" Value="{x:Null}" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ItemEditorControl}" TargetType="{x:Type dxdiag:ItemEditorControl}">
    <Setter Property="Foreground" Value="#FF6E6E6E" />
    <Setter Property="BorderBrush" Value="#FFB9B9B9" />
    <Setter Property="Background" Value="White" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdiag:ItemEditorControl}">
          <Grid Background="{TemplateBinding Background}">
            <Rectangle Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" StrokeDashArray="2,2" />
            <TextBox dx:ThemeManager.ThemeName="None" BorderThickness="0" Background="Transparent" x:Name="Editor" TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True" Foreground="{TemplateBinding Foreground}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.Native.ShapeGeometryPresenter}" TargetType="{x:Type dxdiagn:ShapeGeometryPresenter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdiagn:ShapeGeometryPresenter}">
          <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ShapePresenter}" TargetType="{x:Type dxdiag:ShapePresenter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxdiag:ShapePresenter}">
          <TextBlock x:Name="Text" Text="{TemplateBinding Content}" TextWrapping="Wrap" Margin="{TemplateBinding ContentPadding}" Background="{TemplateBinding ContentBackground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" UseLayoutRounding="False" />
          <ControlTemplate.Triggers>
            <Trigger Property="ShowContent" Value="False">
              <Setter TargetName="Text" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
              <Setter TargetName="Text" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Content" Value="">
              <Setter TargetName="Text" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>