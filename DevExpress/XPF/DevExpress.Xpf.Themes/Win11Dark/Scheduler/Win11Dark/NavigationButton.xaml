<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxsch="http://schemas.devexpress.com/winfx/2008/xaml/scheduler" xmlns:dxschi="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/internal" xmlns:dxscht="http://schemas.devexpress.com/winfx/2008/xaml/scheduler/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Dark.v24.1;component/Scheduler/Win11Dark/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <ControlTemplate x:Key="NavigationButtonTemplate" TargetType="{x:Type dxschi:VisualNavigationButton}">
    <Grid x:Name="Root">
      <Border x:Name="IsDefault" Background="#FF303030" BorderBrush="#FF494949" BorderThickness="1" CornerRadius="32" cs:id="Border_0000" x:Uid="@Background=Button.SimpleButtonBackground;BorderBrush=Button.SimpleButtonBorder">
        <Border.Effect>
          <DropShadowEffect BlurRadius="15" Color="#0D000000" ShadowDepth="0" cs:id="DropShadowEffect_0000"></DropShadowEffect>
        </Border.Effect>
      </Border>
      <Path x:Name="Backward" Fill="#FFB8B8B8" Opacity="0" Style="{StaticResource UIShape.Left}" cs:id="Path_0000" x:Uid="@Fill=Foreground.Secondary" />
      <Path x:Name="Forward" Fill="#FFB8B8B8" Opacity="0" Style="{StaticResource UIShape.Right}" cs:id="Path_0001" x:Uid="@Fill=Foreground.Secondary" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#17FFFFFF" cs:id="ColorAnimation_0000" x:Uid="@To=Button.HoverBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#26FFFFFF" cs:id="ColorAnimation_0002" x:Uid="@To=Button.SimpleButtonHoverBorder" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Forward" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFFFFFFF" cs:id="ColorAnimation_0003" x:Uid="@To=Foreground.Primary" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Backward" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFFFFFFF" cs:id="ColorAnimation_0004" x:Uid="@To=Foreground.Primary" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#0FFFFFFF" cs:id="ColorAnimation_0001" x:Uid="@To=Button.PressedBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#1FFFFFFF" cs:id="ColorAnimation_0005" x:Uid="@To=Button.SimpleButtonPressedBorder" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Forward" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFABABAB" cs:id="ColorAnimation_0006" x:Uid="@To=Foreground.Muted" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Backward" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFABABAB" cs:id="ColorAnimation_0007" x:Uid="@To=Foreground.Muted" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="DirectionStates">
          <VisualState x:Name="Backward">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Backward" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Forward">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Forward" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <!-- Prev and Next -->
  <Style x:Key="{dxscht:SchedulerViewThemeKey ResourceKey=NavigationButtonPrevStyle}" TargetType="{x:Type dxschi:VisualNavigationButton}">
    <Setter Property="Content" Value="{Binding Source={StaticResource SchedulerStringIdConverter}, ConverterParameter=Caption_PrevAppointment, Converter={StaticResource SchedulerStringIdConverter}}" />
    <Setter Property="Direction" Value="Backward" />
    <Setter Property="Height" Value="26" />
    <Setter Property="Margin" Value="4" />
    <Setter Property="Template" Value="{StaticResource NavigationButtonTemplate}" />
    <Setter Property="Width" Value="26" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="MinWidth" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxscht:SchedulerViewThemeKey ResourceKey=NavigationButtonNextStyle}" TargetType="{x:Type dxschi:VisualNavigationButton}">
    <Setter Property="Content" Value="{Binding Source={StaticResource SchedulerStringIdConverter}, ConverterParameter=Caption_NextAppointment, Converter={StaticResource SchedulerStringIdConverter}}" />
    <Setter Property="Direction" Value="Forward" />
    <Setter Property="Height" Value="26" />
    <Setter Property="Margin" Value="4" />
    <Setter Property="Template" Value="{StaticResource NavigationButtonTemplate}" />
    <Setter Property="Width" Value="26" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="MinWidth" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- Button Pair -->
  <DataTemplate x:Key="{dxscht:SchedulerViewThemeKey ResourceKey=NavigationButtonsPair}">
    <Grid>
      <dxschi:VisualNavigationButton ButtonInfo="{Binding PrevNavButtonInfo}" HorizontalAlignment="Left" Style="{Binding Path=View.NavigationButtonPrevStyle}" VerticalAlignment="Stretch" />
      <dxschi:VisualNavigationButton ButtonInfo="{Binding NextNavButtonInfo}" HorizontalAlignment="Right" Style="{Binding Path=View.NavigationButtonNextStyle}" VerticalAlignment="Stretch" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxscht:WeekViewThemeKey ResourceKey=NavigationButtonsPairGroupByResource}">
    <Grid>
      <dxschi:VisualNavigationButton ButtonInfo="{Binding PrevNavButtonInfo}" HorizontalAlignment="Left" Style="{Binding Path=View.NavigationButtonPrevStyle}" VerticalAlignment="Stretch" />
      <dxschi:VisualNavigationButton ButtonInfo="{Binding NextNavButtonInfo}" HorizontalAlignment="Right" Style="{Binding Path=View.NavigationButtonNextStyle}" VerticalAlignment="Stretch" />
    </Grid>
  </DataTemplate>
</ResourceDictionary>