<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxri="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/internal" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Dark.v24.1;component/Ribbon/Win11Dark/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarDropDownButtonTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Grid x:Name="Root" Background="Transparent" Margin="0,0,1,1" cs:id="Grid_0000">
      <Border x:Name="IsDefault" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="4" cs:id="Border_0001" />
      <Path x:Name="Content" Fill="#FFB8B8B8" Margin="10,8,10,8" Style="{StaticResource UIShape.QuickAccessToolbar.DropDown}" cs:id="Path_0000" x:Uid="@Fill=Foreground.Secondary" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="State">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Hover">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#17FFFFFF" cs:id="ColorAnimation_0000" x:Uid="@To=Button.HoverBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#17FFFFFF" cs:id="ColorAnimation_0001" x:Uid="@To=Button.HoverBorder" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFFFFFFF" cs:id="ColorAnimation_0002" x:Uid="@To=Foreground.Primary" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#0FFFFFFF" cs:id="ColorAnimation_0003" x:Uid="@To=Button.PressedBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#0FFFFFFF" cs:id="ColorAnimation_0004" x:Uid="@To=Button.PressedBorder" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFABABAB" cs:id="ColorAnimation_0005" x:Uid="@To=Foreground.Muted" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF60CDFF" cs:id="ColorAnimation_0006" x:Uid="@To=Button.CheckedBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF60CDFF" cs:id="ColorAnimation_0007" x:Uid="@To=Button.CheckedBorder" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF000000" cs:id="ColorAnimation_0008" x:Uid="@To=Foreground.Alt" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="Root" Value="44" />
        <Setter Property="MinWidth" TargetName="Root" Value="44" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:QuickAccessToolbarThemeKey ResourceKey=RibbonToolbarDropDownButtonTemplateInFooter}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Grid x:Name="Root" Background="Transparent" Margin="0,0,1,1" cs:id="Grid_0000">
      <Border x:Name="IsDefault" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="4" cs:id="Border_0001" />
      <Path x:Name="Content" Fill="#FFB8B8B8" Margin="10,8,10,8" Style="{StaticResource UIShape.QuickAccessToolbar.DropDown}" cs:id="Path_0000" x:Uid="@Fill=Foreground.Secondary" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="State">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Hover">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#17FFFFFF" cs:id="ColorAnimation_0000" x:Uid="@To=Button.HoverBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#17FFFFFF" cs:id="ColorAnimation_0001" x:Uid="@To=Button.HoverBorder" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFFFFFFF" cs:id="ColorAnimation_0002" x:Uid="@To=Foreground.Primary" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#0FFFFFFF" cs:id="ColorAnimation_0003" x:Uid="@To=Button.PressedBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#0FFFFFFF" cs:id="ColorAnimation_0004" x:Uid="@To=Button.PressedBorder" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFABABAB" cs:id="ColorAnimation_0005" x:Uid="@To=Foreground.Muted" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF60CDFF" cs:id="ColorAnimation_0006" x:Uid="@To=Button.CheckedBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF60CDFF" cs:id="ColorAnimation_0007" x:Uid="@To=Button.CheckedBorder" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF000000" cs:id="ColorAnimation_0008" x:Uid="@To=Foreground.Alt" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="Root" Value="44" />
        <Setter Property="MinWidth" TargetName="Root" Value="44" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>