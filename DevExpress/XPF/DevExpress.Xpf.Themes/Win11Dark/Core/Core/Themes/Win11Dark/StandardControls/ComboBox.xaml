<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Dark.v24.1;component/Core/Core/Themes/UICore.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Dark.v24.1;component/Core/Core/Themes/Win11Dark/StandardControls/ComboBoxItem.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Dark.v24.1;component/Core/Core/Themes/Win11Dark/StandardControls/TextBox.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Dark.v24.1;component/Core/Core/Editors/Themes/Win11Dark/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <Style x:Key="FocusVisualBorder">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border BorderBrush="Black" BorderThickness="2" CornerRadius="6" Margin="-3" cs:id="Border_0000" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxDropDownButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="Background" Value="Transparent" cs:id="Setter_0000" />
    <Setter Property="ClickMode" Value="Press" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Foreground" Value="#FFFFFFFF" cs:id="Setter_0001" x:Uid="@Value=Foreground.Primary" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnContent" Width="*" />
              <ColumnDefinition x:Name="ColumnButton" Width="30" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="1">
              <Border x:Name="IsDefault" Background="{TemplateBinding Background}" CornerRadius="3" Margin="3" />
              <Path x:Name="Content" Fill="#FFB8B8B8" Style="{StaticResource UIShape.Down}" cs:id="Path_0000" x:Uid="@Fill=Foreground.Secondary" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="Content" Value="#FFFFFFFF" cs:id="Setter_0005" x:Uid="@Value=Foreground.Primary" />
              <Setter Property="Background" TargetName="IsDefault" Value="#17FFFFFF" cs:id="Setter_0002" x:Uid="@Value=Button.HoverBackground" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="Content" Value="#FFABABAB" cs:id="Setter_0006" x:Uid="@Value=Foreground.Muted" />
              <Setter Property="Background" TargetName="IsDefault" Value="#0FFFFFFF" cs:id="Setter_0003" x:Uid="@Value=Button.PressedBackground" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter Property="Fill" TargetName="Content" Value="#FFB8B8B8" cs:id="Setter_0007" x:Uid="@Value=Foreground.Secondary" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" TargetName="Root" Value="0.38" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter Property="Width" TargetName="ColumnButton" Value="42" />
              <Setter Property="Margin" TargetName="Content" Value="14" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- ReadOnly -->
  <ControlTemplate x:Key="ComboxBoxReadOnlyMode" TargetType="{x:Type ComboBox}">
    <Grid x:Name="Root">
      <Grid x:Name="PART_Editor" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Border x:Name="IsDefault" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
        <Border x:Name="PART_BottomBorder" BorderBrush="{StaticResource {dxt:CommonThemeKey ResourceKey=EditorBottomBorder}}" BorderThickness="1" CornerRadius="0,0,3,3" Height="10" VerticalAlignment="Bottom" />
        <Border Margin="2,0,2,0">
          <ContentPresenter x:Name="Content" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ToggleButton x:Name="DropDownButton" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxDropDownButton}" />
      </Grid>
      <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{TemplateBinding IsDropDownOpen}" Margin="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" Placement="Bottom" VerticalOffset="-1">
        <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Root}">
          <Border x:Name="DropDownBorder" Background="#FF2C2C2C" BorderBrush="#FF161616" BorderThickness="1" CornerRadius="8" cs:id="Border_0001" x:Uid="@Background=FlyoutBackground;BorderBrush=FlyoutBorder">
            <ScrollViewer x:Name="DropDownScrollViewer" Margin="2">
              <Grid RenderOptions.ClearTypeHint="Enabled">
                <Canvas HorizontalAlignment="Left" VerticalAlignment="Top">
                  <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                </Canvas>
                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" Margin="1" />
              </Grid>
            </ScrollViewer>
          </Border>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <!--Trigger Property="IsFocused" Value="True">
                <Setter Property="Opacity"
                        TargetName="IsDefault"
                        Value="1"/>
            </Trigger-->
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FF2C2C2C" cs:id="Setter_0010" x:Uid="@Value=Editor.DisableBorder" />
        <Setter Property="Background" TargetName="IsDefault" Value="#0FFFFFFF" cs:id="Setter_0011" x:Uid="@Value=Editor.DisableBackground" />
        <Setter Property="Opacity" TargetName="PART_BottomBorder" Value="0" />
        <Setter Property="TextElement.Foreground" TargetName="Content" Value="#FF656565" cs:id="Setter_0007" x:Uid="@Value=Foreground.Disabled" />
      </Trigger>
      <Trigger Property="IsReadOnly" Value="True">
        <Setter Property="TextElement.Foreground" TargetName="Content" Value="#FFFFFFFF" cs:id="Setter_0000" x:Uid="@Value=Foreground.Primary" />
        <Setter Property="Opacity" TargetName="PART_BottomBorder" Value="0" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinWidth" TargetName="DropDownButton" Value="42" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- ComboBox -->
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.ComboBox}" TargetType="{x:Type ComboBox}">
    <Setter Property="Background" Value="#FF292929" cs:id="Setter_0000" x:Uid="@Value=Editor.Background" />
    <Setter Property="BorderBrush" Value="#FF2E2E2E" cs:id="Setter_0001" x:Uid="@Value=Editor.Border" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Foreground" Value="#FFB8B8B8" cs:id="Setter_0002" x:Uid="@Value=Foreground.Secondary" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
    <Setter Property="Padding" Value="6,4,26,4" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualBorder}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid x:Name="Root">
            <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{TemplateBinding IsDropDownOpen}" Margin="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" Placement="Bottom" VerticalOffset="-1">
              <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Root}">
                <Border x:Name="DropDownBorder" Background="#FF2C2C2C" BorderBrush="#FF161616" BorderThickness="1" CornerRadius="8" cs:id="Border_0001" x:Uid="@Background=FlyoutBackground;BorderBrush=FlyoutBorder">
                  <ScrollViewer x:Name="DropDownScrollViewer" Margin="2">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                      <Canvas HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                      </Canvas>
                      <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" Margin="1" />
                    </Grid>
                  </ScrollViewer>
                </Border>
              </Grid>
            </Popup>
            <TextBox x:Name="PART_EditableTextBox" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" Style="{StaticResource {dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.TextBox}}" Text="{TemplateBinding SelectionBoxItem}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            <ToggleButton x:Name="DropDownButton" Focusable="False" HorizontalAlignment="Right" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxDropDownButton}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True" />
            <Trigger Property="HasItems" Value="False">
              <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="IsEnabled" TargetName="DropDownButton" Value="False" />
              <Setter Property="IsEnabled" TargetName="PART_EditableTextBox" Value="False" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
              <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
              <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter Property="MinWidth" TargetName="DropDownButton" Value="42" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="#FFFFFFFF" cs:id="Setter_0005" x:Uid="@Value=Foreground.Primary" />
        <Setter Property="Background" Value="#FF2F2F2F" cs:id="Setter_0008" x:Uid="@Value=Editor.HoverBackground" />
      </Trigger>
      <Trigger Property="IsEditable" Value="False">
        <Setter Property="Template" Value="{StaticResource ComboxBoxReadOnlyMode}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsEditable" Value="True" />
          <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Padding" Value="12,12,44,12" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsEditable" Value="False" />
          <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Padding" Value="14" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>