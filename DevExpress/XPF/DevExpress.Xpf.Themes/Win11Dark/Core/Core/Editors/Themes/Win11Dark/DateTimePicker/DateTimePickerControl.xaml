<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Dark.v24.1;component/Core/Core/Editors/Themes/Generic/DateTimePicker.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Dark.v24.1;component/Core/Core/Editors/Themes/Win11Dark/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <ControlTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=ItemTemplate}" TargetType="{x:Type dxe:DateTimePickerItem}">
    <ControlTemplate.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="true" />
          <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="true" />
        </MultiDataTrigger.Conditions>
        <MultiDataTrigger.EnterActions>
          <BeginStoryboard x:Name="expandedStateStoryboard">
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="itemBackground" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Color" To="#FFFFFFFF" cs:id="ColorAnimation_0000" x:Uid="@To=Foreground.Primary" />
            </Storyboard>
          </BeginStoryboard>
        </MultiDataTrigger.EnterActions>
        <MultiDataTrigger.ExitActions>
          <RemoveStoryboard BeginStoryboardName="expandedStateStoryboard" />
        </MultiDataTrigger.ExitActions>
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="false" />
          <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="true" />
        </MultiDataTrigger.Conditions>
        <MultiDataTrigger.EnterActions>
          <BeginStoryboard x:Name="hiddenStateStoryboard">
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="itemBackground" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Opacity" To="0.8" />
              <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Color" To="#FFFFFFFF" cs:id="ColorAnimation_0001" x:Uid="@To=Foreground.Primary" />
            </Storyboard>
          </BeginStoryboard>
        </MultiDataTrigger.EnterActions>
        <MultiDataTrigger.ExitActions>
          <RemoveStoryboard BeginStoryboardName="hiddenStateStoryboard" />
        </MultiDataTrigger.ExitActions>
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="true" />
          <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="false" />
        </MultiDataTrigger.Conditions>
        <MultiDataTrigger.EnterActions>
          <BeginStoryboard x:Name="instantlyExpandedStateStoryboard">
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="itemBackground" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Opacity" To="1" />
              <ColorAnimation Duration="0:0:0.0" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Color" To="#FFFFFFFF" cs:id="ColorAnimation_0002" x:Uid="@To=Foreground.Primary" />
            </Storyboard>
          </BeginStoryboard>
        </MultiDataTrigger.EnterActions>
        <MultiDataTrigger.ExitActions>
          <RemoveStoryboard BeginStoryboardName="instantlyExpandedStateStoryboard" />
        </MultiDataTrigger.ExitActions>
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="false" />
          <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="false" />
        </MultiDataTrigger.Conditions>
        <MultiDataTrigger.EnterActions>
          <BeginStoryboard x:Name="instantlyHiddenStateStoryboard">
            <Storyboard>
              <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="itemBackground" Storyboard.TargetProperty="Opacity" To="0" />
              <DoubleAnimation Duration="0:0:0.0" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Opacity" To="0.8" />
              <ColorAnimation Duration="0:0:0.0" Storyboard.TargetName="foregroundColor" Storyboard.TargetProperty="Color" To="#FFFFFFFF" cs:id="ColorAnimation_0003" x:Uid="@To=Foreground.Primary" />
            </Storyboard>
          </BeginStoryboard>
        </MultiDataTrigger.EnterActions>
        <MultiDataTrigger.ExitActions>
          <RemoveStoryboard BeginStoryboardName="instantlyHiddenStateStoryboard" />
        </MultiDataTrigger.ExitActions>
      </MultiDataTrigger>
      <Trigger Property="IsActive" Value="True">
        <Setter Property="TextBlock.Foreground" TargetName="content" Value="#FFFFFFFF" cs:id="Setter_0000" x:Uid="@Value=Foreground.Primary" />
      </Trigger>
    </ControlTemplate.Triggers>
    <Grid Background="Transparent" Opacity="{Binding Path=IsFake, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}" cs:id="Grid_0000">
      <Grid x:Name="itemBackground" Margin="{TemplateBinding Padding}" Opacity="0">
        <Border x:Name="activeSelectedBorder" Background="#0AFFFFFF" Opacity="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToDoubleConverter}}" cs:id="Border_0000" x:Uid="@Background=ListItem.SelectionBackground">
          <Border x:Name="activeBackground" Background="#0AFFFFFF" Margin="1" cs:id="Border_0001" x:Uid="@Background=ListItem.SelectionBackground" />
        </Border>
        <Border x:Name="selectedBorder" Background="#0FFFFFFF" Opacity="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}" cs:id="Border_0002" x:Uid="@Background=ListItem.HoverBackground">
          <Border x:Name="background" Background="#0FFFFFFF" Margin="1" cs:id="Border_0003" x:Uid="@Background=ListItem.HoverBackground" />
        </Border>
      </Grid>
      <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}">
        <TextBlock.Foreground>
          <SolidColorBrush x:Name="foregroundColor" Color="#FFFFFFFF" cs:id="SolidColorBrush_0000" x:Uid="@Color=Foreground.Primary" />
        </TextBlock.Foreground>
      </ContentPresenter>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=Template}">
    <ItemsControl x:Name="ItemsControl" Background="#FF292929" BorderBrush="#FF7D7D7D" dx:FocusHelper2.Focusable="False" HorizontalAlignment="Center" ItemTemplate="{DynamicResource {dxet:DateTimePickerThemeKey ResourceKey=DateTimePickerItemTemplate}}" VirtualizingStackPanel.VirtualizationMode="Recycling" cs:id="ItemsControl_0001" x:Uid="@Background=Editor.Background;BorderBrush=Border">
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel Orientation="Horizontal" VirtualizingStackPanel.VirtualizationMode="Recycling" />
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
    </ItemsControl>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=SelectorTemplate}" TargetType="{x:Type dxe:DateTimePickerSelector}">
    <Grid>
      <Grid x:Name="SelectedItemContainer" HorizontalAlignment="Center" Opacity="{Binding Path=IsAnimated, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}" VerticalAlignment="Center">
        <dxe:DateTimePickerItem x:Name="SelectedItemContainerData" Content="{TemplateBinding SelectedItem}" ContentTemplate="{Binding Path=SelectedItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" Foreground="#FFFFFFFF" IsActive="{TemplateBinding IsExpanded}" IsExpanded="True" cs:id="DateTimePickerItem_0000" x:Uid="@Foreground=Foreground.Primary" />
      </Grid>
      <Grid x:Name="pickerSelectorContainer" HorizontalAlignment="Center" VerticalAlignment="Center">
        <dxe:DXScrollViewer CanContentScroll="True" dx:FocusHelper2.Focusable="False" IsDeferredScrollingEnabled="True" IsManipulationEnabled="False" PanningMode="None" VerticalScrollBarVisibility="Hidden" VerticalSnapPointsAlignment="Near">
          <dxe:DateTimePickerPanel x:Name="pickerPanel" />
        </dxe:DXScrollViewer>
        <Grid x:Name="selectedItemCaption" HorizontalAlignment="Center" Opacity="{Binding Path=IsAnimated, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}" VerticalAlignment="Center">
          <TextBlock x:Name="tb" Foreground="#FFFFFFFF" IsHitTestVisible="False" Margin="0,40,0,0" Opacity="0.62" Text="{Binding Path=SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DateTimePickerDataCaptionConverter}}" cs:id="TextBlock_0000" x:Uid="@Foreground=Foreground.Primary" />
        </Grid>
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsExpanded" Value="True">
        <Setter Property="Foreground" TargetName="tb" Value="#FFFFFFFF" cs:id="Setter_0000" x:Uid="@Value=Foreground.Primary" />
        <Setter Property="Opacity" TargetName="tb" Value="1" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>