<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbi="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Light.v24.1;component/Core/Core/Bars/Themes/Win11Light/UICore.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Light.v24.1;component/Core/Core/Bars/Themes/Win11Light/BarControl/BarContainerControl.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Light.v24.1;component/Core/Core/Bars/Themes/Win11Light/BarControl/BarControl.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <ControlTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=QuickCustomizationButtonTemplate}" TargetType="{x:Type dxb:BarQuickCustomizationButton}">
    <Grid x:Name="Root" Margin="1">
      <Border x:Name="IsDefault" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" CornerRadius="4" cs:id="Border_0000" />
      <Path x:Name="Content" Fill="#FF1A1A1A" HorizontalAlignment="Right" Margin="3" Style="{StaticResource UIShape.RightDown}" VerticalAlignment="Bottom" cs:id="Path_0000" x:Uid="@Fill=Foreground.Primary" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#0F000000" cs:id="ColorAnimation_0000" x:Uid="@To=Button.HoverBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#0F000000" cs:id="ColorAnimation_0006" x:Uid="@To=Button.HoverBorder" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF1A1A1A" cs:id="ColorAnimation_0003" x:Uid="@To=Foreground.Primary" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#08000000" cs:id="ColorAnimation_0001" x:Uid="@To=Button.PressedBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#08000000" cs:id="ColorAnimation_0007" x:Uid="@To=Button.PressedBorder" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF626262" cs:id="ColorAnimation_0004" x:Uid="@To=Foreground.Muted" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF005FB8" cs:id="ColorAnimation_0002" x:Uid="@To=Button.CheckedBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF0058AB" cs:id="ColorAnimation_0008" x:Uid="@To=Button.CheckedBorder" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFFFFFFF" cs:id="ColorAnimation_0005" x:Uid="@To=Foreground.Alt" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="OrientationStates">
          <VisualState x:Name="Horizontal" />
          <VisualState x:Name="Vertical">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="RenderTransform">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <RotateTransform Angle="180" CenterX="3.5" CenterY="3.5" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinWidth" TargetName="Root" Value="44" />
        <Setter Property="MinHeight" TargetName="Root" Value="44" />
        <Setter Property="HorizontalAlignment" TargetName="Content" Value="Center" />
        <Setter Property="VerticalAlignment" TargetName="Content" Value="Center" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=QuickCustomizationButtonInMainMenuTemplate}" TargetType="{x:Type dxb:BarQuickCustomizationButton}">
    <Grid x:Name="Root" Margin="1">
      <Border x:Name="IsDefault" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" cs:id="Border_0000" />
      <Path x:Name="Content" Fill="#FF1A1A1A" HorizontalAlignment="Right" Margin="3" Style="{StaticResource UIShape.RightDown}" VerticalAlignment="Bottom" cs:id="Path_0000" x:Uid="@Fill=Foreground.Primary" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#0F000000" cs:id="ColorAnimation_0000" x:Uid="@To=ListItem.HoverBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#0F000000" cs:id="ColorAnimation_0006" x:Uid="@To=ListItem.HoverBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF1A1A1A" cs:id="ColorAnimation_0003" x:Uid="@To=Foreground.Primary" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#0A000000" cs:id="ColorAnimation_0001" x:Uid="@To=ListItem.SelectionBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#0A000000" cs:id="ColorAnimation_0007" x:Uid="@To=ListItem.SelectionBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF1A1A1A" cs:id="ColorAnimation_0004" x:Uid="@To=Foreground.Primary" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#0A000000" cs:id="ColorAnimation_0002" x:Uid="@To=ListItem.SelectionBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#0A000000" cs:id="ColorAnimation_0008" x:Uid="@To=ListItem.SelectionBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF1A1A1A" cs:id="ColorAnimation_0005" x:Uid="@To=Foreground.Primary" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="OrientationStates">
          <VisualState x:Name="Horizontal" />
          <VisualState x:Name="Vertical">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="RenderTransform">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <RotateTransform Angle="180" CenterX="3.5" CenterY="3.5" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinWidth" TargetName="Root" Value="44" />
        <Setter Property="MinHeight" TargetName="Root" Value="44" />
        <Setter Property="HorizontalAlignment" TargetName="Content" Value="Center" />
        <Setter Property="VerticalAlignment" TargetName="Content" Value="Center" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- General -->
  <ControlTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=DragWidgetTemplate}" TargetType="{x:Type dxb:DragWidget}">
    <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
      <Path x:Name="Content" Margin="3" Style="{StaticResource UIShape.DragWidget}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="Root" Value="44" />
        <Setter Property="MinWidth" TargetName="Root" Value="44" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- SizeGrip -->
  <ControlTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=ThumbTemplate}" TargetType="{x:Type Thumb}">
    <Border x:Name="Root" Background="#FFF9F9F9" cs:id="Border_0000" x:Uid="@Background=WindowBackground">
      <Path x:Name="Content" Fill="#FF1A1A1A" HorizontalAlignment="Right" Margin="3" Style="{StaticResource UIShape.SizeGrip}" VerticalAlignment="Bottom" cs:id="Path_0000" x:Uid="@Fill=Foreground.Primary" />
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="Root" Value="44" />
        <Setter Property="MinWidth" TargetName="Root" Value="44" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- DropIndicator -->
  <ControlTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=DropIndicatorTemplate}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="PART_Content">
      <Grid.RenderTransform>
        <TranslateTransform X="-3" Y="0" />
      </Grid.RenderTransform>
      <Border Background="#FF1A1A1A" BorderBrush="#FFF9F9F9" BorderThickness="1" Height="3" VerticalAlignment="Top" Width="9" cs:id="Border_0001" x:Uid="@Background=Foreground.Primary;BorderBrush=WindowBackground" />
      <Border Background="#FF1A1A1A" BorderBrush="#FFF9F9F9" BorderThickness="1" Height="3" VerticalAlignment="Bottom" Width="9" cs:id="Border_0002" x:Uid="@Background=Foreground.Primary;BorderBrush=WindowBackground" />
      <dx:PixelSnapper HorizontalAlignment="Center" Margin="0,2,0,2">
        <Border Background="#FF1A1A1A" BorderBrush="#FFF9F9F9" BorderThickness="1,0,1,0" Width="3" cs:id="Border_0003" x:Uid="@Background=Foreground.Primary;BorderBrush=WindowBackground" />
      </dx:PixelSnapper>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="Orientation">
          <VisualState x:Name="Horizontal">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="RenderTransform">
                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                  <DiscreteObjectKeyFrame.Value>
                    <TransformGroup x:Name="HorizontalTransform">
                      <TranslateTransform X="-3" Y="0" />
                    </TransformGroup>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Vertical">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="RenderTransform">
                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                  <DiscreteObjectKeyFrame.Value>
                    <TransformGroup x:Name="VerticalTransform">
                      <RotateTransform Angle="-90" CenterX="0.5" CenterY="0.5" />
                      <TranslateTransform X="0" Y="3" />
                    </TransformGroup>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <!-- General -->
  <ControlTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=StatusBarContentTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=MainMenuContentTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=BarContentTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" />
  </ControlTemplate>
  <!-- Styles -->
  <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=BarContentStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="FontSize" Value="12" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="Foreground" Value="#FF1A1A1A" cs:id="Setter_0000" x:Uid="@Value=Foreground.Primary" />
  </Style>
  <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=MenuContentStyle}" BasedOn="{StaticResource {dxbt:BarControlThemeKey ResourceKey=BarContentStyle}}" TargetType="{x:Type ContentControl}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Foreground" Value="#FF1A1A1A" cs:id="Setter_0000" x:Uid="@Value=Foreground.Primary" />
  </Style>
  <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=MainMenuContentStyle}" BasedOn="{StaticResource {dxbt:BarControlThemeKey ResourceKey=BarContentStyle}}" TargetType="{x:Type ContentControl}" />
  <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=StatusBarContentStyle}" BasedOn="{StaticResource {dxbt:BarControlThemeKey ResourceKey=BarContentStyle}}" TargetType="{x:Type ContentControl}" />
</ResourceDictionary>