<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Light.v24.1;component/Core/Core/Themes/UICore.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Light.v24.1;component/Core/Core/Editors/Themes/Win11Light/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <SolidColorBrush x:Key="{dxt:CommonThemeKey ResourceKey=ReadOnlyBackgroundBrush}" Color="Transparent" Opacity="1" />
  <Style x:Key="FocusVisualBorder">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border BorderBrush="Black" BorderThickness="2" CornerRadius="6" Margin="-3" cs:id="Border_0000" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.TextBox}" TargetType="{x:Type TextBox}">
    <Setter Property="dx:ScrollBarExtensions.ScrollBehavior" Value="{dx:TextBoxScrollBehavior}" />
    <Setter Property="AllowDrop" Value="True" />
    <Setter Property="Background" Value="#FFFFFFFF" cs:id="Setter_0000" x:Uid="@Value=Editor.Background" />
    <Setter Property="BorderBrush" Value="#FFEBEBEB" cs:id="Setter_0001" x:Uid="@Value=Editor.Border" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="CaretBrush" Value="#FF1A1A1A" cs:id="Setter_0002" x:Uid="@Value=Foreground.Primary" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualBorder}" />
    <Setter Property="Foreground" Value="#FF646464" cs:id="Setter_0003" x:Uid="@Value=Foreground.Secondary" />
    <Setter Property="Padding" Value="6,4,4,4" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="SelectionBrush" Value="#FF005FBA" cs:id="Setter_0004" x:Uid="@Value=Accent" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Grid>
            <Border x:Name="IsDefault" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
            <Border x:Name="PART_BottomBorder" BorderBrush="{StaticResource {dxt:CommonThemeKey ResourceKey=EditorBottomBorder}}" BorderThickness="1" CornerRadius="0,0,3,3" Height="10" VerticalAlignment="Bottom" />
            <Border x:Name="PART_FocusedBorder" Background="{StaticResource {dxt:CommonThemeKey ResourceKey=EditorFocusedBorder}}" CornerRadius="4" Height="10" VerticalAlignment="Bottom" Visibility="Collapsed" />
            <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="BorderBrush" Value="#FFF0F0F0" cs:id="Setter_0010" x:Uid="@Value=Editor.DisableBorder" />
              <Setter Property="Background" Value="#FFFDFDFD" cs:id="Setter_0011" x:Uid="@Value=Editor.DisableBackground" />
              <Setter Property="Opacity" TargetName="PART_BottomBorder" Value="0" />
              <Setter Property="Foreground" Value="#FFA2A2A2" cs:id="Setter_0007" x:Uid="@Value=Foreground.Disabled" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
              <Setter Property="Opacity" TargetName="PART_BottomBorder" Value="0" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsFocused" Value="True" />
                <Condition Property="IsReadOnly" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Visibility" TargetName="PART_FocusedBorder" Value="Visible" />
              <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <!--Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground"
                        Value="$Foreground.Primary"
                        cs:id="Setter_0005"/>
                <Setter Property="Background"
                        Value="$Editor.HoverBackground"
                        cs:id="Setter_0008"/>
            </Trigger-->
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsFocused" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Foreground" Value="#FF1A1A1A" cs:id="Setter_0005" x:Uid="@Value=Foreground.Primary" />
        <Setter Property="Background" Value="#FFF9F9F9" cs:id="Setter_0008" x:Uid="@Value=Editor.HoverBackground" />
      </MultiTrigger>
      <Trigger Property="IsMouseCaptured" Value="True">
        <Setter Property="Foreground" Value="#FF626262" cs:id="Setter_0006" x:Uid="@Value=Foreground.Muted" />
        <Setter Property="Background" Value="#FFF9F9F9" cs:id="Setter_0012" x:Uid="@Value=Editor.PressedBackground" />
        <Setter Property="BorderBrush" Value="#FFEBEBEB" cs:id="Setter_0013" x:Uid="@Value=Editor.PressedBorder" />
      </Trigger>
      <Trigger Property="IsReadOnly" Value="True">
        <Setter Property="Foreground" Value="#FF1A1A1A" cs:id="Setter_0009" x:Uid="@Value=Foreground.Primary" />
        <Setter Property="Background" Value="{DynamicResource {dxt:CommonThemeKey ResourceKey=ReadOnlyBackgroundBrush}}" />
      </Trigger>
      <!--Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush"
                        Value="$Accent"
                        cs:id="Setter_0006"/>
            </Trigger-->
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" Value="13" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>