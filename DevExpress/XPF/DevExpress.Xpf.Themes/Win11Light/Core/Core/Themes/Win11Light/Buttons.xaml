<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxbi="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Light.v24.1;component/Core/Core/Themes/UICore.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Light.v24.1;component/Core/Core/Editors/Themes/Win11Light/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <dxi:SimpleButtonsCornerRadiusConverter x:Key="cornerRadiusConverter" />
  <!-- <dxi:SimpleButtonsBorderThicknessConverter x:Key="thicknessConverter"/> -->
  <!-- General -->
  <dxi:RenderTemplate x:Key="{dxt:DropDownButtonThemeKey ResourceKey=BorderTemplate}">
    <dxi:RenderPanel>
      <dxi:RenderBorder Name="IsDefault" Background="#FFFFFFFF" BorderBrush="#FFE3E3E3" cs:id="RenderBorder_0001" x:Uid="@Background=Button.SimpleButtonBackground;BorderBrush=Button.SimpleButtonBorder" />
      <dxi:RenderBorder Name="PART_BottomBorder" BorderBrush="{StaticResource {dxt:CommonThemeKey ResourceKey=ButtonBottomBorder}}" VerticalAlignment="Bottom" />
      <dxi:RenderBorder Name="IsDefaulted" BorderBrush="#FF005FBA" Visibility="Collapsed" cs:id="RenderBorder_0002" x:Uid="@BorderBrush=Accent" />
    </dxi:RenderPanel>
    <dxi:RenderTemplate.Triggers>
      <dxi:RenderBinding DependencyProperty="{x:Static dx:SimpleButton.BottomBorderThicknessProperty}" TargetName="PART_BottomBorder" TargetProperty="BorderThickness" ValueSource="TemplatedParent" />
      <dxi:RenderBinding DependencyProperty="{x:Static dx:SimpleButton.ActualHeightProperty}" TargetName="PART_BottomBorder" TargetProperty="Height" ValueSource="TemplatedParent" />
      <dxi:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="MinWidth" TargetName="IsDefault" Value="44" />
        <dxi:RenderSetter Property="MinHeight" TargetName="IsDefault" Value="44" />
      </dxi:RenderTrigger>
      <dxi:RenderStateGroup Name="DefaultedStates">
        <dxi:RenderStateTrigger Name="NotDefaulted">
          <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Collapsed" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="IsDefaulted">
          <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Visible" />
        </dxi:RenderStateTrigger>
      </dxi:RenderStateGroup>
      <dxi:RenderStateGroup Name="VisualStates">
        <dxi:RenderStateTrigger Name="Normal">
          <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="#FFFFFFFF" cs:id="RenderSetter_0000" x:Uid="@Value=Button.SimpleButtonBackground" />
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FFE3E3E3" cs:id="RenderSetter_0004" x:Uid="@Value=Button.SimpleButtonBorder" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="MouseOver">
          <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="#0F000000" cs:id="RenderSetter_0001" x:Uid="@Value=Button.HoverBackground" />
          <dxi:RenderSetter Property="BorderThickness" TargetName="IsDefault" Value="1" />
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FFD6D6D6" cs:id="RenderSetter_0005" x:Uid="@Value=Button.SimpleButtonHoverBorder" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="Pressed">
          <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="#08000000" cs:id="RenderSetter_0002" x:Uid="@Value=Button.PressedBackground" />
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FFEBEBEB" cs:id="RenderSetter_0006" x:Uid="@Value=Button.SimpleButtonPressedBorder" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="Checked">
          <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="#FF005FB8" cs:id="RenderSetter_0003" x:Uid="@Value=Button.CheckedBackground" />
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FF0058AB" cs:id="RenderSetter_0007" x:Uid="@Value=Button.CheckedBorder" />
        </dxi:RenderStateTrigger>
      </dxi:RenderStateGroup>
      <!-- APPEARANCE BEGIN -->
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.BackgroundProperty}" TargetName="IsDefault" TargetProperty="Background" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition DependencyProperty="{x:Static dx:SimpleButton.IsMouseOverProperty}" Value="False" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.BackgroundProperty}" TargetName="IsDefault" TargetProperty="Background" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition DependencyProperty="{x:Static dx:SimpleButton.IsMouseOverProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:SimpleButtonsAppearanceHelper.IsBackgroundSetStyleTriggerProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.BorderBrushProperty}" TargetName="IsDefault" TargetProperty="BorderBrush" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderBrushProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.BorderThicknessProperty}" TargetName="IsDefault" TargetProperty="BorderThickness" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.CornerRadiusProperty}" TargetName="IsDefault" TargetProperty="CornerRadius" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.CornerRadiusProperty}" TargetName="PART_BottomBorder" TargetProperty="CornerRadius" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.CornerRadiusProperty}" TargetName="IsDefaulted" TargetProperty="CornerRadius" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <!-- APPEARANCE END -->
    </dxi:RenderTemplate.Triggers>
  </dxi:RenderTemplate>
  <!-- Arrow -->
  <dxi:RenderTemplate x:Key="{dxt:DropDownButtonThemeKey ResourceKey=ArrowBorderTemplate}">
    <dxi:RenderPanel>
      <dxi:RenderBorder Name="IsDefault" Background="#FFFFFFFF" BorderBrush="#FFE3E3E3" cs:id="RenderBorder_0001" x:Uid="@Background=Button.SimpleButtonBackground;BorderBrush=Button.SimpleButtonBorder" />
      <dxi:RenderBorder Name="PART_BottomBorder" BorderBrush="{StaticResource {dxt:CommonThemeKey ResourceKey=ButtonBottomBorder}}" VerticalAlignment="Bottom" />
      <dxi:RenderBorder Name="IsDefaulted" BorderBrush="#FF005FBA" Visibility="Collapsed" cs:id="RenderBorder_0002" x:Uid="@BorderBrush=Accent" />
    </dxi:RenderPanel>
    <dxi:RenderTemplate.Triggers>
      <dxi:RenderBinding DependencyProperty="{x:Static dx:SimpleButton.BottomBorderThicknessProperty}" TargetName="PART_BottomBorder" TargetProperty="BorderThickness" ValueSource="TemplatedParent" />
      <dxi:RenderBinding DependencyProperty="{x:Static dx:SimpleButton.ActualHeightProperty}" TargetName="PART_BottomBorder" TargetProperty="Height" ValueSource="TemplatedParent" />
      <dxi:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="MinWidth" TargetName="IsDefault" Value="44" />
        <dxi:RenderSetter Property="MinHeight" TargetName="IsDefault" Value="44" />
      </dxi:RenderTrigger>
      <!-- Fix Arrow Border When Arrow in Vertical Axis -->
      <dxi:RenderTrigger DependencyProperty="{x:Static dx:DropDownButtonBase.ArrowAlignmentProperty}" Value="Bottom" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="Height" TargetName="PART_BottomBorder" Value="10" cs:id="RenderSetter_0008" />
        <dxi:RenderSetter Property="MinHeight" TargetName="IsDefault" Value="16" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dx:DropDownButtonBase.ArrowAlignmentProperty}" Value="Top" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="Visibility" TargetName="PART_BottomBorder" Value="Collapsed" />
        <dxi:RenderSetter Property="MinHeight" TargetName="IsDefault" Value="16" />
      </dxi:RenderTrigger>
      <!--// Fix Arrow Border When Arrow in Vertical Axis -->
      <dxi:RenderStateGroup Name="DefaultedStates">
        <dxi:RenderStateTrigger Name="NotDefaulted">
          <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Collapsed" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="IsDefaulted">
          <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Visible" />
        </dxi:RenderStateTrigger>
      </dxi:RenderStateGroup>
      <dxi:RenderStateGroup Name="VisualStates">
        <dxi:RenderStateTrigger Name="Normal">
          <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="#FFFFFFFF" cs:id="RenderSetter_0000" x:Uid="@Value=Button.SimpleButtonBackground" />
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FFE3E3E3" cs:id="RenderSetter_0004" x:Uid="@Value=Button.SimpleButtonBorder" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="MouseOver">
          <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="Transparent" cs:id="RenderSetter_0001" />
          <dxi:RenderSetter Property="BorderThickness" TargetName="IsDefault" Value="1" />
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FFD6D6D6" cs:id="RenderSetter_0005" x:Uid="@Value=Button.SimpleButtonHoverBorder" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="Pressed">
          <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="Transparent" cs:id="RenderSetter_0002" />
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FFEBEBEB" cs:id="RenderSetter_0006" x:Uid="@Value=Button.SimpleButtonPressedBorder" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="Checked">
          <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="#FF005FB8" cs:id="RenderSetter_0003" x:Uid="@Value=Button.CheckedBackground" />
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FF0058AB" cs:id="RenderSetter_0007" x:Uid="@Value=Button.CheckedBorder" />
        </dxi:RenderStateTrigger>
      </dxi:RenderStateGroup>
      <!-- APPEARANCE BEGIN -->
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ArrowBackgroundProperty}" TargetName="IsDefault" TargetProperty="Background" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasArrowBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition DependencyProperty="{x:Static dx:SplitButton.IsMouseOverArrowProperty}" Value="False" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ArrowBackgroundProperty}" TargetName="IsDefault" TargetProperty="Background" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition DependencyProperty="{x:Static dx:SimpleButton.IsMouseOverProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:SimpleButtonsAppearanceHelper.IsArrowBackgroundSetStyleTriggerProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ArrowBorderBrushProperty}" TargetName="IsDefault" TargetProperty="BorderBrush" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasArrowBorderBrushProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ArrowBorderThicknessProperty}" TargetName="IsDefault" TargetProperty="BorderThickness" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasArrowBorderThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ArrowCornerRadiusProperty}" TargetName="IsDefault" TargetProperty="CornerRadius" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasArrowCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ArrowCornerRadiusProperty}" TargetName="PART_BottomBorder" TargetProperty="CornerRadius" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasArrowCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ArrowCornerRadiusProperty}" TargetName="IsDefaulted" TargetProperty="CornerRadius" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasArrowCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <!-- APPEARANCE END -->
    </dxi:RenderTemplate.Triggers>
  </dxi:RenderTemplate>
  <!-- Content -->
  <dxi:RenderTemplate x:Key="{dxt:DropDownButtonThemeKey ResourceKey=ContentBorderTemplate}">
    <dxi:RenderPanel>
      <dxi:RenderBorder Name="IsDefault" Background="#FFFFFFFF" BorderBrush="#FFE3E3E3" cs:id="RenderBorder_0001" x:Uid="@Background=Button.SimpleButtonBackground;BorderBrush=Button.SimpleButtonBorder" />
      <dxi:RenderBorder Name="PART_BottomBorder" BorderBrush="{StaticResource {dxt:CommonThemeKey ResourceKey=ButtonBottomBorder}}" VerticalAlignment="Bottom" />
      <dxi:RenderBorder Name="IsDefaulted" BorderBrush="#FF005FBA" Visibility="Collapsed" cs:id="RenderBorder_0002" x:Uid="@BorderBrush=Accent" />
    </dxi:RenderPanel>
    <dxi:RenderTemplate.Triggers>
      <dxi:RenderBinding DependencyProperty="{x:Static dx:SimpleButton.BottomBorderThicknessProperty}" TargetName="PART_BottomBorder" TargetProperty="BorderThickness" ValueSource="TemplatedParent" />
      <dxi:RenderBinding DependencyProperty="{x:Static dx:SimpleButton.ActualHeightProperty}" TargetName="PART_BottomBorder" TargetProperty="Height" ValueSource="TemplatedParent" />
      <dxi:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="MinWidth" TargetName="IsDefault" Value="44" />
        <dxi:RenderSetter Property="MinHeight" TargetName="IsDefault" Value="44" />
      </dxi:RenderTrigger>
      <!-- Fix Content Border When Arrow in Vertical Axis -->
      <dxi:RenderTrigger DependencyProperty="{x:Static dx:DropDownButtonBase.ArrowAlignmentProperty}" Value="Bottom" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="Visibility" TargetName="PART_BottomBorder" Value="Collapsed" cs:id="RenderSetter_0008" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dx:DropDownButtonBase.ArrowAlignmentProperty}" Value="Top" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="Height" TargetName="PART_BottomBorder" Value="10" />
      </dxi:RenderTrigger>
      <!-- // Fix Content Border When Arrow in Vertical Axis -->
      <dxi:RenderStateGroup Name="DefaultedStates">
        <dxi:RenderStateTrigger Name="NotDefaulted">
          <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Collapsed" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="IsDefaulted">
          <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Visible" />
        </dxi:RenderStateTrigger>
      </dxi:RenderStateGroup>
      <dxi:RenderStateGroup Name="VisualStates">
        <dxi:RenderStateTrigger Name="Normal">
          <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="#FFFFFFFF" cs:id="RenderSetter_0000" x:Uid="@Value=Button.SimpleButtonBackground" />
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FFE3E3E3" cs:id="RenderSetter_0004" x:Uid="@Value=Button.SimpleButtonBorder" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="MouseOver">
          <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="Transparent" cs:id="RenderSetter_0001" />
          <dxi:RenderSetter Property="BorderThickness" TargetName="IsDefault" Value="1" />
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FFD6D6D6" cs:id="RenderSetter_0005" x:Uid="@Value=Button.SimpleButtonHoverBorder" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="Pressed">
          <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="Transparent" cs:id="RenderSetter_0002" />
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FFEBEBEB" cs:id="RenderSetter_0006" x:Uid="@Value=Button.SimpleButtonPressedBorder" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="Checked">
          <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="#FF005FB8" cs:id="RenderSetter_0003" x:Uid="@Value=Button.CheckedBackground" />
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FF0058AB" cs:id="RenderSetter_0007" x:Uid="@Value=Button.CheckedBorder" />
        </dxi:RenderStateTrigger>
      </dxi:RenderStateGroup>
      <!-- APPEARANCE BEGIN -->
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.BackgroundProperty}" TargetName="IsDefault" TargetProperty="Background" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition DependencyProperty="{x:Static dx:SimpleButton.IsMouseOverProperty}" Value="False" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.BackgroundProperty}" TargetName="IsDefault" TargetProperty="Background" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition DependencyProperty="{x:Static dx:SimpleButton.IsMouseOverProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:SimpleButtonsAppearanceHelper.IsBackgroundSetStyleTriggerProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.BackgroundProperty}" TargetName="IsDefault" TargetProperty="Background" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition DependencyProperty="{x:Static dx:SplitButton.IsMouseOverArrowProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.BorderBrushProperty}" TargetName="IsDefault" TargetProperty="BorderBrush" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderBrushProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.BorderThicknessProperty}" TargetName="IsDefault" TargetProperty="BorderThickness" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ContentCornerRadiusProperty}" TargetName="IsDefault" TargetProperty="CornerRadius" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasContentCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ContentCornerRadiusProperty}" TargetName="PART_BottomBorder" TargetProperty="CornerRadius" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasContentCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ContentCornerRadiusProperty}" TargetName="IsDefaulted" TargetProperty="CornerRadius" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasContentCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <!-- APPEARANCE END -->
    </dxi:RenderTemplate.Triggers>
  </dxi:RenderTemplate>
  <!-- Separator -->
  <dxi:RenderTemplate x:Key="{dxt:DropDownButtonThemeKey ResourceKey=SeparatorBorderTemplate}">
    <dxi:RenderPanel>
      <dxi:RenderBorder Name="IsDefault" BorderBrush="#FFE3E3E3" BorderThickness="1,1,0,1" cs:id="RenderBorder_0001" x:Uid="@BorderBrush=Button.SimpleButtonBorder" />
      <dxi:RenderBorder Name="IsDefaulted" BorderBrush="#FF005FBA" BorderThickness="1,0,0,0" Visibility="Collapsed" cs:id="RenderBorder_0002" x:Uid="@BorderBrush=Accent" />
    </dxi:RenderPanel>
    <dxi:RenderTemplate.Triggers>
      <dxi:RenderStateGroup Name="DefaultedStates">
        <dxi:RenderStateTrigger Name="NotDefaulted">
          <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Collapsed" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="IsDefaulted">
          <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Visible" />
        </dxi:RenderStateTrigger>
      </dxi:RenderStateGroup>
      <dxi:RenderStateGroup Name="VisualStates">
        <dxi:RenderStateTrigger Name="Normal">
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FFE3E3E3" cs:id="RenderSetter_0004" x:Uid="@Value=Button.SimpleButtonBorder" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="MouseOver">
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FFD6D6D6" cs:id="RenderSetter_0005" x:Uid="@Value=Button.SimpleButtonHoverBorder" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="Pressed">
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FFE3E3E3" cs:id="RenderSetter_0006" x:Uid="@Value=Button.SimpleButtonBorder" />
        </dxi:RenderStateTrigger>
        <dxi:RenderStateTrigger Name="Checked">
          <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FFD1D1D1" cs:id="RenderSetter_0007" x:Uid="@Value=Foreground.AltMuted" />
        </dxi:RenderStateTrigger>
      </dxi:RenderStateGroup>
      <!-- APPEARANCE BEGIN -->
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.BorderBrushProperty}" TargetName="IsDefault" TargetProperty="BorderBrush" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderBrushProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:SplitButtonAppearanceOptions.SeparatorThicknessProperty}" TargetName="IsDefault" TargetProperty="BorderThickness" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:SplitButtonAppearanceOptions.HasSeparatorThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <!-- APPEARANCE END -->
    </dxi:RenderTemplate.Triggers>
  </dxi:RenderTemplate>
</ResourceDictionary>