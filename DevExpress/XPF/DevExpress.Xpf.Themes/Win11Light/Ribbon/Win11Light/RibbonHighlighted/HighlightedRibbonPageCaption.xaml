<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxri="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/internal" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win11Light.v24.1;component/Ribbon/Win11Light/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <ControlTemplate x:Key="{dxrt:RibbonPageThemeKey ResourceKey=HighlightedCaptionBackgroundTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Grid x:Name="PART_Root">
      <Border x:Name="OuterBorder">
        <Grid>
          <Border x:Name="IsDefault" Background="#FFF4F4F4" CornerRadius="{Binding ElementName=OuterBorder, Path=CornerRadius}" Opacity="0" cs:id="Border_0000" x:Uid="@Background=Control.Background" />
          <Border x:Name="BackgroundBorder" CornerRadius="{Binding ElementName=OuterBorder, Path=CornerRadius}" />
          <Border x:Name="SelectionIndicator" Background="Transparent" CornerRadius="2" Height="3" Margin="3,0,3,2" VerticalAlignment="Bottom" cs:id="Border_0002" />
        </Grid>
      </Border>
      <ContentPresenter x:Name="PART_ContentPresenter" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStateGroup">
          <VisualState x:Name="NormalUnchecked" />
          <VisualState x:Name="NormalChecked" />
          <VisualState x:Name="HoverUnchecked">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionIndicator" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FFE3E3E3" cs:id="SolidColorBrush_0001" x:Uid="@Color=Button.SimpleButtonBorder" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="HoverChecked" />
          <VisualState x:Name="PressedChecked" />
          <VisualState x:Name="Focused" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Page.(dxi:AppearanceOptions.HasBorderThickness)}" Value="True">
        <Setter Property="BorderThickness" TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplatedParent.Page.(dxi:AppearanceOptions.BorderThickness)}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Page.(dxi:AppearanceOptions.HasBorderBrush)}" Value="True">
        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplatedParent.Page.(dxi:AppearanceOptions.BorderBrush)}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Page.(dxi:AppearanceOptions.HasBackground)}" Value="True">
        <Setter Property="Background" TargetName="BackgroundBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.(dxi:AppearanceOptions.Background)}" />
        <Setter Property="Visibility" TargetName="IsDefault" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Page.(dxi:AppearanceOptions.HasCornerRadius)}" Value="True">
        <Setter Property="CornerRadius" TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplatedParent.Page.(dxi:AppearanceOptions.CornerRadius)}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Page.(dxi:AppearanceOptions.HasMargin)}" Value="True">
        <Setter Property="Margin" TargetName="PART_Root" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplatedParent.Page.(dxi:AppearanceOptions.Margin)}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Page.(dxi:AppearanceOptions.HasPadding)}" Value="True">
        <Setter Property="Margin" TargetName="PART_ContentPresenter" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplatedParent.Page.(dxi:AppearanceOptions.Padding)}" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>