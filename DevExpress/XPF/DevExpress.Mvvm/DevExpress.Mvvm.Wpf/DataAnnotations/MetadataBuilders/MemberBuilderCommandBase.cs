#region Copyright (c) 2000-2024 Developer Express Inc.
/*
{*******************************************************************}
{                                                                   }
{       Developer Express .NET Component Library                    }
{                                                                   }
{                                                                   }
{       Copyright (c) 2000-2024 Developer Express Inc.              }
{       ALL RIGHTS RESERVED                                         }
{                                                                   }
{   The entire contents of this file is protected by U.S. and       }
{   International Copyright Laws. Unauthorized reproduction,        }
{   reverse-engineering, and distribution of all or any portion of  }
{   the code contained in this file is strictly prohibited and may  }
{   result in severe civil and criminal penalties and will be       }
{   prosecuted to the maximum extent possible under the law.        }
{                                                                   }
{   RESTRICTIONS                                                    }
{                                                                   }
{   THIS SOURCE CODE AND ALL RESULTING INTERMEDIATE FILES           }
{   ARE CONFIDENTIAL AND PROPRIETARY TRADE                          }
{   SECRETS OF DEVELOPER EXPRESS INC. THE REGISTERED DEVELOPER IS   }
{   LICENSED TO DISTRIBUTE THE PRODUCT AND ALL ACCOMPANYING .NET    }
{   CONTROLS AS PART OF AN EXECUTABLE PROGRAM ONLY.                 }
{                                                                   }
{   THE SOURCE CODE CONTAINED WITHIN THIS FILE AND ALL RELATED      }
{   FILES OR ANY PORTION OF ITS CONTENTS SHALL AT NO TIME BE        }
{   COPIED, TRANSFERRED, SOLD, DISTRIBUTED, OR OTHERWISE MADE       }
{   AVAILABLE TO OTHER INDIVIDUALS WITHOUT EXPRESS WRITTEN CONSENT  }
{   AND PERMISSION FROM DEVELOPER EXPRESS INC.                      }
{                                                                   }
{   CONSULT THE END USER LICENSE AGREEMENT FOR INFORMATION ON       }
{   ADDITIONAL RESTRICTIONS.                                        }
{                                                                   }
{*******************************************************************}
*/
#endregion Copyright (c) 2000-2024 Developer Express Inc.

using DevExpress.Mvvm.Native;
using System;
using System.Linq.Expressions;
using System.Windows.Input;
namespace DevExpress.Mvvm.DataAnnotations {
	public abstract class CommandMetadataBuilderBase<T, TBuilder> :
		MemberMetadataBuilderBase<T, TBuilder, ClassMetadataBuilder<T>> 
		where TBuilder : CommandMetadataBuilderBase<T, TBuilder> {
		internal CommandMetadataBuilderBase(MemberMetadataStorage storage, ClassMetadataBuilder<T> parent)
			: base(storage, parent) {
		}
		public MetadataBuilder<T> EndCommand() {
			return (MetadataBuilder<T>)parent;
		}
#if !FREE
		public TBuilder Parameter<TParameter>(Expression<Func<T, TParameter>> propertyExpression) {
			return AddOrReplaceAttribute(new CommandParameterAttribute(ClassMetadataBuilder<T>.GetPropertyName(propertyExpression)));
		}
		public TBuilder ImageName(string imageName) { return ImageNameCore(imageName); }
		public TBuilder ImageUri(string imageUri) { return ImageUriCore(imageUri); }
		public TBuilder ImageUriLarge(string uri) { return ImageUriLargeCore(uri); }
		public TBuilder ImageUriSmall(string uri) { return ImageUriSmallCore(uri); }
		public TBuilder DisplayName(string name) { return DisplayNameCore(name); }
		public TBuilder DisplayShortName(string shortName) { return DisplayShortNameCore(shortName); }
		public TBuilder Description(string description) { return DescriptionCore(description); }
		public TBuilder NotAutoGenerated() { return NotAutoGeneratedCore(); }
		public TBuilder AutoGenerated() { return AutoGeneratedCore(); }
		public TBuilder DoNotScaffold() { return DoNotScaffoldCore(); }
		public TBuilder DoNotScaffoldDetailCollection() { return DoNotScaffoldDetailCollectionCore(); }
		public TBuilder LocatedAt(int position, PropertyLocation propertyLocation = PropertyLocation.BeforePropertiesWithoutSpecifiedLocation) { return LocatedAtCore(position, propertyLocation); }
#endif
	}
}
